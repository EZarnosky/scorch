#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.SystemCenter.Orchestrator.Integration.Administration
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="orchestrator")]
	public partial class OrchestratorDB : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertACTIONSERVERS(ACTIONSERVERS instance);
    partial void UpdateACTIONSERVERS(ACTIONSERVERS instance);
    partial void DeleteACTIONSERVERS(ACTIONSERVERS instance);
    partial void InsertAUDITEVENTS(AUDITEVENTS instance);
    partial void UpdateAUDITEVENTS(AUDITEVENTS instance);
    partial void DeleteAUDITEVENTS(AUDITEVENTS instance);
    partial void InsertCAPS(CAPS instance);
    partial void UpdateCAPS(CAPS instance);
    partial void DeleteCAPS(CAPS instance);
    partial void InsertCHECK_IN_HISTORY(CHECK_IN_HISTORY instance);
    partial void UpdateCHECK_IN_HISTORY(CHECK_IN_HISTORY instance);
    partial void DeleteCHECK_IN_HISTORY(CHECK_IN_HISTORY instance);
    partial void InsertCLIENTCONNECTIONS(CLIENTCONNECTIONS instance);
    partial void UpdateCLIENTCONNECTIONS(CLIENTCONNECTIONS instance);
    partial void DeleteCLIENTCONNECTIONS(CLIENTCONNECTIONS instance);
    partial void InsertCOMPUTERGROUPS(COMPUTERGROUPS instance);
    partial void UpdateCOMPUTERGROUPS(COMPUTERGROUPS instance);
    partial void DeleteCOMPUTERGROUPS(COMPUTERGROUPS instance);
    partial void InsertCONFIGURATION(CONFIGURATION instance);
    partial void UpdateCONFIGURATION(CONFIGURATION instance);
    partial void DeleteCONFIGURATION(CONFIGURATION instance);
    partial void InsertCOUNTER_STATUS(COUNTER_STATUS instance);
    partial void UpdateCOUNTER_STATUS(COUNTER_STATUS instance);
    partial void DeleteCOUNTER_STATUS(COUNTER_STATUS instance);
    partial void InsertCOUNTERS(COUNTERS instance);
    partial void UpdateCOUNTERS(COUNTERS instance);
    partial void DeleteCOUNTERS(COUNTERS instance);
    partial void InsertCUSTOM_START_PARAMETERS(CUSTOM_START_PARAMETERS instance);
    partial void UpdateCUSTOM_START_PARAMETERS(CUSTOM_START_PARAMETERS instance);
    partial void DeleteCUSTOM_START_PARAMETERS(CUSTOM_START_PARAMETERS instance);
    partial void InsertEMAIL_ATTACHMENTS(EMAIL_ATTACHMENTS instance);
    partial void UpdateEMAIL_ATTACHMENTS(EMAIL_ATTACHMENTS instance);
    partial void DeleteEMAIL_ATTACHMENTS(EMAIL_ATTACHMENTS instance);
    partial void InsertEMAIL_RECIPIENTS(EMAIL_RECIPIENTS instance);
    partial void UpdateEMAIL_RECIPIENTS(EMAIL_RECIPIENTS instance);
    partial void DeleteEMAIL_RECIPIENTS(EMAIL_RECIPIENTS instance);
    partial void InsertENCRYPTION_RUNDECRYPTION(ENCRYPTION_RUNDECRYPTION instance);
    partial void UpdateENCRYPTION_RUNDECRYPTION(ENCRYPTION_RUNDECRYPTION instance);
    partial void DeleteENCRYPTION_RUNDECRYPTION(ENCRYPTION_RUNDECRYPTION instance);
    partial void InsertENCRYPTION_RUNENCRYPTION(ENCRYPTION_RUNENCRYPTION instance);
    partial void UpdateENCRYPTION_RUNENCRYPTION(ENCRYPTION_RUNENCRYPTION instance);
    partial void DeleteENCRYPTION_RUNENCRYPTION(ENCRYPTION_RUNENCRYPTION instance);
    partial void InsertEVENT_DATETIME(EVENT_DATETIME instance);
    partial void UpdateEVENT_DATETIME(EVENT_DATETIME instance);
    partial void DeleteEVENT_DATETIME(EVENT_DATETIME instance);
    partial void InsertEVENT_DISKSPACE(EVENT_DISKSPACE instance);
    partial void UpdateEVENT_DISKSPACE(EVENT_DISKSPACE instance);
    partial void DeleteEVENT_DISKSPACE(EVENT_DISKSPACE instance);
    partial void InsertEVENT_DISKSPACE_DRIVEINFO(EVENT_DISKSPACE_DRIVEINFO instance);
    partial void UpdateEVENT_DISKSPACE_DRIVEINFO(EVENT_DISKSPACE_DRIVEINFO instance);
    partial void DeleteEVENT_DISKSPACE_DRIVEINFO(EVENT_DISKSPACE_DRIVEINFO instance);
    partial void InsertEVENT_EVENTLOG(EVENT_EVENTLOG instance);
    partial void UpdateEVENT_EVENTLOG(EVENT_EVENTLOG instance);
    partial void DeleteEVENT_EVENTLOG(EVENT_EVENTLOG instance);
    partial void InsertEVENT_EVENTLOGFILTER(EVENT_EVENTLOGFILTER instance);
    partial void UpdateEVENT_EVENTLOGFILTER(EVENT_EVENTLOGFILTER instance);
    partial void DeleteEVENT_EVENTLOGFILTER(EVENT_EVENTLOGFILTER instance);
    partial void InsertEVENT_MONITORCOMPUTERIP(EVENT_MONITORCOMPUTERIP instance);
    partial void UpdateEVENT_MONITORCOMPUTERIP(EVENT_MONITORCOMPUTERIP instance);
    partial void DeleteEVENT_MONITORCOMPUTERIP(EVENT_MONITORCOMPUTERIP instance);
    partial void InsertEVENT_MONITORINTERNET(EVENT_MONITORINTERNET instance);
    partial void UpdateEVENT_MONITORINTERNET(EVENT_MONITORINTERNET instance);
    partial void DeleteEVENT_MONITORINTERNET(EVENT_MONITORINTERNET instance);
    partial void InsertEVENT_PROCESS(EVENT_PROCESS instance);
    partial void UpdateEVENT_PROCESS(EVENT_PROCESS instance);
    partial void DeleteEVENT_PROCESS(EVENT_PROCESS instance);
    partial void InsertEVENT_SERVICE(EVENT_SERVICE instance);
    partial void UpdateEVENT_SERVICE(EVENT_SERVICE instance);
    partial void DeleteEVENT_SERVICE(EVENT_SERVICE instance);
    partial void InsertEVENT_SERVICESTARTED(EVENT_SERVICESTARTED instance);
    partial void UpdateEVENT_SERVICESTARTED(EVENT_SERVICESTARTED instance);
    partial void DeleteEVENT_SERVICESTARTED(EVENT_SERVICESTARTED instance);
    partial void InsertEVENT_SNMPMONITORTRAP(EVENT_SNMPMONITORTRAP instance);
    partial void UpdateEVENT_SNMPMONITORTRAP(EVENT_SNMPMONITORTRAP instance);
    partial void DeleteEVENT_SNMPMONITORTRAP(EVENT_SNMPMONITORTRAP instance);
    partial void InsertEVENT_WMI(EVENT_WMI instance);
    partial void UpdateEVENT_WMI(EVENT_WMI instance);
    partial void DeleteEVENT_WMI(EVENT_WMI instance);
    partial void InsertEVENTS(EVENTS instance);
    partial void UpdateEVENTS(EVENTS instance);
    partial void DeleteEVENTS(EVENTS instance);
    partial void InsertFM_COPYFILE(FM_COPYFILE instance);
    partial void UpdateFM_COPYFILE(FM_COPYFILE instance);
    partial void DeleteFM_COPYFILE(FM_COPYFILE instance);
    partial void InsertFM_CREATEFOLDER(FM_CREATEFOLDER instance);
    partial void UpdateFM_CREATEFOLDER(FM_CREATEFOLDER instance);
    partial void DeleteFM_CREATEFOLDER(FM_CREATEFOLDER instance);
    partial void InsertFM_DELETEFILE(FM_DELETEFILE instance);
    partial void UpdateFM_DELETEFILE(FM_DELETEFILE instance);
    partial void DeleteFM_DELETEFILE(FM_DELETEFILE instance);
    partial void InsertFM_DELETEFOLDER(FM_DELETEFOLDER instance);
    partial void UpdateFM_DELETEFOLDER(FM_DELETEFOLDER instance);
    partial void DeleteFM_DELETEFOLDER(FM_DELETEFOLDER instance);
    partial void InsertFM_FILEMONITOR(FM_FILEMONITOR instance);
    partial void UpdateFM_FILEMONITOR(FM_FILEMONITOR instance);
    partial void DeleteFM_FILEMONITOR(FM_FILEMONITOR instance);
    partial void InsertFM_FOLDERMONITOR(FM_FOLDERMONITOR instance);
    partial void UpdateFM_FOLDERMONITOR(FM_FOLDERMONITOR instance);
    partial void DeleteFM_FOLDERMONITOR(FM_FOLDERMONITOR instance);
    partial void InsertFM_GETFILESTATUS(FM_GETFILESTATUS instance);
    partial void UpdateFM_GETFILESTATUS(FM_GETFILESTATUS instance);
    partial void DeleteFM_GETFILESTATUS(FM_GETFILESTATUS instance);
    partial void InsertFM_MOVEFILE(FM_MOVEFILE instance);
    partial void UpdateFM_MOVEFILE(FM_MOVEFILE instance);
    partial void DeleteFM_MOVEFILE(FM_MOVEFILE instance);
    partial void InsertFM_MOVEFOLDER(FM_MOVEFOLDER instance);
    partial void UpdateFM_MOVEFOLDER(FM_MOVEFOLDER instance);
    partial void DeleteFM_MOVEFOLDER(FM_MOVEFOLDER instance);
    partial void InsertFM_RENAMEFILE(FM_RENAMEFILE instance);
    partial void UpdateFM_RENAMEFILE(FM_RENAMEFILE instance);
    partial void DeleteFM_RENAMEFILE(FM_RENAMEFILE instance);
    partial void InsertFOLDERS(FOLDERS instance);
    partial void UpdateFOLDERS(FOLDERS instance);
    partial void DeleteFOLDERS(FOLDERS instance);
    partial void InsertHP_ILO_CMD(HP_ILO_CMD instance);
    partial void UpdateHP_ILO_CMD(HP_ILO_CMD instance);
    partial void DeleteHP_ILO_CMD(HP_ILO_CMD instance);
    partial void InsertHP_OA_CMD(HP_OA_CMD instance);
    partial void UpdateHP_OA_CMD(HP_OA_CMD instance);
    partial void DeleteHP_OA_CMD(HP_OA_CMD instance);
    partial void InsertINTERNETSTATUS_CLOSE(INTERNETSTATUS_CLOSE instance);
    partial void UpdateINTERNETSTATUS_CLOSE(INTERNETSTATUS_CLOSE instance);
    partial void DeleteINTERNETSTATUS_CLOSE(INTERNETSTATUS_CLOSE instance);
    partial void InsertINTERNETSTATUS_OPENPORT(INTERNETSTATUS_OPENPORT instance);
    partial void UpdateINTERNETSTATUS_OPENPORT(INTERNETSTATUS_OPENPORT instance);
    partial void DeleteINTERNETSTATUS_OPENPORT(INTERNETSTATUS_OPENPORT instance);
    partial void InsertINTERNETSTATUS_RECEIVE(INTERNETSTATUS_RECEIVE instance);
    partial void UpdateINTERNETSTATUS_RECEIVE(INTERNETSTATUS_RECEIVE instance);
    partial void DeleteINTERNETSTATUS_RECEIVE(INTERNETSTATUS_RECEIVE instance);
    partial void InsertINTERNETSTATUS_SEND(INTERNETSTATUS_SEND instance);
    partial void UpdateINTERNETSTATUS_SEND(INTERNETSTATUS_SEND instance);
    partial void DeleteINTERNETSTATUS_SEND(INTERNETSTATUS_SEND instance);
    partial void Insert_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_(_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_ instance);
    partial void Update_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_(_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_ instance);
    partial void Delete_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_(_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_ instance);
    partial void Insert_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_(_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_ instance);
    partial void Update_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_(_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_ instance);
    partial void Delete_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_(_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_ instance);
    partial void InsertLICENSES(LICENSES instance);
    partial void UpdateLICENSES(LICENSES instance);
    partial void DeleteLICENSES(LICENSES instance);
    partial void InsertLINKS(LINKS instance);
    partial void UpdateLINKS(LINKS instance);
    partial void DeleteLINKS(LINKS instance);
    partial void Insert_Microsoft_SystemCenter_Orchestrator_Maintenance___MaintenanceTasks_(_Microsoft_SystemCenter_Orchestrator_Maintenance___MaintenanceTasks_ instance);
    partial void Update_Microsoft_SystemCenter_Orchestrator_Maintenance___MaintenanceTasks_(_Microsoft_SystemCenter_Orchestrator_Maintenance___MaintenanceTasks_ instance);
    partial void Delete_Microsoft_SystemCenter_Orchestrator_Maintenance___MaintenanceTasks_(_Microsoft_SystemCenter_Orchestrator_Maintenance___MaintenanceTasks_ instance);
    partial void InsertMODIFY_COUNTER(MODIFY_COUNTER instance);
    partial void UpdateMODIFY_COUNTER(MODIFY_COUNTER instance);
    partial void DeleteMODIFY_COUNTER(MODIFY_COUNTER instance);
    partial void InsertMONITOR_COUNTER_TRIGGERS(MONITOR_COUNTER_TRIGGERS instance);
    partial void UpdateMONITOR_COUNTER_TRIGGERS(MONITOR_COUNTER_TRIGGERS instance);
    partial void DeleteMONITOR_COUNTER_TRIGGERS(MONITOR_COUNTER_TRIGGERS instance);
    partial void InsertMT_APPENDLINE(MT_APPENDLINE instance);
    partial void UpdateMT_APPENDLINE(MT_APPENDLINE instance);
    partial void DeleteMT_APPENDLINE(MT_APPENDLINE instance);
    partial void InsertMT_DELETELINE(MT_DELETELINE instance);
    partial void UpdateMT_DELETELINE(MT_DELETELINE instance);
    partial void DeleteMT_DELETELINE(MT_DELETELINE instance);
    partial void InsertMT_FINDTEXT(MT_FINDTEXT instance);
    partial void UpdateMT_FINDTEXT(MT_FINDTEXT instance);
    partial void DeleteMT_FINDTEXT(MT_FINDTEXT instance);
    partial void InsertMT_GETLINES(MT_GETLINES instance);
    partial void UpdateMT_GETLINES(MT_GETLINES instance);
    partial void DeleteMT_GETLINES(MT_GETLINES instance);
    partial void InsertMT_INSERTLINE(MT_INSERTLINE instance);
    partial void UpdateMT_INSERTLINE(MT_INSERTLINE instance);
    partial void DeleteMT_INSERTLINE(MT_INSERTLINE instance);
    partial void InsertMT_READLINE(MT_READLINE instance);
    partial void UpdateMT_READLINE(MT_READLINE instance);
    partial void DeleteMT_READLINE(MT_READLINE instance);
    partial void InsertMT_SEARCHANDREPLACE(MT_SEARCHANDREPLACE instance);
    partial void UpdateMT_SEARCHANDREPLACE(MT_SEARCHANDREPLACE instance);
    partial void DeleteMT_SEARCHANDREPLACE(MT_SEARCHANDREPLACE instance);
    partial void InsertOBJECT_AUDIT(OBJECT_AUDIT instance);
    partial void UpdateOBJECT_AUDIT(OBJECT_AUDIT instance);
    partial void DeleteOBJECT_AUDIT(OBJECT_AUDIT instance);
    partial void InsertOBJECTINSTANCEDATA(OBJECTINSTANCEDATA instance);
    partial void UpdateOBJECTINSTANCEDATA(OBJECTINSTANCEDATA instance);
    partial void DeleteOBJECTINSTANCEDATA(OBJECTINSTANCEDATA instance);
    partial void InsertOBJECTINSTANCES(OBJECTINSTANCES instance);
    partial void UpdateOBJECTINSTANCES(OBJECTINSTANCES instance);
    partial void DeleteOBJECTINSTANCES(OBJECTINSTANCES instance);
    partial void InsertOBJECTLOOPING(OBJECTLOOPING instance);
    partial void UpdateOBJECTLOOPING(OBJECTLOOPING instance);
    partial void DeleteOBJECTLOOPING(OBJECTLOOPING instance);
    partial void InsertOBJECTS(OBJECTS instance);
    partial void UpdateOBJECTS(OBJECTS instance);
    partial void DeleteOBJECTS(OBJECTS instance);
    partial void InsertOBJECTTYPES(OBJECTTYPES instance);
    partial void UpdateOBJECTTYPES(OBJECTTYPES instance);
    partial void DeleteOBJECTTYPES(OBJECTTYPES instance);
    partial void InsertOE_DELIVERY_RULES(OE_DELIVERY_RULES instance);
    partial void UpdateOE_DELIVERY_RULES(OE_DELIVERY_RULES instance);
    partial void DeleteOE_DELIVERY_RULES(OE_DELIVERY_RULES instance);
    partial void Insert_Microsoft_SystemCenter_Orchestrator_Internal___Parties_(_Microsoft_SystemCenter_Orchestrator_Internal___Parties_ instance);
    partial void Update_Microsoft_SystemCenter_Orchestrator_Internal___Parties_(_Microsoft_SystemCenter_Orchestrator_Internal___Parties_ instance);
    partial void Delete_Microsoft_SystemCenter_Orchestrator_Internal___Parties_(_Microsoft_SystemCenter_Orchestrator_Internal___Parties_ instance);
    partial void Insert_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_(_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_ instance);
    partial void Update_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_(_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_ instance);
    partial void Delete_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_(_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_ instance);
    partial void InsertPERMISSIONS(PERMISSIONS instance);
    partial void UpdatePERMISSIONS(PERMISSIONS instance);
    partial void DeletePERMISSIONS(PERMISSIONS instance);
    partial void InsertPOLICIES(POLICIES instance);
    partial void UpdatePOLICIES(POLICIES instance);
    partial void DeletePOLICIES(POLICIES instance);
    partial void InsertPOLICY_PUBLISH_QUEUE(POLICY_PUBLISH_QUEUE instance);
    partial void UpdatePOLICY_PUBLISH_QUEUE(POLICY_PUBLISH_QUEUE instance);
    partial void DeletePOLICY_PUBLISH_QUEUE(POLICY_PUBLISH_QUEUE instance);
    partial void InsertPOLICYINSTANCES(POLICYINSTANCES instance);
    partial void UpdatePOLICYINSTANCES(POLICYINSTANCES instance);
    partial void DeletePOLICYINSTANCES(POLICYINSTANCES instance);
    partial void InsertPOLICYRETURNDATA(POLICYRETURNDATA instance);
    partial void UpdatePOLICYRETURNDATA(POLICYRETURNDATA instance);
    partial void DeletePOLICYRETURNDATA(POLICYRETURNDATA instance);
    partial void InsertPRODUCTINFO(PRODUCTINFO instance);
    partial void UpdatePRODUCTINFO(PRODUCTINFO instance);
    partial void DeletePRODUCTINFO(PRODUCTINFO instance);
    partial void InsertPUBLISH_POLICY_DATA(PUBLISH_POLICY_DATA instance);
    partial void UpdatePUBLISH_POLICY_DATA(PUBLISH_POLICY_DATA instance);
    partial void DeletePUBLISH_POLICY_DATA(PUBLISH_POLICY_DATA instance);
    partial void InsertREPORTING(REPORTING instance);
    partial void UpdateREPORTING(REPORTING instance);
    partial void DeleteREPORTING(REPORTING instance);
    partial void Insert_Microsoft_SystemCenter_Orchestrator_Internal___Resources_(_Microsoft_SystemCenter_Orchestrator_Internal___Resources_ instance);
    partial void Update_Microsoft_SystemCenter_Orchestrator_Internal___Resources_(_Microsoft_SystemCenter_Orchestrator_Internal___Resources_ instance);
    partial void Delete_Microsoft_SystemCenter_Orchestrator_Internal___Resources_(_Microsoft_SystemCenter_Orchestrator_Internal___Resources_ instance);
    partial void Insert_Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_(_Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_ instance);
    partial void Update_Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_(_Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_ instance);
    partial void Delete_Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_(_Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_ instance);
    partial void Insert_Microsoft_SystemCenter_Orchestrator_Internal___Rights_(_Microsoft_SystemCenter_Orchestrator_Internal___Rights_ instance);
    partial void Update_Microsoft_SystemCenter_Orchestrator_Internal___Rights_(_Microsoft_SystemCenter_Orchestrator_Internal___Rights_ instance);
    partial void Delete_Microsoft_SystemCenter_Orchestrator_Internal___Rights_(_Microsoft_SystemCenter_Orchestrator_Internal___Rights_ instance);
    partial void Insert_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_(_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_ instance);
    partial void Update_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_(_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_ instance);
    partial void Delete_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_(_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_ instance);
    partial void Insert_Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_(_Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_ instance);
    partial void Update_Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_(_Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_ instance);
    partial void Delete_Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_(_Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_ instance);
    partial void InsertRUNDOTNETSCRIPT(RUNDOTNETSCRIPT instance);
    partial void UpdateRUNDOTNETSCRIPT(RUNDOTNETSCRIPT instance);
    partial void DeleteRUNDOTNETSCRIPT(RUNDOTNETSCRIPT instance);
    partial void InsertSATELLITES(SATELLITES instance);
    partial void UpdateSATELLITES(SATELLITES instance);
    partial void DeleteSATELLITES(SATELLITES instance);
    partial void InsertSCCM2007_ADDCOMPUTER(SCCM2007_ADDCOMPUTER instance);
    partial void UpdateSCCM2007_ADDCOMPUTER(SCCM2007_ADDCOMPUTER instance);
    partial void DeleteSCCM2007_ADDCOMPUTER(SCCM2007_ADDCOMPUTER instance);
    partial void InsertSCCM2007_ADVERTISETASK(SCCM2007_ADVERTISETASK instance);
    partial void UpdateSCCM2007_ADVERTISETASK(SCCM2007_ADVERTISETASK instance);
    partial void DeleteSCCM2007_ADVERTISETASK(SCCM2007_ADVERTISETASK instance);
    partial void InsertSCCM2007_CREATEADVERTISEMENT(SCCM2007_CREATEADVERTISEMENT instance);
    partial void UpdateSCCM2007_CREATEADVERTISEMENT(SCCM2007_CREATEADVERTISEMENT instance);
    partial void DeleteSCCM2007_CREATEADVERTISEMENT(SCCM2007_CREATEADVERTISEMENT instance);
    partial void InsertSCCM2007_CREATECOLLECTION(SCCM2007_CREATECOLLECTION instance);
    partial void UpdateSCCM2007_CREATECOLLECTION(SCCM2007_CREATECOLLECTION instance);
    partial void DeleteSCCM2007_CREATECOLLECTION(SCCM2007_CREATECOLLECTION instance);
    partial void InsertSCCM2007_DEL_COLLECTION(SCCM2007_DEL_COLLECTION instance);
    partial void UpdateSCCM2007_DEL_COLLECTION(SCCM2007_DEL_COLLECTION instance);
    partial void DeleteSCCM2007_DEL_COLLECTION(SCCM2007_DEL_COLLECTION instance);
    partial void InsertSCCM2007_DEPLOYSOFTWAREUPDATE(SCCM2007_DEPLOYSOFTWAREUPDATE instance);
    partial void UpdateSCCM2007_DEPLOYSOFTWAREUPDATE(SCCM2007_DEPLOYSOFTWAREUPDATE instance);
    partial void DeleteSCCM2007_DEPLOYSOFTWAREUPDATE(SCCM2007_DEPLOYSOFTWAREUPDATE instance);
    partial void InsertSCCM2007_GETADVSTATUS(SCCM2007_GETADVSTATUS instance);
    partial void UpdateSCCM2007_GETADVSTATUS(SCCM2007_GETADVSTATUS instance);
    partial void DeleteSCCM2007_GETADVSTATUS(SCCM2007_GETADVSTATUS instance);
    partial void InsertSCCM2007_GETCOLLECTION(SCCM2007_GETCOLLECTION instance);
    partial void UpdateSCCM2007_GETCOLLECTION(SCCM2007_GETCOLLECTION instance);
    partial void DeleteSCCM2007_GETCOLLECTION(SCCM2007_GETCOLLECTION instance);
    partial void InsertSCCM2007_GETSUCOMPLIANCE(SCCM2007_GETSUCOMPLIANCE instance);
    partial void UpdateSCCM2007_GETSUCOMPLIANCE(SCCM2007_GETSUCOMPLIANCE instance);
    partial void DeleteSCCM2007_GETSUCOMPLIANCE(SCCM2007_GETSUCOMPLIANCE instance);
    partial void InsertSCCM2007_REFRESHCLIENT(SCCM2007_REFRESHCLIENT instance);
    partial void UpdateSCCM2007_REFRESHCLIENT(SCCM2007_REFRESHCLIENT instance);
    partial void DeleteSCCM2007_REFRESHCLIENT(SCCM2007_REFRESHCLIENT instance);
    partial void InsertSCCM2007_REFRESHCOLLECTION(SCCM2007_REFRESHCOLLECTION instance);
    partial void UpdateSCCM2007_REFRESHCOLLECTION(SCCM2007_REFRESHCOLLECTION instance);
    partial void DeleteSCCM2007_REFRESHCOLLECTION(SCCM2007_REFRESHCOLLECTION instance);
    partial void InsertSCCM2012_ADDCOLLECTIONRULE(SCCM2012_ADDCOLLECTIONRULE instance);
    partial void UpdateSCCM2012_ADDCOLLECTIONRULE(SCCM2012_ADDCOLLECTIONRULE instance);
    partial void DeleteSCCM2012_ADDCOLLECTIONRULE(SCCM2012_ADDCOLLECTIONRULE instance);
    partial void InsertSCCM2012_CREATECOLLECTION(SCCM2012_CREATECOLLECTION instance);
    partial void UpdateSCCM2012_CREATECOLLECTION(SCCM2012_CREATECOLLECTION instance);
    partial void DeleteSCCM2012_CREATECOLLECTION(SCCM2012_CREATECOLLECTION instance);
    partial void InsertSCCM2012_DELCOLLECTION(SCCM2012_DELCOLLECTION instance);
    partial void UpdateSCCM2012_DELCOLLECTION(SCCM2012_DELCOLLECTION instance);
    partial void DeleteSCCM2012_DELCOLLECTION(SCCM2012_DELCOLLECTION instance);
    partial void InsertSCCM2012_DELCOLLECTIONRULE(SCCM2012_DELCOLLECTIONRULE instance);
    partial void UpdateSCCM2012_DELCOLLECTIONRULE(SCCM2012_DELCOLLECTIONRULE instance);
    partial void DeleteSCCM2012_DELCOLLECTIONRULE(SCCM2012_DELCOLLECTIONRULE instance);
    partial void InsertSCCM2012_DEPLOYAPPLICATION(SCCM2012_DEPLOYAPPLICATION instance);
    partial void UpdateSCCM2012_DEPLOYAPPLICATION(SCCM2012_DEPLOYAPPLICATION instance);
    partial void DeleteSCCM2012_DEPLOYAPPLICATION(SCCM2012_DEPLOYAPPLICATION instance);
    partial void InsertSCCM2012_DEPLOYPROGRAM(SCCM2012_DEPLOYPROGRAM instance);
    partial void UpdateSCCM2012_DEPLOYPROGRAM(SCCM2012_DEPLOYPROGRAM instance);
    partial void DeleteSCCM2012_DEPLOYPROGRAM(SCCM2012_DEPLOYPROGRAM instance);
    partial void InsertSCCM2012_DEPLOYSOFTWAREUPDATE(SCCM2012_DEPLOYSOFTWAREUPDATE instance);
    partial void UpdateSCCM2012_DEPLOYSOFTWAREUPDATE(SCCM2012_DEPLOYSOFTWAREUPDATE instance);
    partial void DeleteSCCM2012_DEPLOYSOFTWAREUPDATE(SCCM2012_DEPLOYSOFTWAREUPDATE instance);
    partial void InsertSCCM2012_DEPLOYTASKSEQUENCE(SCCM2012_DEPLOYTASKSEQUENCE instance);
    partial void UpdateSCCM2012_DEPLOYTASKSEQUENCE(SCCM2012_DEPLOYTASKSEQUENCE instance);
    partial void DeleteSCCM2012_DEPLOYTASKSEQUENCE(SCCM2012_DEPLOYTASKSEQUENCE instance);
    partial void InsertSCCM2012_GETCOLLECTIONMEMBER(SCCM2012_GETCOLLECTIONMEMBER instance);
    partial void UpdateSCCM2012_GETCOLLECTIONMEMBER(SCCM2012_GETCOLLECTIONMEMBER instance);
    partial void DeleteSCCM2012_GETCOLLECTIONMEMBER(SCCM2012_GETCOLLECTIONMEMBER instance);
    partial void InsertSCCM2012_GETDEPLOYMENTSTATUS(SCCM2012_GETDEPLOYMENTSTATUS instance);
    partial void UpdateSCCM2012_GETDEPLOYMENTSTATUS(SCCM2012_GETDEPLOYMENTSTATUS instance);
    partial void DeleteSCCM2012_GETDEPLOYMENTSTATUS(SCCM2012_GETDEPLOYMENTSTATUS instance);
    partial void InsertSCCM2012_PERFORMCLIENTACTION(SCCM2012_PERFORMCLIENTACTION instance);
    partial void UpdateSCCM2012_PERFORMCLIENTACTION(SCCM2012_PERFORMCLIENTACTION instance);
    partial void DeleteSCCM2012_PERFORMCLIENTACTION(SCCM2012_PERFORMCLIENTACTION instance);
    partial void InsertSCCM2012_UPDCOLLECTIONMEMBERSHIP(SCCM2012_UPDCOLLECTIONMEMBERSHIP instance);
    partial void UpdateSCCM2012_UPDCOLLECTIONMEMBERSHIP(SCCM2012_UPDCOLLECTIONMEMBERSHIP instance);
    partial void DeleteSCCM2012_UPDCOLLECTIONMEMBERSHIP(SCCM2012_UPDCOLLECTIONMEMBERSHIP instance);
    partial void InsertSCHEDULES(SCHEDULES instance);
    partial void UpdateSCHEDULES(SCHEDULES instance);
    partial void DeleteSCHEDULES(SCHEDULES instance);
    partial void InsertSCOM2007_CREATEALERT(SCOM2007_CREATEALERT instance);
    partial void UpdateSCOM2007_CREATEALERT(SCOM2007_CREATEALERT instance);
    partial void DeleteSCOM2007_CREATEALERT(SCOM2007_CREATEALERT instance);
    partial void InsertSCOM2007_GETALERTS(SCOM2007_GETALERTS instance);
    partial void UpdateSCOM2007_GETALERTS(SCOM2007_GETALERTS instance);
    partial void DeleteSCOM2007_GETALERTS(SCOM2007_GETALERTS instance);
    partial void InsertSCOM2007_GETMONITORS(SCOM2007_GETMONITORS instance);
    partial void UpdateSCOM2007_GETMONITORS(SCOM2007_GETMONITORS instance);
    partial void DeleteSCOM2007_GETMONITORS(SCOM2007_GETMONITORS instance);
    partial void InsertSCOM2007_MONALERT(SCOM2007_MONALERT instance);
    partial void UpdateSCOM2007_MONALERT(SCOM2007_MONALERT instance);
    partial void DeleteSCOM2007_MONALERT(SCOM2007_MONALERT instance);
    partial void InsertSCOM2007_MONHEALTH(SCOM2007_MONHEALTH instance);
    partial void UpdateSCOM2007_MONHEALTH(SCOM2007_MONHEALTH instance);
    partial void DeleteSCOM2007_MONHEALTH(SCOM2007_MONHEALTH instance);
    partial void InsertSCOM2007_SCHEDMAINT(SCOM2007_SCHEDMAINT instance);
    partial void UpdateSCOM2007_SCHEDMAINT(SCOM2007_SCHEDMAINT instance);
    partial void DeleteSCOM2007_SCHEDMAINT(SCOM2007_SCHEDMAINT instance);
    partial void InsertSCOM2007_STOPMAINT(SCOM2007_STOPMAINT instance);
    partial void UpdateSCOM2007_STOPMAINT(SCOM2007_STOPMAINT instance);
    partial void DeleteSCOM2007_STOPMAINT(SCOM2007_STOPMAINT instance);
    partial void InsertSCOM2007_UPDATEALERT(SCOM2007_UPDATEALERT instance);
    partial void UpdateSCOM2007_UPDATEALERT(SCOM2007_UPDATEALERT instance);
    partial void DeleteSCOM2007_UPDATEALERT(SCOM2007_UPDATEALERT instance);
    partial void InsertSCOM2012_CREATEALERT(SCOM2012_CREATEALERT instance);
    partial void UpdateSCOM2012_CREATEALERT(SCOM2012_CREATEALERT instance);
    partial void DeleteSCOM2012_CREATEALERT(SCOM2012_CREATEALERT instance);
    partial void InsertSCOM2012_GETALERTS(SCOM2012_GETALERTS instance);
    partial void UpdateSCOM2012_GETALERTS(SCOM2012_GETALERTS instance);
    partial void DeleteSCOM2012_GETALERTS(SCOM2012_GETALERTS instance);
    partial void InsertSCOM2012_GETMONITORS(SCOM2012_GETMONITORS instance);
    partial void UpdateSCOM2012_GETMONITORS(SCOM2012_GETMONITORS instance);
    partial void DeleteSCOM2012_GETMONITORS(SCOM2012_GETMONITORS instance);
    partial void InsertSCOM2012_MONALERT(SCOM2012_MONALERT instance);
    partial void UpdateSCOM2012_MONALERT(SCOM2012_MONALERT instance);
    partial void DeleteSCOM2012_MONALERT(SCOM2012_MONALERT instance);
    partial void InsertSCOM2012_MONHEALTH(SCOM2012_MONHEALTH instance);
    partial void UpdateSCOM2012_MONHEALTH(SCOM2012_MONHEALTH instance);
    partial void DeleteSCOM2012_MONHEALTH(SCOM2012_MONHEALTH instance);
    partial void InsertSCOM2012_SCHEDMAINT(SCOM2012_SCHEDMAINT instance);
    partial void UpdateSCOM2012_SCHEDMAINT(SCOM2012_SCHEDMAINT instance);
    partial void DeleteSCOM2012_SCHEDMAINT(SCOM2012_SCHEDMAINT instance);
    partial void InsertSCOM2012_STOPMAINT(SCOM2012_STOPMAINT instance);
    partial void UpdateSCOM2012_STOPMAINT(SCOM2012_STOPMAINT instance);
    partial void DeleteSCOM2012_STOPMAINT(SCOM2012_STOPMAINT instance);
    partial void InsertSCOM2012_UPDATEALERT(SCOM2012_UPDATEALERT instance);
    partial void UpdateSCOM2012_UPDATEALERT(SCOM2012_UPDATEALERT instance);
    partial void DeleteSCOM2012_UPDATEALERT(SCOM2012_UPDATEALERT instance);
    partial void InsertSCSM2012_CREATEOBJECT(SCSM2012_CREATEOBJECT instance);
    partial void UpdateSCSM2012_CREATEOBJECT(SCSM2012_CREATEOBJECT instance);
    partial void DeleteSCSM2012_CREATEOBJECT(SCSM2012_CREATEOBJECT instance);
    partial void InsertSCSM2012_CREATEREL(SCSM2012_CREATEREL instance);
    partial void UpdateSCSM2012_CREATEREL(SCSM2012_CREATEREL instance);
    partial void DeleteSCSM2012_CREATEREL(SCSM2012_CREATEREL instance);
    partial void InsertSCSM2012_CREATERELOBJ(SCSM2012_CREATERELOBJ instance);
    partial void UpdateSCSM2012_CREATERELOBJ(SCSM2012_CREATERELOBJ instance);
    partial void DeleteSCSM2012_CREATERELOBJ(SCSM2012_CREATERELOBJ instance);
    partial void InsertSCSM2012_CRTCHGTMP(SCSM2012_CRTCHGTMP instance);
    partial void UpdateSCSM2012_CRTCHGTMP(SCSM2012_CRTCHGTMP instance);
    partial void DeleteSCSM2012_CRTCHGTMP(SCSM2012_CRTCHGTMP instance);
    partial void InsertSCSM2012_CRTINCTMP(SCSM2012_CRTINCTMP instance);
    partial void UpdateSCSM2012_CRTINCTMP(SCSM2012_CRTINCTMP instance);
    partial void DeleteSCSM2012_CRTINCTMP(SCSM2012_CRTINCTMP instance);
    partial void InsertSCSM2012_DELETEREL(SCSM2012_DELETEREL instance);
    partial void UpdateSCSM2012_DELETEREL(SCSM2012_DELETEREL instance);
    partial void DeleteSCSM2012_DELETEREL(SCSM2012_DELETEREL instance);
    partial void InsertSCSM2012_GETACT(SCSM2012_GETACT instance);
    partial void UpdateSCSM2012_GETACT(SCSM2012_GETACT instance);
    partial void DeleteSCSM2012_GETACT(SCSM2012_GETACT instance);
    partial void InsertSCSM2012_GETOBJECT(SCSM2012_GETOBJECT instance);
    partial void UpdateSCSM2012_GETOBJECT(SCSM2012_GETOBJECT instance);
    partial void DeleteSCSM2012_GETOBJECT(SCSM2012_GETOBJECT instance);
    partial void InsertSCSM2012_GETRELOBJ(SCSM2012_GETRELOBJ instance);
    partial void UpdateSCSM2012_GETRELOBJ(SCSM2012_GETRELOBJ instance);
    partial void DeleteSCSM2012_GETRELOBJ(SCSM2012_GETRELOBJ instance);
    partial void InsertSCSM2012_MONOBJECT(SCSM2012_MONOBJECT instance);
    partial void UpdateSCSM2012_MONOBJECT(SCSM2012_MONOBJECT instance);
    partial void DeleteSCSM2012_MONOBJECT(SCSM2012_MONOBJECT instance);
    partial void InsertSCSM2012_UPDATEACT(SCSM2012_UPDATEACT instance);
    partial void UpdateSCSM2012_UPDATEACT(SCSM2012_UPDATEACT instance);
    partial void DeleteSCSM2012_UPDATEACT(SCSM2012_UPDATEACT instance);
    partial void InsertSCSM2012_UPDATEATTACH(SCSM2012_UPDATEATTACH instance);
    partial void UpdateSCSM2012_UPDATEATTACH(SCSM2012_UPDATEATTACH instance);
    partial void DeleteSCSM2012_UPDATEATTACH(SCSM2012_UPDATEATTACH instance);
    partial void InsertSCSM2012_UPDATEOBJECT(SCSM2012_UPDATEOBJECT instance);
    partial void UpdateSCSM2012_UPDATEOBJECT(SCSM2012_UPDATEOBJECT instance);
    partial void DeleteSCSM2012_UPDATEOBJECT(SCSM2012_UPDATEOBJECT instance);
    partial void Insert_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_(_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_ instance);
    partial void Update_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_(_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_ instance);
    partial void Delete_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_(_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_ instance);
    partial void Insert_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_(_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_ instance);
    partial void Update_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_(_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_ instance);
    partial void Delete_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_(_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_ instance);
    partial void InsertSETTINGS(SETTINGS instance);
    partial void UpdateSETTINGS(SETTINGS instance);
    partial void DeleteSETTINGS(SETTINGS instance);
    partial void InsertSIDS(SIDS instance);
    partial void UpdateSIDS(SIDS instance);
    partial void DeleteSIDS(SIDS instance);
    partial void InsertSSH_RUNCOMMAND(SSH_RUNCOMMAND instance);
    partial void UpdateSSH_RUNCOMMAND(SSH_RUNCOMMAND instance);
    partial void DeleteSSH_RUNCOMMAND(SSH_RUNCOMMAND instance);
    partial void Insert_Microsoft_SystemCenter_Orchestrator_Statistics_Internal___Statistics_(_Microsoft_SystemCenter_Orchestrator_Statistics_Internal___Statistics_ instance);
    partial void Update_Microsoft_SystemCenter_Orchestrator_Statistics_Internal___Statistics_(_Microsoft_SystemCenter_Orchestrator_Statistics_Internal___Statistics_ instance);
    partial void Delete_Microsoft_SystemCenter_Orchestrator_Statistics_Internal___Statistics_(_Microsoft_SystemCenter_Orchestrator_Statistics_Internal___Statistics_ instance);
    partial void InsertSTATUS_SCHEDULE(STATUS_SCHEDULE instance);
    partial void UpdateSTATUS_SCHEDULE(STATUS_SCHEDULE instance);
    partial void DeleteSTATUS_SCHEDULE(STATUS_SCHEDULE instance);
    partial void InsertTASK_APPLY_XSLT(TASK_APPLY_XSLT instance);
    partial void UpdateTASK_APPLY_XSLT(TASK_APPLY_XSLT instance);
    partial void DeleteTASK_APPLY_XSLT(TASK_APPLY_XSLT instance);
    partial void InsertTASK_COMPARE(TASK_COMPARE instance);
    partial void UpdateTASK_COMPARE(TASK_COMPARE instance);
    partial void DeleteTASK_COMPARE(TASK_COMPARE instance);
    partial void InsertTASK_COMPRESS(TASK_COMPRESS instance);
    partial void UpdateTASK_COMPRESS(TASK_COMPRESS instance);
    partial void DeleteTASK_COMPRESS(TASK_COMPRESS instance);
    partial void InsertTASK_COMPUTERIP(TASK_COMPUTERIP instance);
    partial void UpdateTASK_COMPUTERIP(TASK_COMPUTERIP instance);
    partial void DeleteTASK_COMPUTERIP(TASK_COMPUTERIP instance);
    partial void InsertTASK_DIALUPNETWORKING(TASK_DIALUPNETWORKING instance);
    partial void UpdateTASK_DIALUPNETWORKING(TASK_DIALUPNETWORKING instance);
    partial void DeleteTASK_DIALUPNETWORKING(TASK_DIALUPNETWORKING instance);
    partial void InsertTASK_DIALUPNETWORKINGSTATUS(TASK_DIALUPNETWORKINGSTATUS instance);
    partial void UpdateTASK_DIALUPNETWORKINGSTATUS(TASK_DIALUPNETWORKINGSTATUS instance);
    partial void DeleteTASK_DIALUPNETWORKINGSTATUS(TASK_DIALUPNETWORKINGSTATUS instance);
    partial void InsertTASK_DISCONNECTNETWORKPATH(TASK_DISCONNECTNETWORKPATH instance);
    partial void UpdateTASK_DISCONNECTNETWORKPATH(TASK_DISCONNECTNETWORKPATH instance);
    partial void DeleteTASK_DISCONNECTNETWORKPATH(TASK_DISCONNECTNETWORKPATH instance);
    partial void InsertTASK_EMAIL(TASK_EMAIL instance);
    partial void UpdateTASK_EMAIL(TASK_EMAIL instance);
    partial void DeleteTASK_EMAIL(TASK_EMAIL instance);
    partial void InsertTASK_ENDPROCESS(TASK_ENDPROCESS instance);
    partial void UpdateTASK_ENDPROCESS(TASK_ENDPROCESS instance);
    partial void DeleteTASK_ENDPROCESS(TASK_ENDPROCESS instance);
    partial void InsertTASK_FILEMANAGEMENT(TASK_FILEMANAGEMENT instance);
    partial void UpdateTASK_FILEMANAGEMENT(TASK_FILEMANAGEMENT instance);
    partial void DeleteTASK_FILEMANAGEMENT(TASK_FILEMANAGEMENT instance);
    partial void InsertTASK_FILEMANAGEMENTRENAME(TASK_FILEMANAGEMENTRENAME instance);
    partial void UpdateTASK_FILEMANAGEMENTRENAME(TASK_FILEMANAGEMENTRENAME instance);
    partial void DeleteTASK_FILEMANAGEMENTRENAME(TASK_FILEMANAGEMENTRENAME instance);
    partial void InsertTASK_FORMATDATE(TASK_FORMATDATE instance);
    partial void UpdateTASK_FORMATDATE(TASK_FORMATDATE instance);
    partial void DeleteTASK_FORMATDATE(TASK_FORMATDATE instance);
    partial void InsertTASK_GETDISKSPACESTATUS(TASK_GETDISKSPACESTATUS instance);
    partial void UpdateTASK_GETDISKSPACESTATUS(TASK_GETDISKSPACESTATUS instance);
    partial void DeleteTASK_GETDISKSPACESTATUS(TASK_GETDISKSPACESTATUS instance);
    partial void InsertTASK_INTERNETSTATUS(TASK_INTERNETSTATUS instance);
    partial void UpdateTASK_INTERNETSTATUS(TASK_INTERNETSTATUS instance);
    partial void DeleteTASK_INTERNETSTATUS(TASK_INTERNETSTATUS instance);
    partial void InsertTASK_JUNCTION(TASK_JUNCTION instance);
    partial void UpdateTASK_JUNCTION(TASK_JUNCTION instance);
    partial void DeleteTASK_JUNCTION(TASK_JUNCTION instance);
    partial void InsertTASK_MAPNETWORKPATH(TASK_MAPNETWORKPATH instance);
    partial void UpdateTASK_MAPNETWORKPATH(TASK_MAPNETWORKPATH instance);
    partial void DeleteTASK_MAPNETWORKPATH(TASK_MAPNETWORKPATH instance);
    partial void InsertTASK_MAPVALUES(TASK_MAPVALUES instance);
    partial void UpdateTASK_MAPVALUES(TASK_MAPVALUES instance);
    partial void DeleteTASK_MAPVALUES(TASK_MAPVALUES instance);
    partial void InsertTASK_MESSAGEEVENTLOG(TASK_MESSAGEEVENTLOG instance);
    partial void UpdateTASK_MESSAGEEVENTLOG(TASK_MESSAGEEVENTLOG instance);
    partial void DeleteTASK_MESSAGEEVENTLOG(TASK_MESSAGEEVENTLOG instance);
    partial void InsertTASK_PROCESSSTATUS(TASK_PROCESSSTATUS instance);
    partial void UpdateTASK_PROCESSSTATUS(TASK_PROCESSSTATUS instance);
    partial void DeleteTASK_PROCESSSTATUS(TASK_PROCESSSTATUS instance);
    partial void InsertTASK_QUERY_XML(TASK_QUERY_XML instance);
    partial void UpdateTASK_QUERY_XML(TASK_QUERY_XML instance);
    partial void DeleteTASK_QUERY_XML(TASK_QUERY_XML instance);
    partial void InsertTASK_QUERYDATABASE(TASK_QUERYDATABASE instance);
    partial void UpdateTASK_QUERYDATABASE(TASK_QUERYDATABASE instance);
    partial void DeleteTASK_QUERYDATABASE(TASK_QUERYDATABASE instance);
    partial void InsertTASK_QUERYWMI(TASK_QUERYWMI instance);
    partial void UpdateTASK_QUERYWMI(TASK_QUERYWMI instance);
    partial void DeleteTASK_QUERYWMI(TASK_QUERYWMI instance);
    partial void InsertTASK_RANDOM_STRING(TASK_RANDOM_STRING instance);
    partial void UpdateTASK_RANDOM_STRING(TASK_RANDOM_STRING instance);
    partial void DeleteTASK_RANDOM_STRING(TASK_RANDOM_STRING instance);
    partial void InsertTASK_READTEXTLOG(TASK_READTEXTLOG instance);
    partial void UpdateTASK_READTEXTLOG(TASK_READTEXTLOG instance);
    partial void DeleteTASK_READTEXTLOG(TASK_READTEXTLOG instance);
    partial void InsertTASK_RUNPROGRAM(TASK_RUNPROGRAM instance);
    partial void UpdateTASK_RUNPROGRAM(TASK_RUNPROGRAM instance);
    partial void DeleteTASK_RUNPROGRAM(TASK_RUNPROGRAM instance);
    partial void InsertTASK_SAVEEVENTLOGENTRIES(TASK_SAVEEVENTLOGENTRIES instance);
    partial void UpdateTASK_SAVEEVENTLOGENTRIES(TASK_SAVEEVENTLOGENTRIES instance);
    partial void DeleteTASK_SAVEEVENTLOGENTRIES(TASK_SAVEEVENTLOGENTRIES instance);
    partial void InsertTASK_SERVICESTATUS(TASK_SERVICESTATUS instance);
    partial void UpdateTASK_SERVICESTATUS(TASK_SERVICESTATUS instance);
    partial void DeleteTASK_SERVICESTATUS(TASK_SERVICESTATUS instance);
    partial void InsertTASK_SNMPGETVARIABLE(TASK_SNMPGETVARIABLE instance);
    partial void UpdateTASK_SNMPGETVARIABLE(TASK_SNMPGETVARIABLE instance);
    partial void DeleteTASK_SNMPGETVARIABLE(TASK_SNMPGETVARIABLE instance);
    partial void InsertTASK_SNMPSENDTRAP(TASK_SNMPSENDTRAP instance);
    partial void UpdateTASK_SNMPSENDTRAP(TASK_SNMPSENDTRAP instance);
    partial void DeleteTASK_SNMPSENDTRAP(TASK_SNMPSENDTRAP instance);
    partial void InsertTASK_SNMPSETVARIABLE(TASK_SNMPSETVARIABLE instance);
    partial void UpdateTASK_SNMPSETVARIABLE(TASK_SNMPSETVARIABLE instance);
    partial void DeleteTASK_SNMPSETVARIABLE(TASK_SNMPSETVARIABLE instance);
    partial void InsertTASK_STARTSTOPSERVICE(TASK_STARTSTOPSERVICE instance);
    partial void UpdateTASK_STARTSTOPSERVICE(TASK_STARTSTOPSERVICE instance);
    partial void DeleteTASK_STARTSTOPSERVICE(TASK_STARTSTOPSERVICE instance);
    partial void InsertTASK_SYSLOG(TASK_SYSLOG instance);
    partial void UpdateTASK_SYSLOG(TASK_SYSLOG instance);
    partial void DeleteTASK_SYSLOG(TASK_SYSLOG instance);
    partial void InsertTASK_SYSTEMRESTART(TASK_SYSTEMRESTART instance);
    partial void UpdateTASK_SYSTEMRESTART(TASK_SYSTEMRESTART instance);
    partial void DeleteTASK_SYSTEMRESTART(TASK_SYSTEMRESTART instance);
    partial void InsertTASK_TELEPHONYDIAL(TASK_TELEPHONYDIAL instance);
    partial void UpdateTASK_TELEPHONYDIAL(TASK_TELEPHONYDIAL instance);
    partial void DeleteTASK_TELEPHONYDIAL(TASK_TELEPHONYDIAL instance);
    partial void InsertTASK_TELEPHONYEND(TASK_TELEPHONYEND instance);
    partial void UpdateTASK_TELEPHONYEND(TASK_TELEPHONYEND instance);
    partial void DeleteTASK_TELEPHONYEND(TASK_TELEPHONYEND instance);
    partial void InsertTASK_TELEPHONYPROCESS(TASK_TELEPHONYPROCESS instance);
    partial void UpdateTASK_TELEPHONYPROCESS(TASK_TELEPHONYPROCESS instance);
    partial void DeleteTASK_TELEPHONYPROCESS(TASK_TELEPHONYPROCESS instance);
    partial void InsertTASK_WEBPAGE(TASK_WEBPAGE instance);
    partial void UpdateTASK_WEBPAGE(TASK_WEBPAGE instance);
    partial void DeleteTASK_WEBPAGE(TASK_WEBPAGE instance);
    partial void InsertTASK_WRITETODATABASE(TASK_WRITETODATABASE instance);
    partial void UpdateTASK_WRITETODATABASE(TASK_WRITETODATABASE instance);
    partial void DeleteTASK_WRITETODATABASE(TASK_WRITETODATABASE instance);
    partial void InsertTASK_WRITETODATABASE_DATA(TASK_WRITETODATABASE_DATA instance);
    partial void UpdateTASK_WRITETODATABASE_DATA(TASK_WRITETODATABASE_DATA instance);
    partial void DeleteTASK_WRITETODATABASE_DATA(TASK_WRITETODATABASE_DATA instance);
    partial void InsertTELEPHONY_SELECTEDLINES(TELEPHONY_SELECTEDLINES instance);
    partial void UpdateTELEPHONY_SELECTEDLINES(TELEPHONY_SELECTEDLINES instance);
    partial void DeleteTELEPHONY_SELECTEDLINES(TELEPHONY_SELECTEDLINES instance);
    partial void InsertTRIGGER_POLICY_PARAMETERS(TRIGGER_POLICY_PARAMETERS instance);
    partial void UpdateTRIGGER_POLICY_PARAMETERS(TRIGGER_POLICY_PARAMETERS instance);
    partial void DeleteTRIGGER_POLICY_PARAMETERS(TRIGGER_POLICY_PARAMETERS instance);
    partial void InsertTRIGGERS(TRIGGERS instance);
    partial void UpdateTRIGGERS(TRIGGERS instance);
    partial void DeleteTRIGGERS(TRIGGERS instance);
    partial void InsertVARIABLES(VARIABLES instance);
    partial void UpdateVARIABLES(VARIABLES instance);
    partial void DeleteVARIABLES(VARIABLES instance);
    partial void InsertVERSION(VERSION instance);
    partial void UpdateVERSION(VERSION instance);
    partial void DeleteVERSION(VERSION instance);
    partial void InsertWS_INVOKE(WS_INVOKE instance);
    partial void UpdateWS_INVOKE(WS_INVOKE instance);
    partial void DeleteWS_INVOKE(WS_INVOKE instance);
    #endregion
		
		public OrchestratorDB(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrchestratorDB(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrchestratorDB(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrchestratorDB(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ACTIONSERVERS> ACTIONSERVERS
		{
			get
			{
				return this.GetTable<ACTIONSERVERS>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator___Activities_> _Microsoft_SystemCenter_Orchestrator___Activities_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator___Activities_>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Runtime___ActivityInstanceData_> _Microsoft_SystemCenter_Orchestrator_Runtime___ActivityInstanceData_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Runtime___ActivityInstanceData_>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Runtime___ActivityInstances_> _Microsoft_SystemCenter_Orchestrator_Runtime___ActivityInstances_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Runtime___ActivityInstances_>();
			}
		}
		
		public System.Data.Linq.Table<AUDIT_TRAIL_CONFIG> AUDIT_TRAIL_CONFIG
		{
			get
			{
				return this.GetTable<AUDIT_TRAIL_CONFIG>();
			}
		}
		
		public System.Data.Linq.Table<AUDIT_TRAIL_SCRUBLIST> AUDIT_TRAIL_SCRUBLIST
		{
			get
			{
				return this.GetTable<AUDIT_TRAIL_SCRUBLIST>();
			}
		}
		
		public System.Data.Linq.Table<AUDITEVENTS> AUDITEVENTS
		{
			get
			{
				return this.GetTable<AUDITEVENTS>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Internal___AuthorizationCache_> _Microsoft_SystemCenter_Orchestrator_Internal___AuthorizationCache_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Internal___AuthorizationCache_>();
			}
		}
		
		public System.Data.Linq.Table<CAPS> CAPS
		{
			get
			{
				return this.GetTable<CAPS>();
			}
		}
		
		public System.Data.Linq.Table<CHECK_IN_HISTORY> CHECK_IN_HISTORY
		{
			get
			{
				return this.GetTable<CHECK_IN_HISTORY>();
			}
		}
		
		public System.Data.Linq.Table<CLIENTCONNECTIONS> CLIENTCONNECTIONS
		{
			get
			{
				return this.GetTable<CLIENTCONNECTIONS>();
			}
		}
		
		public System.Data.Linq.Table<COMPUTERGROUPS> COMPUTERGROUPS
		{
			get
			{
				return this.GetTable<COMPUTERGROUPS>();
			}
		}
		
		public System.Data.Linq.Table<CONFIGURATION> CONFIGURATION
		{
			get
			{
				return this.GetTable<CONFIGURATION>();
			}
		}
		
		public System.Data.Linq.Table<COUNTER_STATUS> COUNTER_STATUS
		{
			get
			{
				return this.GetTable<COUNTER_STATUS>();
			}
		}
		
		public System.Data.Linq.Table<COUNTERINSTANCES> COUNTERINSTANCES
		{
			get
			{
				return this.GetTable<COUNTERINSTANCES>();
			}
		}
		
		public System.Data.Linq.Table<COUNTERS> COUNTERS
		{
			get
			{
				return this.GetTable<COUNTERS>();
			}
		}
		
		public System.Data.Linq.Table<CUSTOM_START> CUSTOM_START
		{
			get
			{
				return this.GetTable<CUSTOM_START>();
			}
		}
		
		public System.Data.Linq.Table<CUSTOM_START_PARAMETERS> CUSTOM_START_PARAMETERS
		{
			get
			{
				return this.GetTable<CUSTOM_START_PARAMETERS>();
			}
		}
		
		public System.Data.Linq.Table<DESIGNATED_ACTION_SERVERS> DESIGNATED_ACTION_SERVERS
		{
			get
			{
				return this.GetTable<DESIGNATED_ACTION_SERVERS>();
			}
		}
		
		public System.Data.Linq.Table<EMAIL_ATTACHMENTS> EMAIL_ATTACHMENTS
		{
			get
			{
				return this.GetTable<EMAIL_ATTACHMENTS>();
			}
		}
		
		public System.Data.Linq.Table<EMAIL_RECIPIENTS> EMAIL_RECIPIENTS
		{
			get
			{
				return this.GetTable<EMAIL_RECIPIENTS>();
			}
		}
		
		public System.Data.Linq.Table<ENCRYPTION_RUNDECRYPTION> ENCRYPTION_RUNDECRYPTION
		{
			get
			{
				return this.GetTable<ENCRYPTION_RUNDECRYPTION>();
			}
		}
		
		public System.Data.Linq.Table<ENCRYPTION_RUNENCRYPTION> ENCRYPTION_RUNENCRYPTION
		{
			get
			{
				return this.GetTable<ENCRYPTION_RUNENCRYPTION>();
			}
		}
		
		public System.Data.Linq.Table<EVENT_DATETIME> EVENT_DATETIME
		{
			get
			{
				return this.GetTable<EVENT_DATETIME>();
			}
		}
		
		public System.Data.Linq.Table<EVENT_DISKSPACE> EVENT_DISKSPACE
		{
			get
			{
				return this.GetTable<EVENT_DISKSPACE>();
			}
		}
		
		public System.Data.Linq.Table<EVENT_DISKSPACE_DRIVEINFO> EVENT_DISKSPACE_DRIVEINFO
		{
			get
			{
				return this.GetTable<EVENT_DISKSPACE_DRIVEINFO>();
			}
		}
		
		public System.Data.Linq.Table<EVENT_EVENTLOG> EVENT_EVENTLOG
		{
			get
			{
				return this.GetTable<EVENT_EVENTLOG>();
			}
		}
		
		public System.Data.Linq.Table<EVENT_EVENTLOGFILTER> EVENT_EVENTLOGFILTER
		{
			get
			{
				return this.GetTable<EVENT_EVENTLOGFILTER>();
			}
		}
		
		public System.Data.Linq.Table<EVENT_MONITORCOMPUTERIP> EVENT_MONITORCOMPUTERIP
		{
			get
			{
				return this.GetTable<EVENT_MONITORCOMPUTERIP>();
			}
		}
		
		public System.Data.Linq.Table<EVENT_MONITORINTERNET> EVENT_MONITORINTERNET
		{
			get
			{
				return this.GetTable<EVENT_MONITORINTERNET>();
			}
		}
		
		public System.Data.Linq.Table<EVENT_PROCESS> EVENT_PROCESS
		{
			get
			{
				return this.GetTable<EVENT_PROCESS>();
			}
		}
		
		public System.Data.Linq.Table<EVENT_SERVICE> EVENT_SERVICE
		{
			get
			{
				return this.GetTable<EVENT_SERVICE>();
			}
		}
		
		public System.Data.Linq.Table<EVENT_SERVICESTARTED> EVENT_SERVICESTARTED
		{
			get
			{
				return this.GetTable<EVENT_SERVICESTARTED>();
			}
		}
		
		public System.Data.Linq.Table<EVENT_SNMPMONITORTRAP> EVENT_SNMPMONITORTRAP
		{
			get
			{
				return this.GetTable<EVENT_SNMPMONITORTRAP>();
			}
		}
		
		public System.Data.Linq.Table<EVENT_WMI> EVENT_WMI
		{
			get
			{
				return this.GetTable<EVENT_WMI>();
			}
		}
		
		public System.Data.Linq.Table<EVENTS> EVENTS
		{
			get
			{
				return this.GetTable<EVENTS>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Runtime___Events_> _Microsoft_SystemCenter_Orchestrator_Runtime___Events_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Runtime___Events_>();
			}
		}
		
		public System.Data.Linq.Table<FM_COPYFILE> FM_COPYFILE
		{
			get
			{
				return this.GetTable<FM_COPYFILE>();
			}
		}
		
		public System.Data.Linq.Table<FM_CREATEFOLDER> FM_CREATEFOLDER
		{
			get
			{
				return this.GetTable<FM_CREATEFOLDER>();
			}
		}
		
		public System.Data.Linq.Table<FM_DELETEFILE> FM_DELETEFILE
		{
			get
			{
				return this.GetTable<FM_DELETEFILE>();
			}
		}
		
		public System.Data.Linq.Table<FM_DELETEFOLDER> FM_DELETEFOLDER
		{
			get
			{
				return this.GetTable<FM_DELETEFOLDER>();
			}
		}
		
		public System.Data.Linq.Table<FM_FILEMONITOR> FM_FILEMONITOR
		{
			get
			{
				return this.GetTable<FM_FILEMONITOR>();
			}
		}
		
		public System.Data.Linq.Table<FM_FOLDERMONITOR> FM_FOLDERMONITOR
		{
			get
			{
				return this.GetTable<FM_FOLDERMONITOR>();
			}
		}
		
		public System.Data.Linq.Table<FM_GETFILESTATUS> FM_GETFILESTATUS
		{
			get
			{
				return this.GetTable<FM_GETFILESTATUS>();
			}
		}
		
		public System.Data.Linq.Table<FM_MOVEFILE> FM_MOVEFILE
		{
			get
			{
				return this.GetTable<FM_MOVEFILE>();
			}
		}
		
		public System.Data.Linq.Table<FM_MOVEFOLDER> FM_MOVEFOLDER
		{
			get
			{
				return this.GetTable<FM_MOVEFOLDER>();
			}
		}
		
		public System.Data.Linq.Table<FM_RENAMEFILE> FM_RENAMEFILE
		{
			get
			{
				return this.GetTable<FM_RENAMEFILE>();
			}
		}
		
		public System.Data.Linq.Table<FOLDERS> FOLDERS
		{
			get
			{
				return this.GetTable<FOLDERS>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator___Folders_> _Microsoft_SystemCenter_Orchestrator___Folders_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator___Folders_>();
			}
		}
		
		public System.Data.Linq.Table<HP_ILO_CMD> HP_ILO_CMD
		{
			get
			{
				return this.GetTable<HP_ILO_CMD>();
			}
		}
		
		public System.Data.Linq.Table<HP_OA_CMD> HP_OA_CMD
		{
			get
			{
				return this.GetTable<HP_OA_CMD>();
			}
		}
		
		public System.Data.Linq.Table<INTERNETSTATUS_CLOSE> INTERNETSTATUS_CLOSE
		{
			get
			{
				return this.GetTable<INTERNETSTATUS_CLOSE>();
			}
		}
		
		public System.Data.Linq.Table<INTERNETSTATUS_OPENPORT> INTERNETSTATUS_OPENPORT
		{
			get
			{
				return this.GetTable<INTERNETSTATUS_OPENPORT>();
			}
		}
		
		public System.Data.Linq.Table<INTERNETSTATUS_RECEIVE> INTERNETSTATUS_RECEIVE
		{
			get
			{
				return this.GetTable<INTERNETSTATUS_RECEIVE>();
			}
		}
		
		public System.Data.Linq.Table<INTERNETSTATUS_SEND> INTERNETSTATUS_SEND
		{
			get
			{
				return this.GetTable<INTERNETSTATUS_SEND>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Runtime___Jobs_> _Microsoft_SystemCenter_Orchestrator_Runtime___Jobs_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Runtime___Jobs_>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_> _Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_> _Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_>();
			}
		}
		
		public System.Data.Linq.Table<LICENSES> LICENSES
		{
			get
			{
				return this.GetTable<LICENSES>();
			}
		}
		
		public System.Data.Linq.Table<LINKS> LINKS
		{
			get
			{
				return this.GetTable<LINKS>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Maintenance___MaintenanceTasks_> _Microsoft_SystemCenter_Orchestrator_Maintenance___MaintenanceTasks_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Maintenance___MaintenanceTasks_>();
			}
		}
		
		public System.Data.Linq.Table<MODIFY_COUNTER> MODIFY_COUNTER
		{
			get
			{
				return this.GetTable<MODIFY_COUNTER>();
			}
		}
		
		public System.Data.Linq.Table<MONITOR_COUNTER> MONITOR_COUNTER
		{
			get
			{
				return this.GetTable<MONITOR_COUNTER>();
			}
		}
		
		public System.Data.Linq.Table<MONITOR_COUNTER_TRIGGERS> MONITOR_COUNTER_TRIGGERS
		{
			get
			{
				return this.GetTable<MONITOR_COUNTER_TRIGGERS>();
			}
		}
		
		public System.Data.Linq.Table<MT_APPENDLINE> MT_APPENDLINE
		{
			get
			{
				return this.GetTable<MT_APPENDLINE>();
			}
		}
		
		public System.Data.Linq.Table<MT_DELETELINE> MT_DELETELINE
		{
			get
			{
				return this.GetTable<MT_DELETELINE>();
			}
		}
		
		public System.Data.Linq.Table<MT_FINDTEXT> MT_FINDTEXT
		{
			get
			{
				return this.GetTable<MT_FINDTEXT>();
			}
		}
		
		public System.Data.Linq.Table<MT_GETLINES> MT_GETLINES
		{
			get
			{
				return this.GetTable<MT_GETLINES>();
			}
		}
		
		public System.Data.Linq.Table<MT_INSERTLINE> MT_INSERTLINE
		{
			get
			{
				return this.GetTable<MT_INSERTLINE>();
			}
		}
		
		public System.Data.Linq.Table<MT_READLINE> MT_READLINE
		{
			get
			{
				return this.GetTable<MT_READLINE>();
			}
		}
		
		public System.Data.Linq.Table<MT_SEARCHANDREPLACE> MT_SEARCHANDREPLACE
		{
			get
			{
				return this.GetTable<MT_SEARCHANDREPLACE>();
			}
		}
		
		public System.Data.Linq.Table<OBJECT_AUDIT> OBJECT_AUDIT
		{
			get
			{
				return this.GetTable<OBJECT_AUDIT>();
			}
		}
		
		public System.Data.Linq.Table<OBJECTINSTANCEDATA> OBJECTINSTANCEDATA
		{
			get
			{
				return this.GetTable<OBJECTINSTANCEDATA>();
			}
		}
		
		public System.Data.Linq.Table<OBJECTINSTANCES> OBJECTINSTANCES
		{
			get
			{
				return this.GetTable<OBJECTINSTANCES>();
			}
		}
		
		public System.Data.Linq.Table<OBJECTLOOPING> OBJECTLOOPING
		{
			get
			{
				return this.GetTable<OBJECTLOOPING>();
			}
		}
		
		public System.Data.Linq.Table<OBJECTS> OBJECTS
		{
			get
			{
				return this.GetTable<OBJECTS>();
			}
		}
		
		public System.Data.Linq.Table<OBJECTTYPES> OBJECTTYPES
		{
			get
			{
				return this.GetTable<OBJECTTYPES>();
			}
		}
		
		public System.Data.Linq.Table<OE_DELIVERY_DESTINATIONS> OE_DELIVERY_DESTINATIONS
		{
			get
			{
				return this.GetTable<OE_DELIVERY_DESTINATIONS>();
			}
		}
		
		public System.Data.Linq.Table<OE_DELIVERY_RULES> OE_DELIVERY_RULES
		{
			get
			{
				return this.GetTable<OE_DELIVERY_RULES>();
			}
		}
		
		public System.Data.Linq.Table<OIS_SNMP_TRAP_CONFIG> OIS_SNMP_TRAP_CONFIG
		{
			get
			{
				return this.GetTable<OIS_SNMP_TRAP_CONFIG>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Internal___Parties_> _Microsoft_SystemCenter_Orchestrator_Internal___Parties_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Internal___Parties_>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_> _Microsoft_SystemCenter_Orchestrator_Internal___Permissions_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_>();
			}
		}
		
		public System.Data.Linq.Table<PERMISSIONS> PERMISSIONS
		{
			get
			{
				return this.GetTable<PERMISSIONS>();
			}
		}
		
		public System.Data.Linq.Table<POLICIES> POLICIES
		{
			get
			{
				return this.GetTable<POLICIES>();
			}
		}
		
		public System.Data.Linq.Table<POLICIES_VIEW> POLICIES_VIEW
		{
			get
			{
				return this.GetTable<POLICIES_VIEW>();
			}
		}
		
		public System.Data.Linq.Table<POLICY_IMAGES> POLICY_IMAGES
		{
			get
			{
				return this.GetTable<POLICY_IMAGES>();
			}
		}
		
		public System.Data.Linq.Table<POLICY_PUBLISH_QUEUE> POLICY_PUBLISH_QUEUE
		{
			get
			{
				return this.GetTable<POLICY_PUBLISH_QUEUE>();
			}
		}
		
		public System.Data.Linq.Table<POLICY_REQUEST_ACTION_SERVERS> POLICY_REQUEST_ACTION_SERVERS
		{
			get
			{
				return this.GetTable<POLICY_REQUEST_ACTION_SERVERS>();
			}
		}
		
		public System.Data.Linq.Table<POLICY_REQUEST_HISTORY> POLICY_REQUEST_HISTORY
		{
			get
			{
				return this.GetTable<POLICY_REQUEST_HISTORY>();
			}
		}
		
		public System.Data.Linq.Table<POLICYINSTANCES> POLICYINSTANCES
		{
			get
			{
				return this.GetTable<POLICYINSTANCES>();
			}
		}
		
		public System.Data.Linq.Table<POLICYRETURNDATA> POLICYRETURNDATA
		{
			get
			{
				return this.GetTable<POLICYRETURNDATA>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCTINFO> PRODUCTINFO
		{
			get
			{
				return this.GetTable<PRODUCTINFO>();
			}
		}
		
		public System.Data.Linq.Table<PUBLISH_POLICY_DATA> PUBLISH_POLICY_DATA
		{
			get
			{
				return this.GetTable<PUBLISH_POLICY_DATA>();
			}
		}
		
		public System.Data.Linq.Table<QIKOBJECT> QIKOBJECT
		{
			get
			{
				return this.GetTable<QIKOBJECT>();
			}
		}
		
		public System.Data.Linq.Table<REPORTING> REPORTING
		{
			get
			{
				return this.GetTable<REPORTING>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Internal___Resources_> _Microsoft_SystemCenter_Orchestrator_Internal___Resources_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Internal___Resources_>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator___Resources_> _Microsoft_SystemCenter_Orchestrator___Resources_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator___Resources_>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_> _Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Internal___Rights_> _Microsoft_SystemCenter_Orchestrator_Internal___Rights_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Internal___Rights_>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator___RunbookDiagrams_> _Microsoft_SystemCenter_Orchestrator___RunbookDiagrams_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator___RunbookDiagrams_>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_> _Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Runtime___RunbookInstanceParameters_> _Microsoft_SystemCenter_Orchestrator_Runtime___RunbookInstanceParameters_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Runtime___RunbookInstanceParameters_>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Runtime___RunbookInstances_> _Microsoft_SystemCenter_Orchestrator_Runtime___RunbookInstances_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Runtime___RunbookInstances_>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_> _Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator___RunbookParameters_> _Microsoft_SystemCenter_Orchestrator___RunbookParameters_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator___RunbookParameters_>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator___Runbooks_> _Microsoft_SystemCenter_Orchestrator___Runbooks_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator___Runbooks_>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Runtime___RunbookServers_> _Microsoft_SystemCenter_Orchestrator_Runtime___RunbookServers_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Runtime___RunbookServers_>();
			}
		}
		
		public System.Data.Linq.Table<RUNDOTNETSCRIPT> RUNDOTNETSCRIPT
		{
			get
			{
				return this.GetTable<RUNDOTNETSCRIPT>();
			}
		}
		
		public System.Data.Linq.Table<SATELLITES> SATELLITES
		{
			get
			{
				return this.GetTable<SATELLITES>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2007_ADDCOMPUTER> SCCM2007_ADDCOMPUTER
		{
			get
			{
				return this.GetTable<SCCM2007_ADDCOMPUTER>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2007_ADVERTISETASK> SCCM2007_ADVERTISETASK
		{
			get
			{
				return this.GetTable<SCCM2007_ADVERTISETASK>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2007_CREATEADVERTISEMENT> SCCM2007_CREATEADVERTISEMENT
		{
			get
			{
				return this.GetTable<SCCM2007_CREATEADVERTISEMENT>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2007_CREATECOLLECTION> SCCM2007_CREATECOLLECTION
		{
			get
			{
				return this.GetTable<SCCM2007_CREATECOLLECTION>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2007_DEL_COLLECTION> SCCM2007_DEL_COLLECTION
		{
			get
			{
				return this.GetTable<SCCM2007_DEL_COLLECTION>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2007_DEPLOYSOFTWAREUPDATE> SCCM2007_DEPLOYSOFTWAREUPDATE
		{
			get
			{
				return this.GetTable<SCCM2007_DEPLOYSOFTWAREUPDATE>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2007_GETADVSTATUS> SCCM2007_GETADVSTATUS
		{
			get
			{
				return this.GetTable<SCCM2007_GETADVSTATUS>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2007_GETCOLLECTION> SCCM2007_GETCOLLECTION
		{
			get
			{
				return this.GetTable<SCCM2007_GETCOLLECTION>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2007_GETSUCOMPLIANCE> SCCM2007_GETSUCOMPLIANCE
		{
			get
			{
				return this.GetTable<SCCM2007_GETSUCOMPLIANCE>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2007_REFRESHCLIENT> SCCM2007_REFRESHCLIENT
		{
			get
			{
				return this.GetTable<SCCM2007_REFRESHCLIENT>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2007_REFRESHCOLLECTION> SCCM2007_REFRESHCOLLECTION
		{
			get
			{
				return this.GetTable<SCCM2007_REFRESHCOLLECTION>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2012_ADDCOLLECTIONRULE> SCCM2012_ADDCOLLECTIONRULE
		{
			get
			{
				return this.GetTable<SCCM2012_ADDCOLLECTIONRULE>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2012_CREATECOLLECTION> SCCM2012_CREATECOLLECTION
		{
			get
			{
				return this.GetTable<SCCM2012_CREATECOLLECTION>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2012_DELCOLLECTION> SCCM2012_DELCOLLECTION
		{
			get
			{
				return this.GetTable<SCCM2012_DELCOLLECTION>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2012_DELCOLLECTIONRULE> SCCM2012_DELCOLLECTIONRULE
		{
			get
			{
				return this.GetTable<SCCM2012_DELCOLLECTIONRULE>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2012_DEPLOYAPPLICATION> SCCM2012_DEPLOYAPPLICATION
		{
			get
			{
				return this.GetTable<SCCM2012_DEPLOYAPPLICATION>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2012_DEPLOYPROGRAM> SCCM2012_DEPLOYPROGRAM
		{
			get
			{
				return this.GetTable<SCCM2012_DEPLOYPROGRAM>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2012_DEPLOYSOFTWAREUPDATE> SCCM2012_DEPLOYSOFTWAREUPDATE
		{
			get
			{
				return this.GetTable<SCCM2012_DEPLOYSOFTWAREUPDATE>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2012_DEPLOYTASKSEQUENCE> SCCM2012_DEPLOYTASKSEQUENCE
		{
			get
			{
				return this.GetTable<SCCM2012_DEPLOYTASKSEQUENCE>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2012_GETCOLLECTIONMEMBER> SCCM2012_GETCOLLECTIONMEMBER
		{
			get
			{
				return this.GetTable<SCCM2012_GETCOLLECTIONMEMBER>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2012_GETDEPLOYMENTSTATUS> SCCM2012_GETDEPLOYMENTSTATUS
		{
			get
			{
				return this.GetTable<SCCM2012_GETDEPLOYMENTSTATUS>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2012_PERFORMCLIENTACTION> SCCM2012_PERFORMCLIENTACTION
		{
			get
			{
				return this.GetTable<SCCM2012_PERFORMCLIENTACTION>();
			}
		}
		
		public System.Data.Linq.Table<SCCM2012_UPDCOLLECTIONMEMBERSHIP> SCCM2012_UPDCOLLECTIONMEMBERSHIP
		{
			get
			{
				return this.GetTable<SCCM2012_UPDCOLLECTIONMEMBERSHIP>();
			}
		}
		
		public System.Data.Linq.Table<SCHEDULES> SCHEDULES
		{
			get
			{
				return this.GetTable<SCHEDULES>();
			}
		}
		
		public System.Data.Linq.Table<SCOM2007_CREATEALERT> SCOM2007_CREATEALERT
		{
			get
			{
				return this.GetTable<SCOM2007_CREATEALERT>();
			}
		}
		
		public System.Data.Linq.Table<SCOM2007_GETALERTS> SCOM2007_GETALERTS
		{
			get
			{
				return this.GetTable<SCOM2007_GETALERTS>();
			}
		}
		
		public System.Data.Linq.Table<SCOM2007_GETMONITORS> SCOM2007_GETMONITORS
		{
			get
			{
				return this.GetTable<SCOM2007_GETMONITORS>();
			}
		}
		
		public System.Data.Linq.Table<SCOM2007_MONALERT> SCOM2007_MONALERT
		{
			get
			{
				return this.GetTable<SCOM2007_MONALERT>();
			}
		}
		
		public System.Data.Linq.Table<SCOM2007_MONHEALTH> SCOM2007_MONHEALTH
		{
			get
			{
				return this.GetTable<SCOM2007_MONHEALTH>();
			}
		}
		
		public System.Data.Linq.Table<SCOM2007_SCHEDMAINT> SCOM2007_SCHEDMAINT
		{
			get
			{
				return this.GetTable<SCOM2007_SCHEDMAINT>();
			}
		}
		
		public System.Data.Linq.Table<SCOM2007_STOPMAINT> SCOM2007_STOPMAINT
		{
			get
			{
				return this.GetTable<SCOM2007_STOPMAINT>();
			}
		}
		
		public System.Data.Linq.Table<SCOM2007_UPDATEALERT> SCOM2007_UPDATEALERT
		{
			get
			{
				return this.GetTable<SCOM2007_UPDATEALERT>();
			}
		}
		
		public System.Data.Linq.Table<SCOM2012_CREATEALERT> SCOM2012_CREATEALERT
		{
			get
			{
				return this.GetTable<SCOM2012_CREATEALERT>();
			}
		}
		
		public System.Data.Linq.Table<SCOM2012_GETALERTS> SCOM2012_GETALERTS
		{
			get
			{
				return this.GetTable<SCOM2012_GETALERTS>();
			}
		}
		
		public System.Data.Linq.Table<SCOM2012_GETMONITORS> SCOM2012_GETMONITORS
		{
			get
			{
				return this.GetTable<SCOM2012_GETMONITORS>();
			}
		}
		
		public System.Data.Linq.Table<SCOM2012_MONALERT> SCOM2012_MONALERT
		{
			get
			{
				return this.GetTable<SCOM2012_MONALERT>();
			}
		}
		
		public System.Data.Linq.Table<SCOM2012_MONHEALTH> SCOM2012_MONHEALTH
		{
			get
			{
				return this.GetTable<SCOM2012_MONHEALTH>();
			}
		}
		
		public System.Data.Linq.Table<SCOM2012_SCHEDMAINT> SCOM2012_SCHEDMAINT
		{
			get
			{
				return this.GetTable<SCOM2012_SCHEDMAINT>();
			}
		}
		
		public System.Data.Linq.Table<SCOM2012_STOPMAINT> SCOM2012_STOPMAINT
		{
			get
			{
				return this.GetTable<SCOM2012_STOPMAINT>();
			}
		}
		
		public System.Data.Linq.Table<SCOM2012_UPDATEALERT> SCOM2012_UPDATEALERT
		{
			get
			{
				return this.GetTable<SCOM2012_UPDATEALERT>();
			}
		}
		
		public System.Data.Linq.Table<SCSM2012_CREATEOBJECT> SCSM2012_CREATEOBJECT
		{
			get
			{
				return this.GetTable<SCSM2012_CREATEOBJECT>();
			}
		}
		
		public System.Data.Linq.Table<SCSM2012_CREATEREL> SCSM2012_CREATEREL
		{
			get
			{
				return this.GetTable<SCSM2012_CREATEREL>();
			}
		}
		
		public System.Data.Linq.Table<SCSM2012_CREATERELOBJ> SCSM2012_CREATERELOBJ
		{
			get
			{
				return this.GetTable<SCSM2012_CREATERELOBJ>();
			}
		}
		
		public System.Data.Linq.Table<SCSM2012_CRTCHGTMP> SCSM2012_CRTCHGTMP
		{
			get
			{
				return this.GetTable<SCSM2012_CRTCHGTMP>();
			}
		}
		
		public System.Data.Linq.Table<SCSM2012_CRTINCTMP> SCSM2012_CRTINCTMP
		{
			get
			{
				return this.GetTable<SCSM2012_CRTINCTMP>();
			}
		}
		
		public System.Data.Linq.Table<SCSM2012_DELETEREL> SCSM2012_DELETEREL
		{
			get
			{
				return this.GetTable<SCSM2012_DELETEREL>();
			}
		}
		
		public System.Data.Linq.Table<SCSM2012_GETACT> SCSM2012_GETACT
		{
			get
			{
				return this.GetTable<SCSM2012_GETACT>();
			}
		}
		
		public System.Data.Linq.Table<SCSM2012_GETOBJECT> SCSM2012_GETOBJECT
		{
			get
			{
				return this.GetTable<SCSM2012_GETOBJECT>();
			}
		}
		
		public System.Data.Linq.Table<SCSM2012_GETRELOBJ> SCSM2012_GETRELOBJ
		{
			get
			{
				return this.GetTable<SCSM2012_GETRELOBJ>();
			}
		}
		
		public System.Data.Linq.Table<SCSM2012_MONOBJECT> SCSM2012_MONOBJECT
		{
			get
			{
				return this.GetTable<SCSM2012_MONOBJECT>();
			}
		}
		
		public System.Data.Linq.Table<SCSM2012_UPDATEACT> SCSM2012_UPDATEACT
		{
			get
			{
				return this.GetTable<SCSM2012_UPDATEACT>();
			}
		}
		
		public System.Data.Linq.Table<SCSM2012_UPDATEATTACH> SCSM2012_UPDATEATTACH
		{
			get
			{
				return this.GetTable<SCSM2012_UPDATEATTACH>();
			}
		}
		
		public System.Data.Linq.Table<SCSM2012_UPDATEOBJECT> SCSM2012_UPDATEOBJECT
		{
			get
			{
				return this.GetTable<SCSM2012_UPDATEOBJECT>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_> _Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_> _Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_>();
			}
		}
		
		public System.Data.Linq.Table<SETTINGS> SETTINGS
		{
			get
			{
				return this.GetTable<SETTINGS>();
			}
		}
		
		public System.Data.Linq.Table<SIDS> SIDS
		{
			get
			{
				return this.GetTable<SIDS>();
			}
		}
		
		public System.Data.Linq.Table<SSH_RUNCOMMAND> SSH_RUNCOMMAND
		{
			get
			{
				return this.GetTable<SSH_RUNCOMMAND>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Statistics___Statistics_> _Microsoft_SystemCenter_Orchestrator_Statistics___Statistics_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Statistics___Statistics_>();
			}
		}
		
		public System.Data.Linq.Table<_Microsoft_SystemCenter_Orchestrator_Statistics_Internal___Statistics_> _Microsoft_SystemCenter_Orchestrator_Statistics_Internal___Statistics_
		{
			get
			{
				return this.GetTable<_Microsoft_SystemCenter_Orchestrator_Statistics_Internal___Statistics_>();
			}
		}
		
		public System.Data.Linq.Table<STATUS_SCHEDULE> STATUS_SCHEDULE
		{
			get
			{
				return this.GetTable<STATUS_SCHEDULE>();
			}
		}
		
		public System.Data.Linq.Table<TASK_APPLY_XSLT> TASK_APPLY_XSLT
		{
			get
			{
				return this.GetTable<TASK_APPLY_XSLT>();
			}
		}
		
		public System.Data.Linq.Table<TASK_COMPARE> TASK_COMPARE
		{
			get
			{
				return this.GetTable<TASK_COMPARE>();
			}
		}
		
		public System.Data.Linq.Table<TASK_COMPRESS> TASK_COMPRESS
		{
			get
			{
				return this.GetTable<TASK_COMPRESS>();
			}
		}
		
		public System.Data.Linq.Table<TASK_COMPUTERIP> TASK_COMPUTERIP
		{
			get
			{
				return this.GetTable<TASK_COMPUTERIP>();
			}
		}
		
		public System.Data.Linq.Table<TASK_DIALUPNETWORKING> TASK_DIALUPNETWORKING
		{
			get
			{
				return this.GetTable<TASK_DIALUPNETWORKING>();
			}
		}
		
		public System.Data.Linq.Table<TASK_DIALUPNETWORKINGSTATUS> TASK_DIALUPNETWORKINGSTATUS
		{
			get
			{
				return this.GetTable<TASK_DIALUPNETWORKINGSTATUS>();
			}
		}
		
		public System.Data.Linq.Table<TASK_DISCONNECTNETWORKPATH> TASK_DISCONNECTNETWORKPATH
		{
			get
			{
				return this.GetTable<TASK_DISCONNECTNETWORKPATH>();
			}
		}
		
		public System.Data.Linq.Table<TASK_EMAIL> TASK_EMAIL
		{
			get
			{
				return this.GetTable<TASK_EMAIL>();
			}
		}
		
		public System.Data.Linq.Table<TASK_ENDPROCESS> TASK_ENDPROCESS
		{
			get
			{
				return this.GetTable<TASK_ENDPROCESS>();
			}
		}
		
		public System.Data.Linq.Table<TASK_FILEMANAGEMENT> TASK_FILEMANAGEMENT
		{
			get
			{
				return this.GetTable<TASK_FILEMANAGEMENT>();
			}
		}
		
		public System.Data.Linq.Table<TASK_FILEMANAGEMENTRENAME> TASK_FILEMANAGEMENTRENAME
		{
			get
			{
				return this.GetTable<TASK_FILEMANAGEMENTRENAME>();
			}
		}
		
		public System.Data.Linq.Table<TASK_FORMATDATE> TASK_FORMATDATE
		{
			get
			{
				return this.GetTable<TASK_FORMATDATE>();
			}
		}
		
		public System.Data.Linq.Table<TASK_GETDISKSPACESTATUS> TASK_GETDISKSPACESTATUS
		{
			get
			{
				return this.GetTable<TASK_GETDISKSPACESTATUS>();
			}
		}
		
		public System.Data.Linq.Table<TASK_INTERNETSTATUS> TASK_INTERNETSTATUS
		{
			get
			{
				return this.GetTable<TASK_INTERNETSTATUS>();
			}
		}
		
		public System.Data.Linq.Table<TASK_JUNCTION> TASK_JUNCTION
		{
			get
			{
				return this.GetTable<TASK_JUNCTION>();
			}
		}
		
		public System.Data.Linq.Table<TASK_MAPNETWORKPATH> TASK_MAPNETWORKPATH
		{
			get
			{
				return this.GetTable<TASK_MAPNETWORKPATH>();
			}
		}
		
		public System.Data.Linq.Table<TASK_MAPVALUES> TASK_MAPVALUES
		{
			get
			{
				return this.GetTable<TASK_MAPVALUES>();
			}
		}
		
		public System.Data.Linq.Table<TASK_MESSAGEEVENTLOG> TASK_MESSAGEEVENTLOG
		{
			get
			{
				return this.GetTable<TASK_MESSAGEEVENTLOG>();
			}
		}
		
		public System.Data.Linq.Table<TASK_PROCESSSTATUS> TASK_PROCESSSTATUS
		{
			get
			{
				return this.GetTable<TASK_PROCESSSTATUS>();
			}
		}
		
		public System.Data.Linq.Table<TASK_QUERY_XML> TASK_QUERY_XML
		{
			get
			{
				return this.GetTable<TASK_QUERY_XML>();
			}
		}
		
		public System.Data.Linq.Table<TASK_QUERYDATABASE> TASK_QUERYDATABASE
		{
			get
			{
				return this.GetTable<TASK_QUERYDATABASE>();
			}
		}
		
		public System.Data.Linq.Table<TASK_QUERYWMI> TASK_QUERYWMI
		{
			get
			{
				return this.GetTable<TASK_QUERYWMI>();
			}
		}
		
		public System.Data.Linq.Table<TASK_RANDOM_STRING> TASK_RANDOM_STRING
		{
			get
			{
				return this.GetTable<TASK_RANDOM_STRING>();
			}
		}
		
		public System.Data.Linq.Table<TASK_READTEXTLOG> TASK_READTEXTLOG
		{
			get
			{
				return this.GetTable<TASK_READTEXTLOG>();
			}
		}
		
		public System.Data.Linq.Table<TASK_RUNPROGRAM> TASK_RUNPROGRAM
		{
			get
			{
				return this.GetTable<TASK_RUNPROGRAM>();
			}
		}
		
		public System.Data.Linq.Table<TASK_SAVEEVENTLOGENTRIES> TASK_SAVEEVENTLOGENTRIES
		{
			get
			{
				return this.GetTable<TASK_SAVEEVENTLOGENTRIES>();
			}
		}
		
		public System.Data.Linq.Table<TASK_SENDOPALISEVENT> TASK_SENDOPALISEVENT
		{
			get
			{
				return this.GetTable<TASK_SENDOPALISEVENT>();
			}
		}
		
		public System.Data.Linq.Table<TASK_SERVICESTATUS> TASK_SERVICESTATUS
		{
			get
			{
				return this.GetTable<TASK_SERVICESTATUS>();
			}
		}
		
		public System.Data.Linq.Table<TASK_SNMPGETVARIABLE> TASK_SNMPGETVARIABLE
		{
			get
			{
				return this.GetTable<TASK_SNMPGETVARIABLE>();
			}
		}
		
		public System.Data.Linq.Table<TASK_SNMPSENDTRAP> TASK_SNMPSENDTRAP
		{
			get
			{
				return this.GetTable<TASK_SNMPSENDTRAP>();
			}
		}
		
		public System.Data.Linq.Table<TASK_SNMPSETVARIABLE> TASK_SNMPSETVARIABLE
		{
			get
			{
				return this.GetTable<TASK_SNMPSETVARIABLE>();
			}
		}
		
		public System.Data.Linq.Table<TASK_STARTSTOPSERVICE> TASK_STARTSTOPSERVICE
		{
			get
			{
				return this.GetTable<TASK_STARTSTOPSERVICE>();
			}
		}
		
		public System.Data.Linq.Table<TASK_SYSLOG> TASK_SYSLOG
		{
			get
			{
				return this.GetTable<TASK_SYSLOG>();
			}
		}
		
		public System.Data.Linq.Table<TASK_SYSTEMRESTART> TASK_SYSTEMRESTART
		{
			get
			{
				return this.GetTable<TASK_SYSTEMRESTART>();
			}
		}
		
		public System.Data.Linq.Table<TASK_TELEPHONYDIAL> TASK_TELEPHONYDIAL
		{
			get
			{
				return this.GetTable<TASK_TELEPHONYDIAL>();
			}
		}
		
		public System.Data.Linq.Table<TASK_TELEPHONYEND> TASK_TELEPHONYEND
		{
			get
			{
				return this.GetTable<TASK_TELEPHONYEND>();
			}
		}
		
		public System.Data.Linq.Table<TASK_TELEPHONYPROCESS> TASK_TELEPHONYPROCESS
		{
			get
			{
				return this.GetTable<TASK_TELEPHONYPROCESS>();
			}
		}
		
		public System.Data.Linq.Table<TASK_WEBPAGE> TASK_WEBPAGE
		{
			get
			{
				return this.GetTable<TASK_WEBPAGE>();
			}
		}
		
		public System.Data.Linq.Table<TASK_WRITETODATABASE> TASK_WRITETODATABASE
		{
			get
			{
				return this.GetTable<TASK_WRITETODATABASE>();
			}
		}
		
		public System.Data.Linq.Table<TASK_WRITETODATABASE_DATA> TASK_WRITETODATABASE_DATA
		{
			get
			{
				return this.GetTable<TASK_WRITETODATABASE_DATA>();
			}
		}
		
		public System.Data.Linq.Table<TELEPHONY_SELECTEDLINES> TELEPHONY_SELECTEDLINES
		{
			get
			{
				return this.GetTable<TELEPHONY_SELECTEDLINES>();
			}
		}
		
		public System.Data.Linq.Table<TRIGGER_POLICY> TRIGGER_POLICY
		{
			get
			{
				return this.GetTable<TRIGGER_POLICY>();
			}
		}
		
		public System.Data.Linq.Table<TRIGGER_POLICY_PARAMETERS> TRIGGER_POLICY_PARAMETERS
		{
			get
			{
				return this.GetTable<TRIGGER_POLICY_PARAMETERS>();
			}
		}
		
		public System.Data.Linq.Table<TRIGGERS> TRIGGERS
		{
			get
			{
				return this.GetTable<TRIGGERS>();
			}
		}
		
		public System.Data.Linq.Table<VARIABLES> VARIABLES
		{
			get
			{
				return this.GetTable<VARIABLES>();
			}
		}
		
		public System.Data.Linq.Table<VERSION> VERSION
		{
			get
			{
				return this.GetTable<VERSION>();
			}
		}
		
		public System.Data.Linq.Table<WS_INVOKE> WS_INVOKE
		{
			get
			{
				return this.GetTable<WS_INVOKE>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_GetPolicyInstanceStatus", IsComposable=true)]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")]
		public string Fn_GetPolicyInstanceStatus([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PolicyID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> policyID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InstanceID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> instanceID)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), policyID, instanceID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_NumFailedInstancesPerServer", IsComposable=true)]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public System.Nullable<int> Fn_NumFailedInstancesPerServer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionServer", DbType="UniqueIdentifier")] System.Nullable<System.Guid> actionServer)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), actionServer).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_NumInstancesPerServer", IsComposable=true)]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public System.Nullable<int> Fn_NumInstancesPerServer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionServer", DbType="UniqueIdentifier")] System.Nullable<System.Guid> actionServer)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), actionServer).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_NumRunningInstancesPerServer", IsComposable=true)]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public System.Nullable<int> Fn_NumRunningInstancesPerServer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionServer", DbType="UniqueIdentifier")] System.Nullable<System.Guid> actionServer)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), actionServer).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_SplitString", IsComposable=true)]
		public IQueryable<Fn_SplitStringResult> Fn_SplitString([global::System.Data.Linq.Mapping.ParameterAttribute(Name="String", DbType="NVarChar(2000)")] string @string, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Delimiter", DbType="NVarChar(1)")] string delimiter)
		{
			return this.CreateMethodCallQuery<Fn_SplitStringResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), @string, delimiter);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_insertevent")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Sp_insertevent([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string computer, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string summary, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string message)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), type, computer, summary, message);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_PublishPolicy")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Sp_PublishPolicy([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PolicyID", DbType="NVarChar(40)")] string policyID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InitData", DbType="NVarChar(MAX)")] string initData, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SeqNumber", DbType="Int")] ref System.Nullable<int> seqNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetActionServers", DbType="NVarChar(2000)")] string targetActionServers, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParentSeqNumber", DbType="BigInt")] System.Nullable<long> parentSeqNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParentIsWaiting", DbType="Bit")] System.Nullable<bool> parentIsWaiting, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(2000)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(2000)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), policyID, initData, seqNumber, targetActionServers, parentSeqNumber, parentIsWaiting, username, password);
			seqNumber = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UnpublishPolicy")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Sp_UnpublishPolicy([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PolicyID", DbType="NVarChar(40)")] string policyID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), policyID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UnpublishPolicyRequest")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Sp_UnpublishPolicyRequest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PolicyID", DbType="NVarChar(40)")] string policyID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SeqNumber", DbType="BigInt")] System.Nullable<long> seqNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobStatus", DbType="Int")] System.Nullable<int> jobStatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), policyID, seqNumber, jobStatus);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator].[AccessCheck]", IsComposable=true)]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")]
		public System.Nullable<bool> _Microsoft_SystemCenter_Orchestrator___AccessCheck_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TokenId", DbType="BigInt")] System.Nullable<long> tokenId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UniqueId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> uniqueId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Rights", DbType="BigInt")] System.Nullable<long> rights)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tokenId, uniqueId, rights).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator].[ComputeAuthorizationCache]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator___ComputeAuthorizationCache_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TokenId", DbType="BigInt")] System.Nullable<long> tokenId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tokenId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator].[GetSecurityToken]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator___GetSecurityToken_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdentityXml", DbType="NVarChar(MAX)")] string identityXml, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TokenId", DbType="BigInt")] ref System.Nullable<long> tokenId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), identityXml, tokenId);
			tokenId = ((System.Nullable<long>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator].[SetPermissions]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator___SetPermissions_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UniqueId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> uniqueId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PermissionsXml", DbType="NVarChar(MAX)")] string permissionsXml)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), uniqueId, permissionsXml);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Cryptography].[CreateOrchestratorKeys]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Cryptography___CreateOrchestratorKeys_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PassPhrase", DbType="NVarChar(128)")] string passPhrase)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), passPhrase);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Cryptography].[Decrypt]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Cryptography___Decrypt_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DataToDecrypt", DbType="NVarChar(2000)")] string dataToDecrypt, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DecryptedData", DbType="NVarChar(256)")] ref string decryptedData)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dataToDecrypt, decryptedData);
			decryptedData = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Cryptography].[DropOrchestratorKeys]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Cryptography___DropOrchestratorKeys_()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Cryptography].[Encrypt]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Cryptography___Encrypt_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DataToEncrypt", DbType="NVarChar(256)")] string dataToEncrypt, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EncryptedData", DbType="NVarChar(2000)")] ref string encryptedData)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dataToEncrypt, encryptedData);
			encryptedData = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Internal].[ClearAuthorizationCache]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Internal___ClearAuthorizationCache_([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> currentTime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> lastExecutionTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), currentTime, lastExecutionTime);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Internal].[ComputeFolderAuthorizationCache]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Internal___ComputeFolderAuthorizationCache_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TokenId", DbType="BigInt")] System.Nullable<long> tokenId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tokenId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Internal].[ComputeRunbookAuthorizationCache]" +
			"")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Internal___ComputeRunbookAuthorizationCache_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TokenId", DbType="BigInt")] System.Nullable<long> tokenId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tokenId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Internal].[DeleteRunbookOutputParameters]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Internal___DeleteRunbookOutputParameters_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RunbookId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> runbookId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), runbookId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Internal].[InsertRunbookOutputParameters]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Internal___InsertRunbookOutputParameters_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RunbookId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> runbookId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutputParametersXml", DbType="NVarChar(MAX)")] string outputParametersXml)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), runbookId, outputParametersXml);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Internal].[PopulateAuthorizationCache]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Internal___PopulateAuthorizationCache_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TokenId", DbType="BigInt")] System.Nullable<long> tokenId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UniqueId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> uniqueId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Rights", DbType="BigInt")] System.Nullable<long> rights)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tokenId, uniqueId, rights);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Internal].[RethrowError]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Internal___RethrowError_()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Internal].[SetProductInfo]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Internal___SetProductInfo_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductKey", DbType="NVarChar(2000)")] string productKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExpirationDate", DbType="NVarChar(2000)")] string expirationDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productKey, expirationDate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Internal].[UpdateRunbookOutputParameters]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Internal___UpdateRunbookOutputParameters_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RunbookId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> runbookId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutputParametersXml", DbType="NVarChar(MAX)")] string outputParametersXml)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), runbookId, outputParametersXml);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Maintenance].[AuthorizationMaintenance]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Maintenance___AuthorizationMaintenance_([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> currentTime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> lastExecutionTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), currentTime, lastExecutionTime);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Maintenance].[EnqueueRecurrentTask]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Maintenance___EnqueueRecurrentTask_([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(256)")] string taskName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), taskName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Maintenance].[EnqueueTask]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Maintenance___EnqueueTask_([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(256)")] string taskName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), taskName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Runtime].[CancelJob]")]
		public ISingleResult<_Microsoft_SystemCenter_Orchestrator_Runtime___CancelJob_Result> _Microsoft_SystemCenter_Orchestrator_Runtime___CancelJob_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> jobId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CanceledBy", DbType="NVarChar(50)")] string canceledBy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jobId, canceledBy);
			return ((ISingleResult<_Microsoft_SystemCenter_Orchestrator_Runtime___CancelJob_Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Runtime].[CreateJob]")]
		public ISingleResult<_Microsoft_SystemCenter_Orchestrator_Runtime___CreateJob_Result> _Microsoft_SystemCenter_Orchestrator_Runtime___CreateJob_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RunbookId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> runbookId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Parameters", DbType="NVarChar(MAX)")] string parameters, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RunbookServers", DbType="NVarChar(2000)")] string runbookServers, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedBy", DbType="NVarChar(50)")] string createdBy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), runbookId, parameters, runbookServers, createdBy);
			return ((ISingleResult<_Microsoft_SystemCenter_Orchestrator_Runtime___CreateJob_Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Runtime.Internal].[CancelRunbook]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Runtime_Internal___CancelRunbook_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RunbookId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> runbookId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CanceledBy", DbType="NVarChar(50)")] string canceledBy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), runbookId, canceledBy);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Runtime.Internal].[ClearOrphanedRunbookInsta" +
			"nces]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Runtime_Internal___ClearOrphanedRunbookInstances_()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Runtime.Internal].[CompleteJob]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Runtime_Internal___CompleteJob_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> jobId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SeqNumber", DbType="BigInt")] System.Nullable<long> seqNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RunbookId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> runbookId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompletedBy", DbType="NVarChar(50)")] string completedBy, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobStatus", DbType="Int")] System.Nullable<int> jobStatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jobId, seqNumber, runbookId, completedBy, jobStatus);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Runtime.Internal].[CreateJob]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Runtime_Internal___CreateJob_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RunbookId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> runbookId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Parameters", DbType="NVarChar(MAX)")] string parameters, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RunbookServers", DbType="NVarChar(2000)")] string runbookServers, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedBy", DbType="NVarChar(50)")] string createdBy, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParentJobId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> parentJobId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParentSequenceNumber", DbType="BigInt")] System.Nullable<long> parentSequenceNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParentWaiting", DbType="Bit")] System.Nullable<bool> parentWaiting, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SequenceNumber", DbType="BigInt")] ref System.Nullable<long> sequenceNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(2000)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(2000)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), runbookId, parameters, runbookServers, createdBy, parentJobId, parentSequenceNumber, parentWaiting, sequenceNumber, username, password);
			sequenceNumber = ((System.Nullable<long>)(result.GetParameterValue(7)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Statistics.Internal].[ComputeInProgressInsta" +
			"nceStatistics]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Statistics_Internal___ComputeInProgressInstanceStatistics_([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> currentTime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> lastExecutionTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), currentTime, lastExecutionTime);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Statistics.Internal].[ComputeInProgressJobSt" +
			"atistics]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Statistics_Internal___ComputeInProgressJobStatistics_([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> currentTime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> lastExecutionTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), currentTime, lastExecutionTime);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Statistics.Internal].[ComputeInstanceStatist" +
			"ics]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Statistics_Internal___ComputeInstanceStatistics_([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> currentTime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> lastExecutionTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), currentTime, lastExecutionTime);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Statistics.Internal].[ComputeJobStatistics]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Statistics_Internal___ComputeJobStatistics_([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> currentTime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> lastExecutionTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), currentTime, lastExecutionTime);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Statistics.Internal].[ComputeQueuedJobStatis" +
			"tics]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Statistics_Internal___ComputeQueuedJobStatistics_([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> currentTime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> lastExecutionTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), currentTime, lastExecutionTime);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Statistics.Internal].[ComputeStatistics]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Statistics_Internal___ComputeStatistics_([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> currentTime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> lastExecutionTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), currentTime, lastExecutionTime);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Statistics.Internal].[GetStatisticsSummary]")]
		public ISingleResult<_Microsoft_SystemCenter_Orchestrator_Statistics_Internal___GetStatisticsSummary_Result> _Microsoft_SystemCenter_Orchestrator_Statistics_Internal___GetStatisticsSummary_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TokenId", DbType="BigInt")] System.Nullable<long> tokenId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Rights", DbType="BigInt")] System.Nullable<long> rights, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Path", DbType="NVarChar(4000)")] string path)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tokenId, rights, path);
			return ((ISingleResult<_Microsoft_SystemCenter_Orchestrator_Statistics_Internal___GetStatisticsSummary_Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Statistics.Internal].[PurgeStatistics]")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int _Microsoft_SystemCenter_Orchestrator_Statistics_Internal___PurgeStatistics_([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XEntries", DbType="Int")] System.Nullable<int> xEntries, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="YDays", DbType="Int")] System.Nullable<int> yDays, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilterType", DbType="Int")] System.Nullable<int> filterType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PolicyID", DbType="NVarChar(50)")] string policyID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xEntries, yDays, filterType, policyID);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACTIONSERVERS")]
	public partial class ACTIONSERVERS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Computer;
		
		private string _Description;
		
		private string _Type;
		
		private int _Priority;
		
		private bool _IsPAS;
		
		private System.Nullable<System.DateTime> _Heartbeat;
		
		private System.Nullable<bool> _LocalSystemAccount;
		
		private System.Nullable<bool> _ThisAccount;
		
		private string _Account;
		
		private System.Nullable<bool> _MonitorCPU;
		
		private System.Nullable<int> _MonitorCPUValue;
		
		private System.Nullable<bool> _MonitorMemory;
		
		private System.Nullable<int> _MonitorMemoryValue;
		
		private string _Version;
		
		private System.Nullable<int> _Role;
		
		private System.Nullable<System.DateTime> _DeploymentTime;
		
		private int _MaxRunningPolicies;
		
		private EntitySet<POLICY_PUBLISH_QUEUE> _POLICY_PUBLISH_QUEUE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnComputerChanging(string value);
    partial void OnComputerChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    partial void OnIsPASChanging(bool value);
    partial void OnIsPASChanged();
    partial void OnHeartbeatChanging(System.Nullable<System.DateTime> value);
    partial void OnHeartbeatChanged();
    partial void OnLocalSystemAccountChanging(System.Nullable<bool> value);
    partial void OnLocalSystemAccountChanged();
    partial void OnThisAccountChanging(System.Nullable<bool> value);
    partial void OnThisAccountChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnMonitorCPUChanging(System.Nullable<bool> value);
    partial void OnMonitorCPUChanged();
    partial void OnMonitorCPUValueChanging(System.Nullable<int> value);
    partial void OnMonitorCPUValueChanged();
    partial void OnMonitorMemoryChanging(System.Nullable<bool> value);
    partial void OnMonitorMemoryChanged();
    partial void OnMonitorMemoryValueChanging(System.Nullable<int> value);
    partial void OnMonitorMemoryValueChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnRoleChanging(System.Nullable<int> value);
    partial void OnRoleChanged();
    partial void OnDeploymentTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDeploymentTimeChanged();
    partial void OnMaxRunningPoliciesChanging(int value);
    partial void OnMaxRunningPoliciesChanged();
    #endregion
		
		public ACTIONSERVERS()
		{
			this._POLICY_PUBLISH_QUEUE = new EntitySet<POLICY_PUBLISH_QUEUE>(new Action<POLICY_PUBLISH_QUEUE>(this.attach_POLICY_PUBLISH_QUEUE), new Action<POLICY_PUBLISH_QUEUE>(this.detach_POLICY_PUBLISH_QUEUE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Computer", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Computer
		{
			get
			{
				return this._Computer;
			}
			set
			{
				if ((this._Computer != value))
				{
					this.OnComputerChanging(value);
					this.SendPropertyChanging();
					this._Computer = value;
					this.SendPropertyChanged("Computer");
					this.OnComputerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(500)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPAS", DbType="Bit NOT NULL")]
		public bool IsPAS
		{
			get
			{
				return this._IsPAS;
			}
			set
			{
				if ((this._IsPAS != value))
				{
					this.OnIsPASChanging(value);
					this.SendPropertyChanging();
					this._IsPAS = value;
					this.SendPropertyChanged("IsPAS");
					this.OnIsPASChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heartbeat", DbType="DateTime")]
		public System.Nullable<System.DateTime> Heartbeat
		{
			get
			{
				return this._Heartbeat;
			}
			set
			{
				if ((this._Heartbeat != value))
				{
					this.OnHeartbeatChanging(value);
					this.SendPropertyChanging();
					this._Heartbeat = value;
					this.SendPropertyChanged("Heartbeat");
					this.OnHeartbeatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalSystemAccount", DbType="Bit")]
		public System.Nullable<bool> LocalSystemAccount
		{
			get
			{
				return this._LocalSystemAccount;
			}
			set
			{
				if ((this._LocalSystemAccount != value))
				{
					this.OnLocalSystemAccountChanging(value);
					this.SendPropertyChanging();
					this._LocalSystemAccount = value;
					this.SendPropertyChanged("LocalSystemAccount");
					this.OnLocalSystemAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThisAccount", DbType="Bit")]
		public System.Nullable<bool> ThisAccount
		{
			get
			{
				return this._ThisAccount;
			}
			set
			{
				if ((this._ThisAccount != value))
				{
					this.OnThisAccountChanging(value);
					this.SendPropertyChanging();
					this._ThisAccount = value;
					this.SendPropertyChanged("ThisAccount");
					this.OnThisAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonitorCPU", DbType="Bit")]
		public System.Nullable<bool> MonitorCPU
		{
			get
			{
				return this._MonitorCPU;
			}
			set
			{
				if ((this._MonitorCPU != value))
				{
					this.OnMonitorCPUChanging(value);
					this.SendPropertyChanging();
					this._MonitorCPU = value;
					this.SendPropertyChanged("MonitorCPU");
					this.OnMonitorCPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonitorCPUValue", DbType="Int")]
		public System.Nullable<int> MonitorCPUValue
		{
			get
			{
				return this._MonitorCPUValue;
			}
			set
			{
				if ((this._MonitorCPUValue != value))
				{
					this.OnMonitorCPUValueChanging(value);
					this.SendPropertyChanging();
					this._MonitorCPUValue = value;
					this.SendPropertyChanged("MonitorCPUValue");
					this.OnMonitorCPUValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonitorMemory", DbType="Bit")]
		public System.Nullable<bool> MonitorMemory
		{
			get
			{
				return this._MonitorMemory;
			}
			set
			{
				if ((this._MonitorMemory != value))
				{
					this.OnMonitorMemoryChanging(value);
					this.SendPropertyChanging();
					this._MonitorMemory = value;
					this.SendPropertyChanged("MonitorMemory");
					this.OnMonitorMemoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonitorMemoryValue", DbType="Int")]
		public System.Nullable<int> MonitorMemoryValue
		{
			get
			{
				return this._MonitorMemoryValue;
			}
			set
			{
				if ((this._MonitorMemoryValue != value))
				{
					this.OnMonitorMemoryValueChanging(value);
					this.SendPropertyChanging();
					this._MonitorMemoryValue = value;
					this.SendPropertyChanged("MonitorMemoryValue");
					this.OnMonitorMemoryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(20)")]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="Int")]
		public System.Nullable<int> Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeploymentTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeploymentTime
		{
			get
			{
				return this._DeploymentTime;
			}
			set
			{
				if ((this._DeploymentTime != value))
				{
					this.OnDeploymentTimeChanging(value);
					this.SendPropertyChanging();
					this._DeploymentTime = value;
					this.SendPropertyChanged("DeploymentTime");
					this.OnDeploymentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxRunningPolicies", DbType="Int NOT NULL")]
		public int MaxRunningPolicies
		{
			get
			{
				return this._MaxRunningPolicies;
			}
			set
			{
				if ((this._MaxRunningPolicies != value))
				{
					this.OnMaxRunningPoliciesChanging(value);
					this.SendPropertyChanging();
					this._MaxRunningPolicies = value;
					this.SendPropertyChanged("MaxRunningPolicies");
					this.OnMaxRunningPoliciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACTIONSERVERS_POLICY_PUBLISH_QUEUE", Storage="_POLICY_PUBLISH_QUEUE", ThisKey="UniqueID", OtherKey="AssignedActionServer")]
		public EntitySet<POLICY_PUBLISH_QUEUE> POLICY_PUBLISH_QUEUE
		{
			get
			{
				return this._POLICY_PUBLISH_QUEUE;
			}
			set
			{
				this._POLICY_PUBLISH_QUEUE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_POLICY_PUBLISH_QUEUE(POLICY_PUBLISH_QUEUE entity)
		{
			this.SendPropertyChanging();
			entity.ACTIONSERVERS = this;
		}
		
		private void detach_POLICY_PUBLISH_QUEUE(POLICY_PUBLISH_QUEUE entity)
		{
			this.SendPropertyChanging();
			entity.ACTIONSERVERS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator].[Activities]")]
	public partial class _Microsoft_SystemCenter_Orchestrator___Activities_
	{
		
		private System.Guid _Id;
		
		private System.Guid _RunbookId;
		
		private string _Name;
		
		private string _TypeName;
		
		private string _Description;
		
		private System.DateTime _CreationTime;
		
		private string _CreatedBy;
		
		private System.DateTime _LastModifiedTime;
		
		private string _LastModifiedBy;
		
		private bool _Enabled;
		
		private System.Nullable<int> _PositionX;
		
		private System.Nullable<int> _PositionY;
		
		public _Microsoft_SystemCenter_Orchestrator___Activities_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RunbookId
		{
			get
			{
				return this._RunbookId;
			}
			set
			{
				if ((this._RunbookId != value))
				{
					this._RunbookId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this._TypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this._CreationTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedTime
		{
			get
			{
				return this._LastModifiedTime;
			}
			set
			{
				if ((this._LastModifiedTime != value))
				{
					this._LastModifiedTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this._LastModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this._Enabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionX", DbType="Int")]
		public System.Nullable<int> PositionX
		{
			get
			{
				return this._PositionX;
			}
			set
			{
				if ((this._PositionX != value))
				{
					this._PositionX = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionY", DbType="Int")]
		public System.Nullable<int> PositionY
		{
			get
			{
				return this._PositionY;
			}
			set
			{
				if ((this._PositionY != value))
				{
					this._PositionY = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Runtime].[ActivityInstanceData]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Runtime___ActivityInstanceData_
	{
		
		private System.Guid _Id;
		
		private System.Guid _ActivityInstanceId;
		
		private string _Name;
		
		private string _Value;
		
		private System.Nullable<int> _GroupId;
		
		public _Microsoft_SystemCenter_Orchestrator_Runtime___ActivityInstanceData_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityInstanceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ActivityInstanceId
		{
			get
			{
				return this._ActivityInstanceId;
			}
			set
			{
				if ((this._ActivityInstanceId != value))
				{
					this._ActivityInstanceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this._GroupId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Runtime].[ActivityInstances]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Runtime___ActivityInstances_
	{
		
		private System.Guid _Id;
		
		private System.Guid _RunbookInstanceId;
		
		private System.Guid _ActivityId;
		
		private int _SequenceNumber;
		
		private string _Status;
		
		private System.DateTime _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		public _Microsoft_SystemCenter_Orchestrator_Runtime___ActivityInstances_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookInstanceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RunbookInstanceId
		{
			get
			{
				return this._RunbookInstanceId;
			}
			set
			{
				if ((this._RunbookInstanceId != value))
				{
					this._RunbookInstanceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					this._ActivityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="Int NOT NULL")]
		public int SequenceNumber
		{
			get
			{
				return this._SequenceNumber;
			}
			set
			{
				if ((this._SequenceNumber != value))
				{
					this._SequenceNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(64)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this._StartTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this._EndTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AUDIT_TRAIL_CONFIG")]
	public partial class AUDIT_TRAIL_CONFIG
	{
		
		private bool _EnableAuditTrail;
		
		public AUDIT_TRAIL_CONFIG()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableAuditTrail", DbType="Bit NOT NULL")]
		public bool EnableAuditTrail
		{
			get
			{
				return this._EnableAuditTrail;
			}
			set
			{
				if ((this._EnableAuditTrail != value))
				{
					this._EnableAuditTrail = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AUDIT_TRAIL_SCRUBLIST")]
	public partial class AUDIT_TRAIL_SCRUBLIST
	{
		
		private string _FieldName;
		
		public AUDIT_TRAIL_SCRUBLIST()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this._FieldName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AUDITEVENTS")]
	public partial class AUDITEVENTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Source;
		
		private string _User;
		
		private System.Nullable<System.DateTime> _DateTime;
		
		private string _Message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnUserChanging(string value);
    partial void OnUserChanged();
    partial void OnDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
		
		public AUDITEVENTS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(200)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User", DbType="NVarChar(200)")]
		public string User
		{
			get
			{
				return this._User;
			}
			set
			{
				if ((this._User != value))
				{
					this.OnUserChanging(value);
					this.SendPropertyChanging();
					this._User = value;
					this.SendPropertyChanged("User");
					this.OnUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Internal].[AuthorizationCache]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Internal___AuthorizationCache_
	{
		
		private long _TokenId;
		
		private System.Guid _UniqueId;
		
		private long _Rights;
		
		private bool _HasAccess;
		
		public _Microsoft_SystemCenter_Orchestrator_Internal___AuthorizationCache_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TokenId", DbType="BigInt NOT NULL")]
		public long TokenId
		{
			get
			{
				return this._TokenId;
			}
			set
			{
				if ((this._TokenId != value))
				{
					this._TokenId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueId
		{
			get
			{
				return this._UniqueId;
			}
			set
			{
				if ((this._UniqueId != value))
				{
					this._UniqueId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rights", DbType="BigInt NOT NULL")]
		public long Rights
		{
			get
			{
				return this._Rights;
			}
			set
			{
				if ((this._Rights != value))
				{
					this._Rights = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAccess", DbType="Bit NOT NULL")]
		public bool HasAccess
		{
			get
			{
				return this._HasAccess;
			}
			set
			{
				if ((this._HasAccess != value))
				{
					this._HasAccess = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAPS")]
	public partial class CAPS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Name;
		
		private string _Description;
		
		private decimal _Version;
		
		private string _Library;
		
		private string _ProductName;
		
		private System.Nullable<System.Guid> _ProductID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnVersionChanging(decimal value);
    partial void OnVersionChanged();
    partial void OnLibraryChanging(string value);
    partial void OnLibraryChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnProductIDChanging(System.Nullable<System.Guid> value);
    partial void OnProductIDChanged();
    #endregion
		
		public CAPS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Decimal(8,4) NOT NULL")]
		public decimal Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Library", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Library
		{
			get
			{
				return this._Library;
			}
			set
			{
				if ((this._Library != value))
				{
					this.OnLibraryChanging(value);
					this.SendPropertyChanging();
					this._Library = value;
					this.SendPropertyChanged("Library");
					this.OnLibraryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(200)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHECK_IN_HISTORY")]
	public partial class CHECK_IN_HISTORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ObjectID;
		
		private string _CheckInUser;
		
		private string _Comment;
		
		private System.DateTime _DateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnObjectIDChanging(System.Guid value);
    partial void OnObjectIDChanged();
    partial void OnCheckInUserChanging(string value);
    partial void OnCheckInUserChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    #endregion
		
		public CHECK_IN_HISTORY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckInUser", DbType="NVarChar(50)")]
		public string CheckInUser
		{
			get
			{
				return this._CheckInUser;
			}
			set
			{
				if ((this._CheckInUser != value))
				{
					this.OnCheckInUserChanging(value);
					this.SendPropertyChanging();
					this._CheckInUser = value;
					this.SendPropertyChanged("CheckInUser");
					this.OnCheckInUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(2000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLIENTCONNECTIONS")]
	public partial class CLIENTCONNECTIONS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _ManagementServer;
		
		private string _ClientMachine;
		
		private string _ClientUser;
		
		private string _ClientVersion;
		
		private System.Nullable<System.DateTime> _ConnectionTime;
		
		private System.Nullable<System.DateTime> _LastActivity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnManagementServerChanging(string value);
    partial void OnManagementServerChanged();
    partial void OnClientMachineChanging(string value);
    partial void OnClientMachineChanged();
    partial void OnClientUserChanging(string value);
    partial void OnClientUserChanged();
    partial void OnClientVersionChanging(string value);
    partial void OnClientVersionChanged();
    partial void OnConnectionTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnConnectionTimeChanged();
    partial void OnLastActivityChanging(System.Nullable<System.DateTime> value);
    partial void OnLastActivityChanged();
    #endregion
		
		public CLIENTCONNECTIONS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagementServer", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ManagementServer
		{
			get
			{
				return this._ManagementServer;
			}
			set
			{
				if ((this._ManagementServer != value))
				{
					this.OnManagementServerChanging(value);
					this.SendPropertyChanging();
					this._ManagementServer = value;
					this.SendPropertyChanged("ManagementServer");
					this.OnManagementServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientMachine", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ClientMachine
		{
			get
			{
				return this._ClientMachine;
			}
			set
			{
				if ((this._ClientMachine != value))
				{
					this.OnClientMachineChanging(value);
					this.SendPropertyChanging();
					this._ClientMachine = value;
					this.SendPropertyChanged("ClientMachine");
					this.OnClientMachineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientUser", DbType="NVarChar(200)")]
		public string ClientUser
		{
			get
			{
				return this._ClientUser;
			}
			set
			{
				if ((this._ClientUser != value))
				{
					this.OnClientUserChanging(value);
					this.SendPropertyChanging();
					this._ClientUser = value;
					this.SendPropertyChanged("ClientUser");
					this.OnClientUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientVersion", DbType="NVarChar(50)")]
		public string ClientVersion
		{
			get
			{
				return this._ClientVersion;
			}
			set
			{
				if ((this._ClientVersion != value))
				{
					this.OnClientVersionChanging(value);
					this.SendPropertyChanging();
					this._ClientVersion = value;
					this.SendPropertyChanged("ClientVersion");
					this.OnClientVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConnectionTime
		{
			get
			{
				return this._ConnectionTime;
			}
			set
			{
				if ((this._ConnectionTime != value))
				{
					this.OnConnectionTimeChanging(value);
					this.SendPropertyChanging();
					this._ConnectionTime = value;
					this.SendPropertyChanged("ConnectionTime");
					this.OnConnectionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivity", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastActivity
		{
			get
			{
				return this._LastActivity;
			}
			set
			{
				if ((this._LastActivity != value))
				{
					this.OnLastActivityChanging(value);
					this.SendPropertyChanging();
					this._LastActivity = value;
					this.SendPropertyChanged("LastActivity");
					this.OnLastActivityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COMPUTERGROUPS")]
	public partial class COMPUTERGROUPS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ParentID;
		
		private string _ContentType;
		
		private string _Query;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnParentIDChanging(System.Guid value);
    partial void OnParentIDChanged();
    partial void OnContentTypeChanging(string value);
    partial void OnContentTypeChanged();
    partial void OnQueryChanging(string value);
    partial void OnQueryChanged();
    #endregion
		
		public COMPUTERGROUPS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this.OnContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("ContentType");
					this.OnContentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Query", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Query
		{
			get
			{
				return this._Query;
			}
			set
			{
				if ((this._Query != value))
				{
					this.OnQueryChanging(value);
					this.SendPropertyChanging();
					this._Query = value;
					this.SendPropertyChanged("Query");
					this.OnQueryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONFIGURATION")]
	public partial class CONFIGURATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _TypeGUID;
		
		private string _DataName;
		
		private string _DataValue;
		
		private System.Nullable<bool> _IsPassword;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnTypeGUIDChanging(System.Guid value);
    partial void OnTypeGUIDChanged();
    partial void OnDataNameChanging(string value);
    partial void OnDataNameChanged();
    partial void OnDataValueChanging(string value);
    partial void OnDataValueChanged();
    partial void OnIsPasswordChanging(System.Nullable<bool> value);
    partial void OnIsPasswordChanged();
    #endregion
		
		public CONFIGURATION()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TypeGUID
		{
			get
			{
				return this._TypeGUID;
			}
			set
			{
				if ((this._TypeGUID != value))
				{
					this.OnTypeGUIDChanging(value);
					this.SendPropertyChanging();
					this._TypeGUID = value;
					this.SendPropertyChanged("TypeGUID");
					this.OnTypeGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataName", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string DataName
		{
			get
			{
				return this._DataName;
			}
			set
			{
				if ((this._DataName != value))
				{
					this.OnDataNameChanging(value);
					this.SendPropertyChanging();
					this._DataName = value;
					this.SendPropertyChanged("DataName");
					this.OnDataNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataValue", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string DataValue
		{
			get
			{
				return this._DataValue;
			}
			set
			{
				if ((this._DataValue != value))
				{
					this.OnDataValueChanging(value);
					this.SendPropertyChanging();
					this._DataValue = value;
					this.SendPropertyChanged("DataValue");
					this.OnDataValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPassword", DbType="Bit")]
		public System.Nullable<bool> IsPassword
		{
			get
			{
				return this._IsPassword;
			}
			set
			{
				if ((this._IsPassword != value))
				{
					this.OnIsPasswordChanging(value);
					this.SendPropertyChanging();
					this._IsPassword = value;
					this.SendPropertyChanged("IsPassword");
					this.OnIsPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COUNTER_STATUS")]
	public partial class COUNTER_STATUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Nullable<System.Guid> _CounterID;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnCounterIDChanging(System.Nullable<System.Guid> value);
    partial void OnCounterIDChanged();
    #endregion
		
		public COUNTER_STATUS()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CounterID
		{
			get
			{
				return this._CounterID;
			}
			set
			{
				if ((this._CounterID != value))
				{
					this.OnCounterIDChanging(value);
					this.SendPropertyChanging();
					this._CounterID = value;
					this.SendPropertyChanged("CounterID");
					this.OnCounterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_COUNTER_STATUS", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.COUNTER_STATUS = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.COUNTER_STATUS = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COUNTERINSTANCES")]
	public partial class COUNTERINSTANCES
	{
		
		private System.Guid _UniqueID;
		
		private System.Nullable<int> _Value;
		
		private System.Nullable<System.DateTime> _LastModified;
		
		private long _Marker;
		
		public COUNTERINSTANCES()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this._UniqueID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int")]
		public System.Nullable<int> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this._LastModified = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marker", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long Marker
		{
			get
			{
				return this._Marker;
			}
			set
			{
				if ((this._Marker != value))
				{
					this._Marker = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COUNTERS")]
	public partial class COUNTERS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Nullable<int> _DefaultValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnDefaultValueChanging(System.Nullable<int> value);
    partial void OnDefaultValueChanged();
    #endregion
		
		public COUNTERS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultValue", DbType="Int")]
		public System.Nullable<int> DefaultValue
		{
			get
			{
				return this._DefaultValue;
			}
			set
			{
				if ((this._DefaultValue != value))
				{
					this.OnDefaultValueChanging(value);
					this.SendPropertyChanging();
					this._DefaultValue = value;
					this.SendPropertyChanged("DefaultValue");
					this.OnDefaultValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOM_START")]
	public partial class CUSTOM_START
	{
		
		private System.Guid _UniqueID;
		
		public CUSTOM_START()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this._UniqueID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOM_START_PARAMETERS")]
	public partial class CUSTOM_START_PARAMETERS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ParentID;
		
		private string _Value;
		
		private string _Type;
		
		private string _ParameterDescription;
		
		private System.Nullable<int> _GroupID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnParentIDChanging(System.Guid value);
    partial void OnParentIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnParameterDescriptionChanging(string value);
    partial void OnParameterDescriptionChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    #endregion
		
		public CUSTOM_START_PARAMETERS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParameterDescription", DbType="NVarChar(200)")]
		public string ParameterDescription
		{
			get
			{
				return this._ParameterDescription;
			}
			set
			{
				if ((this._ParameterDescription != value))
				{
					this.OnParameterDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ParameterDescription = value;
					this.SendPropertyChanged("ParameterDescription");
					this.OnParameterDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DESIGNATED_ACTION_SERVERS")]
	public partial class DESIGNATED_ACTION_SERVERS
	{
		
		private System.Guid _PolicyID;
		
		private System.Guid _ActionServerID;
		
		private int _Role;
		
		public DESIGNATED_ACTION_SERVERS()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolicyID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PolicyID
		{
			get
			{
				return this._PolicyID;
			}
			set
			{
				if ((this._PolicyID != value))
				{
					this._PolicyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionServerID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ActionServerID
		{
			get
			{
				return this._ActionServerID;
			}
			set
			{
				if ((this._ActionServerID != value))
				{
					this._ActionServerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="Int NOT NULL")]
		public int Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this._Role = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMAIL_ATTACHMENTS")]
	public partial class EMAIL_ATTACHMENTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ParentID;
		
		private string _Filename;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnParentIDChanging(System.Guid value);
    partial void OnParentIDChanged();
    partial void OnFilenameChanging(string value);
    partial void OnFilenameChanged();
    #endregion
		
		public EMAIL_ATTACHMENTS()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filename", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this.OnFilenameChanging(value);
					this.SendPropertyChanging();
					this._Filename = value;
					this.SendPropertyChanged("Filename");
					this.OnFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EMAIL_ATTACHMENTS", Storage="_OBJECTS", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.EMAIL_ATTACHMENTS.Remove(this);
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.EMAIL_ATTACHMENTS.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMAIL_RECIPIENTS")]
	public partial class EMAIL_RECIPIENTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ParentID;
		
		private int _Type;
		
		private string _Address;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnParentIDChanging(System.Guid value);
    partial void OnParentIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public EMAIL_RECIPIENTS()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EMAIL_RECIPIENTS", Storage="_OBJECTS", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.EMAIL_RECIPIENTS.Remove(this);
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.EMAIL_RECIPIENTS.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ENCRYPTION_RUNDECRYPTION")]
	public partial class ENCRYPTION_RUNDECRYPTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Source;
		
		private string _OutputFolder;
		
		private System.Nullable<int> _IncludeSubfolder;
		
		private System.Nullable<int> _Overwrite;
		
		private string _Key;
		
		private string _HomeFolder;
		
		private string _PassPhrase;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnOutputFolderChanging(string value);
    partial void OnOutputFolderChanged();
    partial void OnIncludeSubfolderChanging(System.Nullable<int> value);
    partial void OnIncludeSubfolderChanged();
    partial void OnOverwriteChanging(System.Nullable<int> value);
    partial void OnOverwriteChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnHomeFolderChanging(string value);
    partial void OnHomeFolderChanged();
    partial void OnPassPhraseChanging(string value);
    partial void OnPassPhraseChanged();
    #endregion
		
		public ENCRYPTION_RUNDECRYPTION()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(500)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutputFolder", DbType="NVarChar(500)")]
		public string OutputFolder
		{
			get
			{
				return this._OutputFolder;
			}
			set
			{
				if ((this._OutputFolder != value))
				{
					this.OnOutputFolderChanging(value);
					this.SendPropertyChanging();
					this._OutputFolder = value;
					this.SendPropertyChanged("OutputFolder");
					this.OnOutputFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeSubfolder", DbType="Int")]
		public System.Nullable<int> IncludeSubfolder
		{
			get
			{
				return this._IncludeSubfolder;
			}
			set
			{
				if ((this._IncludeSubfolder != value))
				{
					this.OnIncludeSubfolderChanging(value);
					this.SendPropertyChanging();
					this._IncludeSubfolder = value;
					this.SendPropertyChanged("IncludeSubfolder");
					this.OnIncludeSubfolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overwrite", DbType="Int")]
		public System.Nullable<int> Overwrite
		{
			get
			{
				return this._Overwrite;
			}
			set
			{
				if ((this._Overwrite != value))
				{
					this.OnOverwriteChanging(value);
					this.SendPropertyChanging();
					this._Overwrite = value;
					this.SendPropertyChanged("Overwrite");
					this.OnOverwriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Key", DbType="NVarChar(500)")]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeFolder", DbType="NVarChar(500)")]
		public string HomeFolder
		{
			get
			{
				return this._HomeFolder;
			}
			set
			{
				if ((this._HomeFolder != value))
				{
					this.OnHomeFolderChanging(value);
					this.SendPropertyChanging();
					this._HomeFolder = value;
					this.SendPropertyChanged("HomeFolder");
					this.OnHomeFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassPhrase", DbType="NVarChar(2000)")]
		public string PassPhrase
		{
			get
			{
				return this._PassPhrase;
			}
			set
			{
				if ((this._PassPhrase != value))
				{
					this.OnPassPhraseChanging(value);
					this.SendPropertyChanging();
					this._PassPhrase = value;
					this.SendPropertyChanged("PassPhrase");
					this.OnPassPhraseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_ENCRYPTION_RUNDECRYPTION", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.ENCRYPTION_RUNDECRYPTION = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.ENCRYPTION_RUNDECRYPTION = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ENCRYPTION_RUNENCRYPTION")]
	public partial class ENCRYPTION_RUNENCRYPTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Source;
		
		private string _OutputFolder;
		
		private System.Nullable<int> _IncludeSubfolder;
		
		private System.Nullable<int> _Overwrite;
		
		private string _Extension;
		
		private string _Key;
		
		private string _HomeFolder;
		
		private string _User;
		
		private string _Comment;
		
		private string _Email;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnOutputFolderChanging(string value);
    partial void OnOutputFolderChanged();
    partial void OnIncludeSubfolderChanging(System.Nullable<int> value);
    partial void OnIncludeSubfolderChanged();
    partial void OnOverwriteChanging(System.Nullable<int> value);
    partial void OnOverwriteChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnHomeFolderChanging(string value);
    partial void OnHomeFolderChanged();
    partial void OnUserChanging(string value);
    partial void OnUserChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public ENCRYPTION_RUNENCRYPTION()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(500)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutputFolder", DbType="NVarChar(500)")]
		public string OutputFolder
		{
			get
			{
				return this._OutputFolder;
			}
			set
			{
				if ((this._OutputFolder != value))
				{
					this.OnOutputFolderChanging(value);
					this.SendPropertyChanging();
					this._OutputFolder = value;
					this.SendPropertyChanged("OutputFolder");
					this.OnOutputFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeSubfolder", DbType="Int")]
		public System.Nullable<int> IncludeSubfolder
		{
			get
			{
				return this._IncludeSubfolder;
			}
			set
			{
				if ((this._IncludeSubfolder != value))
				{
					this.OnIncludeSubfolderChanging(value);
					this.SendPropertyChanging();
					this._IncludeSubfolder = value;
					this.SendPropertyChanged("IncludeSubfolder");
					this.OnIncludeSubfolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overwrite", DbType="Int")]
		public System.Nullable<int> Overwrite
		{
			get
			{
				return this._Overwrite;
			}
			set
			{
				if ((this._Overwrite != value))
				{
					this.OnOverwriteChanging(value);
					this.SendPropertyChanging();
					this._Overwrite = value;
					this.SendPropertyChanged("Overwrite");
					this.OnOverwriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="NVarChar(500)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Key", DbType="NVarChar(500)")]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeFolder", DbType="NVarChar(500)")]
		public string HomeFolder
		{
			get
			{
				return this._HomeFolder;
			}
			set
			{
				if ((this._HomeFolder != value))
				{
					this.OnHomeFolderChanging(value);
					this.SendPropertyChanging();
					this._HomeFolder = value;
					this.SendPropertyChanged("HomeFolder");
					this.OnHomeFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User", DbType="NVarChar(500)")]
		public string User
		{
			get
			{
				return this._User;
			}
			set
			{
				if ((this._User != value))
				{
					this.OnUserChanging(value);
					this.SendPropertyChanging();
					this._User = value;
					this.SendPropertyChanged("User");
					this.OnUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(500)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_ENCRYPTION_RUNENCRYPTION", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.ENCRYPTION_RUNENCRYPTION = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.ENCRYPTION_RUNENCRYPTION = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EVENT_DATETIME")]
	public partial class EVENT_DATETIME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Type;
		
		private System.Nullable<int> _EveryDayValue;
		
		private System.Nullable<int> _EveryHourValue;
		
		private System.Nullable<int> _EveryMinuteValue;
		
		private System.Nullable<int> _EverySecondValue;
		
		private System.Nullable<bool> _AtTimeSlices;
		
		private System.Nullable<int> _StartMinuteAfterHour;
		
		private System.Nullable<int> _AtMinuteTrigger;
		
		private System.Nullable<int> _AtHourTrigger;
		
		private System.Nullable<bool> _TriggerImmediately;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnEveryDayValueChanging(System.Nullable<int> value);
    partial void OnEveryDayValueChanged();
    partial void OnEveryHourValueChanging(System.Nullable<int> value);
    partial void OnEveryHourValueChanged();
    partial void OnEveryMinuteValueChanging(System.Nullable<int> value);
    partial void OnEveryMinuteValueChanged();
    partial void OnEverySecondValueChanging(System.Nullable<int> value);
    partial void OnEverySecondValueChanged();
    partial void OnAtTimeSlicesChanging(System.Nullable<bool> value);
    partial void OnAtTimeSlicesChanged();
    partial void OnStartMinuteAfterHourChanging(System.Nullable<int> value);
    partial void OnStartMinuteAfterHourChanged();
    partial void OnAtMinuteTriggerChanging(System.Nullable<int> value);
    partial void OnAtMinuteTriggerChanged();
    partial void OnAtHourTriggerChanging(System.Nullable<int> value);
    partial void OnAtHourTriggerChanged();
    partial void OnTriggerImmediatelyChanging(System.Nullable<bool> value);
    partial void OnTriggerImmediatelyChanged();
    #endregion
		
		public EVENT_DATETIME()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EveryDayValue", DbType="Int")]
		public System.Nullable<int> EveryDayValue
		{
			get
			{
				return this._EveryDayValue;
			}
			set
			{
				if ((this._EveryDayValue != value))
				{
					this.OnEveryDayValueChanging(value);
					this.SendPropertyChanging();
					this._EveryDayValue = value;
					this.SendPropertyChanged("EveryDayValue");
					this.OnEveryDayValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EveryHourValue", DbType="Int")]
		public System.Nullable<int> EveryHourValue
		{
			get
			{
				return this._EveryHourValue;
			}
			set
			{
				if ((this._EveryHourValue != value))
				{
					this.OnEveryHourValueChanging(value);
					this.SendPropertyChanging();
					this._EveryHourValue = value;
					this.SendPropertyChanged("EveryHourValue");
					this.OnEveryHourValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EveryMinuteValue", DbType="Int")]
		public System.Nullable<int> EveryMinuteValue
		{
			get
			{
				return this._EveryMinuteValue;
			}
			set
			{
				if ((this._EveryMinuteValue != value))
				{
					this.OnEveryMinuteValueChanging(value);
					this.SendPropertyChanging();
					this._EveryMinuteValue = value;
					this.SendPropertyChanged("EveryMinuteValue");
					this.OnEveryMinuteValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EverySecondValue", DbType="Int")]
		public System.Nullable<int> EverySecondValue
		{
			get
			{
				return this._EverySecondValue;
			}
			set
			{
				if ((this._EverySecondValue != value))
				{
					this.OnEverySecondValueChanging(value);
					this.SendPropertyChanging();
					this._EverySecondValue = value;
					this.SendPropertyChanged("EverySecondValue");
					this.OnEverySecondValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtTimeSlices", DbType="Bit")]
		public System.Nullable<bool> AtTimeSlices
		{
			get
			{
				return this._AtTimeSlices;
			}
			set
			{
				if ((this._AtTimeSlices != value))
				{
					this.OnAtTimeSlicesChanging(value);
					this.SendPropertyChanging();
					this._AtTimeSlices = value;
					this.SendPropertyChanged("AtTimeSlices");
					this.OnAtTimeSlicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartMinuteAfterHour", DbType="Int")]
		public System.Nullable<int> StartMinuteAfterHour
		{
			get
			{
				return this._StartMinuteAfterHour;
			}
			set
			{
				if ((this._StartMinuteAfterHour != value))
				{
					this.OnStartMinuteAfterHourChanging(value);
					this.SendPropertyChanging();
					this._StartMinuteAfterHour = value;
					this.SendPropertyChanged("StartMinuteAfterHour");
					this.OnStartMinuteAfterHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtMinuteTrigger", DbType="Int")]
		public System.Nullable<int> AtMinuteTrigger
		{
			get
			{
				return this._AtMinuteTrigger;
			}
			set
			{
				if ((this._AtMinuteTrigger != value))
				{
					this.OnAtMinuteTriggerChanging(value);
					this.SendPropertyChanging();
					this._AtMinuteTrigger = value;
					this.SendPropertyChanged("AtMinuteTrigger");
					this.OnAtMinuteTriggerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtHourTrigger", DbType="Int")]
		public System.Nullable<int> AtHourTrigger
		{
			get
			{
				return this._AtHourTrigger;
			}
			set
			{
				if ((this._AtHourTrigger != value))
				{
					this.OnAtHourTriggerChanging(value);
					this.SendPropertyChanging();
					this._AtHourTrigger = value;
					this.SendPropertyChanged("AtHourTrigger");
					this.OnAtHourTriggerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerImmediately", DbType="Bit")]
		public System.Nullable<bool> TriggerImmediately
		{
			get
			{
				return this._TriggerImmediately;
			}
			set
			{
				if ((this._TriggerImmediately != value))
				{
					this.OnTriggerImmediatelyChanging(value);
					this.SendPropertyChanging();
					this._TriggerImmediately = value;
					this.SendPropertyChanged("TriggerImmediately");
					this.OnTriggerImmediatelyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_DATETIME", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.EVENT_DATETIME = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.EVENT_DATETIME = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EVENT_DISKSPACE")]
	public partial class EVENT_DISKSPACE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private int _TestInterval;
		
		private string _TimeType;
		
		private EntitySet<EVENT_DISKSPACE_DRIVEINFO> _EVENT_DISKSPACE_DRIVEINFO;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnTestIntervalChanging(int value);
    partial void OnTestIntervalChanged();
    partial void OnTimeTypeChanging(string value);
    partial void OnTimeTypeChanged();
    #endregion
		
		public EVENT_DISKSPACE()
		{
			this._EVENT_DISKSPACE_DRIVEINFO = new EntitySet<EVENT_DISKSPACE_DRIVEINFO>(new Action<EVENT_DISKSPACE_DRIVEINFO>(this.attach_EVENT_DISKSPACE_DRIVEINFO), new Action<EVENT_DISKSPACE_DRIVEINFO>(this.detach_EVENT_DISKSPACE_DRIVEINFO));
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestInterval", DbType="Int NOT NULL")]
		public int TestInterval
		{
			get
			{
				return this._TestInterval;
			}
			set
			{
				if ((this._TestInterval != value))
				{
					this.OnTestIntervalChanging(value);
					this.SendPropertyChanging();
					this._TestInterval = value;
					this.SendPropertyChanged("TestInterval");
					this.OnTestIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TimeType
		{
			get
			{
				return this._TimeType;
			}
			set
			{
				if ((this._TimeType != value))
				{
					this.OnTimeTypeChanging(value);
					this.SendPropertyChanging();
					this._TimeType = value;
					this.SendPropertyChanged("TimeType");
					this.OnTimeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EVENT_DISKSPACE_EVENT_DISKSPACE_DRIVEINFO", Storage="_EVENT_DISKSPACE_DRIVEINFO", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<EVENT_DISKSPACE_DRIVEINFO> EVENT_DISKSPACE_DRIVEINFO
		{
			get
			{
				return this._EVENT_DISKSPACE_DRIVEINFO;
			}
			set
			{
				this._EVENT_DISKSPACE_DRIVEINFO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_DISKSPACE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.EVENT_DISKSPACE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.EVENT_DISKSPACE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EVENT_DISKSPACE_DRIVEINFO(EVENT_DISKSPACE_DRIVEINFO entity)
		{
			this.SendPropertyChanging();
			entity.EVENT_DISKSPACE = this;
		}
		
		private void detach_EVENT_DISKSPACE_DRIVEINFO(EVENT_DISKSPACE_DRIVEINFO entity)
		{
			this.SendPropertyChanging();
			entity.EVENT_DISKSPACE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EVENT_DISKSPACE_DRIVEINFO")]
	public partial class EVENT_DISKSPACE_DRIVEINFO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ParentID;
		
		private string _DriveLetter;
		
		private int _SizeType;
		
		private int _Criteria;
		
		private int _Quantity;
		
		private EntityRef<EVENT_DISKSPACE> _EVENT_DISKSPACE;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnParentIDChanging(System.Guid value);
    partial void OnParentIDChanged();
    partial void OnDriveLetterChanging(string value);
    partial void OnDriveLetterChanged();
    partial void OnSizeTypeChanging(int value);
    partial void OnSizeTypeChanged();
    partial void OnCriteriaChanging(int value);
    partial void OnCriteriaChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public EVENT_DISKSPACE_DRIVEINFO()
		{
			this._EVENT_DISKSPACE = default(EntityRef<EVENT_DISKSPACE>);
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if ((this._EVENT_DISKSPACE.HasLoadedOrAssignedValue || this._OBJECTS.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriveLetter", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DriveLetter
		{
			get
			{
				return this._DriveLetter;
			}
			set
			{
				if ((this._DriveLetter != value))
				{
					this.OnDriveLetterChanging(value);
					this.SendPropertyChanging();
					this._DriveLetter = value;
					this.SendPropertyChanged("DriveLetter");
					this.OnDriveLetterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeType", DbType="Int NOT NULL")]
		public int SizeType
		{
			get
			{
				return this._SizeType;
			}
			set
			{
				if ((this._SizeType != value))
				{
					this.OnSizeTypeChanging(value);
					this.SendPropertyChanging();
					this._SizeType = value;
					this.SendPropertyChanged("SizeType");
					this.OnSizeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Criteria", DbType="Int NOT NULL")]
		public int Criteria
		{
			get
			{
				return this._Criteria;
			}
			set
			{
				if ((this._Criteria != value))
				{
					this.OnCriteriaChanging(value);
					this.SendPropertyChanging();
					this._Criteria = value;
					this.SendPropertyChanged("Criteria");
					this.OnCriteriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EVENT_DISKSPACE_EVENT_DISKSPACE_DRIVEINFO", Storage="_EVENT_DISKSPACE", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public EVENT_DISKSPACE EVENT_DISKSPACE
		{
			get
			{
				return this._EVENT_DISKSPACE.Entity;
			}
			set
			{
				EVENT_DISKSPACE previousValue = this._EVENT_DISKSPACE.Entity;
				if (((previousValue != value) 
							|| (this._EVENT_DISKSPACE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EVENT_DISKSPACE.Entity = null;
						previousValue.EVENT_DISKSPACE_DRIVEINFO.Remove(this);
					}
					this._EVENT_DISKSPACE.Entity = value;
					if ((value != null))
					{
						value.EVENT_DISKSPACE_DRIVEINFO.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("EVENT_DISKSPACE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_DISKSPACE_DRIVEINFO", Storage="_OBJECTS", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.EVENT_DISKSPACE_DRIVEINFO.Remove(this);
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.EVENT_DISKSPACE_DRIVEINFO.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EVENT_EVENTLOG")]
	public partial class EVENT_EVENTLOG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _ComputerName;
		
		private string _EventLogName;
		
		private System.Nullable<int> _Interval;
		
		private EntitySet<EVENT_EVENTLOGFILTER> _EVENT_EVENTLOGFILTER;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    partial void OnEventLogNameChanging(string value);
    partial void OnEventLogNameChanged();
    partial void OnIntervalChanging(System.Nullable<int> value);
    partial void OnIntervalChanged();
    #endregion
		
		public EVENT_EVENTLOG()
		{
			this._EVENT_EVENTLOGFILTER = new EntitySet<EVENT_EVENTLOGFILTER>(new Action<EVENT_EVENTLOGFILTER>(this.attach_EVENT_EVENTLOGFILTER), new Action<EVENT_EVENTLOGFILTER>(this.detach_EVENT_EVENTLOGFILTER));
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="NVarChar(500)")]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventLogName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string EventLogName
		{
			get
			{
				return this._EventLogName;
			}
			set
			{
				if ((this._EventLogName != value))
				{
					this.OnEventLogNameChanging(value);
					this.SendPropertyChanging();
					this._EventLogName = value;
					this.SendPropertyChanged("EventLogName");
					this.OnEventLogNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interval", DbType="Int")]
		public System.Nullable<int> Interval
		{
			get
			{
				return this._Interval;
			}
			set
			{
				if ((this._Interval != value))
				{
					this.OnIntervalChanging(value);
					this.SendPropertyChanging();
					this._Interval = value;
					this.SendPropertyChanged("Interval");
					this.OnIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EVENT_EVENTLOG_EVENT_EVENTLOGFILTER", Storage="_EVENT_EVENTLOGFILTER", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<EVENT_EVENTLOGFILTER> EVENT_EVENTLOGFILTER
		{
			get
			{
				return this._EVENT_EVENTLOGFILTER;
			}
			set
			{
				this._EVENT_EVENTLOGFILTER.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_EVENTLOG", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.EVENT_EVENTLOG = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.EVENT_EVENTLOG = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EVENT_EVENTLOGFILTER(EVENT_EVENTLOGFILTER entity)
		{
			this.SendPropertyChanging();
			entity.EVENT_EVENTLOG = this;
		}
		
		private void detach_EVENT_EVENTLOGFILTER(EVENT_EVENTLOGFILTER entity)
		{
			this.SendPropertyChanging();
			entity.EVENT_EVENTLOG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EVENT_EVENTLOGFILTER")]
	public partial class EVENT_EVENTLOGFILTER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ParentID;
		
		private int _FilterField;
		
		private int _FilterCriteria;
		
		private string _EventLogFilter;
		
		private EntityRef<EVENT_EVENTLOG> _EVENT_EVENTLOG;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnParentIDChanging(System.Guid value);
    partial void OnParentIDChanged();
    partial void OnFilterFieldChanging(int value);
    partial void OnFilterFieldChanged();
    partial void OnFilterCriteriaChanging(int value);
    partial void OnFilterCriteriaChanged();
    partial void OnEventLogFilterChanging(string value);
    partial void OnEventLogFilterChanged();
    #endregion
		
		public EVENT_EVENTLOGFILTER()
		{
			this._EVENT_EVENTLOG = default(EntityRef<EVENT_EVENTLOG>);
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if ((this._EVENT_EVENTLOG.HasLoadedOrAssignedValue || this._OBJECTS.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterField", DbType="Int NOT NULL")]
		public int FilterField
		{
			get
			{
				return this._FilterField;
			}
			set
			{
				if ((this._FilterField != value))
				{
					this.OnFilterFieldChanging(value);
					this.SendPropertyChanging();
					this._FilterField = value;
					this.SendPropertyChanged("FilterField");
					this.OnFilterFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterCriteria", DbType="Int NOT NULL")]
		public int FilterCriteria
		{
			get
			{
				return this._FilterCriteria;
			}
			set
			{
				if ((this._FilterCriteria != value))
				{
					this.OnFilterCriteriaChanging(value);
					this.SendPropertyChanging();
					this._FilterCriteria = value;
					this.SendPropertyChanged("FilterCriteria");
					this.OnFilterCriteriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventLogFilter", DbType="NVarChar(2000)")]
		public string EventLogFilter
		{
			get
			{
				return this._EventLogFilter;
			}
			set
			{
				if ((this._EventLogFilter != value))
				{
					this.OnEventLogFilterChanging(value);
					this.SendPropertyChanging();
					this._EventLogFilter = value;
					this.SendPropertyChanged("EventLogFilter");
					this.OnEventLogFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EVENT_EVENTLOG_EVENT_EVENTLOGFILTER", Storage="_EVENT_EVENTLOG", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public EVENT_EVENTLOG EVENT_EVENTLOG
		{
			get
			{
				return this._EVENT_EVENTLOG.Entity;
			}
			set
			{
				EVENT_EVENTLOG previousValue = this._EVENT_EVENTLOG.Entity;
				if (((previousValue != value) 
							|| (this._EVENT_EVENTLOG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EVENT_EVENTLOG.Entity = null;
						previousValue.EVENT_EVENTLOGFILTER.Remove(this);
					}
					this._EVENT_EVENTLOG.Entity = value;
					if ((value != null))
					{
						value.EVENT_EVENTLOGFILTER.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("EVENT_EVENTLOG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_EVENTLOGFILTER", Storage="_OBJECTS", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.EVENT_EVENTLOGFILTER.Remove(this);
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.EVENT_EVENTLOGFILTER.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EVENT_MONITORCOMPUTERIP")]
	public partial class EVENT_MONITORCOMPUTERIP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _ComputerName;
		
		private int _TriggerType;
		
		private int _TestInterval;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    partial void OnTriggerTypeChanging(int value);
    partial void OnTriggerTypeChanged();
    partial void OnTestIntervalChanging(int value);
    partial void OnTestIntervalChanged();
    #endregion
		
		public EVENT_MONITORCOMPUTERIP()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="NVarChar(2000)")]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerType", DbType="Int NOT NULL")]
		public int TriggerType
		{
			get
			{
				return this._TriggerType;
			}
			set
			{
				if ((this._TriggerType != value))
				{
					this.OnTriggerTypeChanging(value);
					this.SendPropertyChanging();
					this._TriggerType = value;
					this.SendPropertyChanged("TriggerType");
					this.OnTriggerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestInterval", DbType="Int NOT NULL")]
		public int TestInterval
		{
			get
			{
				return this._TestInterval;
			}
			set
			{
				if ((this._TestInterval != value))
				{
					this.OnTestIntervalChanging(value);
					this.SendPropertyChanging();
					this._TestInterval = value;
					this.SendPropertyChanged("TestInterval");
					this.OnTestIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_MONITORCOMPUTERIP", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.EVENT_MONITORCOMPUTERIP = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.EVENT_MONITORCOMPUTERIP = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EVENT_MONITORINTERNET")]
	public partial class EVENT_MONITORINTERNET : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Nullable<int> _TriggerCondition;
		
		private string _ServerName;
		
		private System.Nullable<int> _ServerPort;
		
		private System.Nullable<int> _SelectedOption;
		
		private string _WebStringToCheck;
		
		private System.Nullable<int> _ConnectionTimeout;
		
		private System.Nullable<int> _ConnectionTimeoutFreq;
		
		private System.Nullable<int> _ConnectionTimeoutType;
		
		private string _SMTPMailTo;
		
		private string _SMTPMailFrom;
		
		private string _Username;
		
		private string _Password;
		
		private string _DNSIPAddress;
		
		private string _DNSIPName;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnTriggerConditionChanging(System.Nullable<int> value);
    partial void OnTriggerConditionChanged();
    partial void OnServerNameChanging(string value);
    partial void OnServerNameChanged();
    partial void OnServerPortChanging(System.Nullable<int> value);
    partial void OnServerPortChanged();
    partial void OnSelectedOptionChanging(System.Nullable<int> value);
    partial void OnSelectedOptionChanged();
    partial void OnWebStringToCheckChanging(string value);
    partial void OnWebStringToCheckChanged();
    partial void OnConnectionTimeoutChanging(System.Nullable<int> value);
    partial void OnConnectionTimeoutChanged();
    partial void OnConnectionTimeoutFreqChanging(System.Nullable<int> value);
    partial void OnConnectionTimeoutFreqChanged();
    partial void OnConnectionTimeoutTypeChanging(System.Nullable<int> value);
    partial void OnConnectionTimeoutTypeChanged();
    partial void OnSMTPMailToChanging(string value);
    partial void OnSMTPMailToChanged();
    partial void OnSMTPMailFromChanging(string value);
    partial void OnSMTPMailFromChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnDNSIPAddressChanging(string value);
    partial void OnDNSIPAddressChanged();
    partial void OnDNSIPNameChanging(string value);
    partial void OnDNSIPNameChanged();
    #endregion
		
		public EVENT_MONITORINTERNET()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerCondition", DbType="Int")]
		public System.Nullable<int> TriggerCondition
		{
			get
			{
				return this._TriggerCondition;
			}
			set
			{
				if ((this._TriggerCondition != value))
				{
					this.OnTriggerConditionChanging(value);
					this.SendPropertyChanging();
					this._TriggerCondition = value;
					this.SendPropertyChanged("TriggerCondition");
					this.OnTriggerConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerName", DbType="NVarChar(2000)")]
		public string ServerName
		{
			get
			{
				return this._ServerName;
			}
			set
			{
				if ((this._ServerName != value))
				{
					this.OnServerNameChanging(value);
					this.SendPropertyChanging();
					this._ServerName = value;
					this.SendPropertyChanged("ServerName");
					this.OnServerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerPort", DbType="Int")]
		public System.Nullable<int> ServerPort
		{
			get
			{
				return this._ServerPort;
			}
			set
			{
				if ((this._ServerPort != value))
				{
					this.OnServerPortChanging(value);
					this.SendPropertyChanging();
					this._ServerPort = value;
					this.SendPropertyChanged("ServerPort");
					this.OnServerPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectedOption", DbType="Int")]
		public System.Nullable<int> SelectedOption
		{
			get
			{
				return this._SelectedOption;
			}
			set
			{
				if ((this._SelectedOption != value))
				{
					this.OnSelectedOptionChanging(value);
					this.SendPropertyChanging();
					this._SelectedOption = value;
					this.SendPropertyChanged("SelectedOption");
					this.OnSelectedOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebStringToCheck", DbType="NVarChar(200)")]
		public string WebStringToCheck
		{
			get
			{
				return this._WebStringToCheck;
			}
			set
			{
				if ((this._WebStringToCheck != value))
				{
					this.OnWebStringToCheckChanging(value);
					this.SendPropertyChanging();
					this._WebStringToCheck = value;
					this.SendPropertyChanged("WebStringToCheck");
					this.OnWebStringToCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionTimeout", DbType="Int")]
		public System.Nullable<int> ConnectionTimeout
		{
			get
			{
				return this._ConnectionTimeout;
			}
			set
			{
				if ((this._ConnectionTimeout != value))
				{
					this.OnConnectionTimeoutChanging(value);
					this.SendPropertyChanging();
					this._ConnectionTimeout = value;
					this.SendPropertyChanged("ConnectionTimeout");
					this.OnConnectionTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionTimeoutFreq", DbType="Int")]
		public System.Nullable<int> ConnectionTimeoutFreq
		{
			get
			{
				return this._ConnectionTimeoutFreq;
			}
			set
			{
				if ((this._ConnectionTimeoutFreq != value))
				{
					this.OnConnectionTimeoutFreqChanging(value);
					this.SendPropertyChanging();
					this._ConnectionTimeoutFreq = value;
					this.SendPropertyChanged("ConnectionTimeoutFreq");
					this.OnConnectionTimeoutFreqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionTimeoutType", DbType="Int")]
		public System.Nullable<int> ConnectionTimeoutType
		{
			get
			{
				return this._ConnectionTimeoutType;
			}
			set
			{
				if ((this._ConnectionTimeoutType != value))
				{
					this.OnConnectionTimeoutTypeChanging(value);
					this.SendPropertyChanging();
					this._ConnectionTimeoutType = value;
					this.SendPropertyChanged("ConnectionTimeoutType");
					this.OnConnectionTimeoutTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPMailTo", DbType="NVarChar(500)")]
		public string SMTPMailTo
		{
			get
			{
				return this._SMTPMailTo;
			}
			set
			{
				if ((this._SMTPMailTo != value))
				{
					this.OnSMTPMailToChanging(value);
					this.SendPropertyChanging();
					this._SMTPMailTo = value;
					this.SendPropertyChanged("SMTPMailTo");
					this.OnSMTPMailToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPMailFrom", DbType="NVarChar(500)")]
		public string SMTPMailFrom
		{
			get
			{
				return this._SMTPMailFrom;
			}
			set
			{
				if ((this._SMTPMailFrom != value))
				{
					this.OnSMTPMailFromChanging(value);
					this.SendPropertyChanging();
					this._SMTPMailFrom = value;
					this.SendPropertyChanged("SMTPMailFrom");
					this.OnSMTPMailFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(200)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(2000)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNSIPAddress", DbType="NVarChar(500)")]
		public string DNSIPAddress
		{
			get
			{
				return this._DNSIPAddress;
			}
			set
			{
				if ((this._DNSIPAddress != value))
				{
					this.OnDNSIPAddressChanging(value);
					this.SendPropertyChanging();
					this._DNSIPAddress = value;
					this.SendPropertyChanged("DNSIPAddress");
					this.OnDNSIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNSIPName", DbType="NVarChar(250)")]
		public string DNSIPName
		{
			get
			{
				return this._DNSIPName;
			}
			set
			{
				if ((this._DNSIPName != value))
				{
					this.OnDNSIPNameChanging(value);
					this.SendPropertyChanging();
					this._DNSIPName = value;
					this.SendPropertyChanged("DNSIPName");
					this.OnDNSIPNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_MONITORINTERNET", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.EVENT_MONITORINTERNET = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.EVENT_MONITORINTERNET = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EVENT_PROCESS")]
	public partial class EVENT_PROCESS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Computer;
		
		private string _Process;
		
		private int _Interval;
		
		private System.Nullable<int> _TriggerOnStart;
		
		private System.Nullable<int> _TriggerOnStop;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnComputerChanging(string value);
    partial void OnComputerChanged();
    partial void OnProcessChanging(string value);
    partial void OnProcessChanged();
    partial void OnIntervalChanging(int value);
    partial void OnIntervalChanged();
    partial void OnTriggerOnStartChanging(System.Nullable<int> value);
    partial void OnTriggerOnStartChanged();
    partial void OnTriggerOnStopChanging(System.Nullable<int> value);
    partial void OnTriggerOnStopChanged();
    #endregion
		
		public EVENT_PROCESS()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Computer", DbType="NVarChar(500)")]
		public string Computer
		{
			get
			{
				return this._Computer;
			}
			set
			{
				if ((this._Computer != value))
				{
					this.OnComputerChanging(value);
					this.SendPropertyChanging();
					this._Computer = value;
					this.SendPropertyChanged("Computer");
					this.OnComputerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Process
		{
			get
			{
				return this._Process;
			}
			set
			{
				if ((this._Process != value))
				{
					this.OnProcessChanging(value);
					this.SendPropertyChanging();
					this._Process = value;
					this.SendPropertyChanged("Process");
					this.OnProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interval", DbType="Int NOT NULL")]
		public int Interval
		{
			get
			{
				return this._Interval;
			}
			set
			{
				if ((this._Interval != value))
				{
					this.OnIntervalChanging(value);
					this.SendPropertyChanging();
					this._Interval = value;
					this.SendPropertyChanged("Interval");
					this.OnIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerOnStart", DbType="Int")]
		public System.Nullable<int> TriggerOnStart
		{
			get
			{
				return this._TriggerOnStart;
			}
			set
			{
				if ((this._TriggerOnStart != value))
				{
					this.OnTriggerOnStartChanging(value);
					this.SendPropertyChanging();
					this._TriggerOnStart = value;
					this.SendPropertyChanged("TriggerOnStart");
					this.OnTriggerOnStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerOnStop", DbType="Int")]
		public System.Nullable<int> TriggerOnStop
		{
			get
			{
				return this._TriggerOnStop;
			}
			set
			{
				if ((this._TriggerOnStop != value))
				{
					this.OnTriggerOnStopChanging(value);
					this.SendPropertyChanging();
					this._TriggerOnStop = value;
					this.SendPropertyChanged("TriggerOnStop");
					this.OnTriggerOnStopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_PROCESS", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.EVENT_PROCESS = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.EVENT_PROCESS = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EVENT_SERVICE")]
	public partial class EVENT_SERVICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _ComputerName;
		
		private string _ServiceName;
		
		private int _ServiceTrigger;
		
		private int _TestInterval;
		
		private int _RestartStopped;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnServiceTriggerChanging(int value);
    partial void OnServiceTriggerChanged();
    partial void OnTestIntervalChanging(int value);
    partial void OnTestIntervalChanged();
    partial void OnRestartStoppedChanging(int value);
    partial void OnRestartStoppedChanged();
    #endregion
		
		public EVENT_SERVICE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="NVarChar(500)")]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTrigger", DbType="Int NOT NULL")]
		public int ServiceTrigger
		{
			get
			{
				return this._ServiceTrigger;
			}
			set
			{
				if ((this._ServiceTrigger != value))
				{
					this.OnServiceTriggerChanging(value);
					this.SendPropertyChanging();
					this._ServiceTrigger = value;
					this.SendPropertyChanged("ServiceTrigger");
					this.OnServiceTriggerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestInterval", DbType="Int NOT NULL")]
		public int TestInterval
		{
			get
			{
				return this._TestInterval;
			}
			set
			{
				if ((this._TestInterval != value))
				{
					this.OnTestIntervalChanging(value);
					this.SendPropertyChanging();
					this._TestInterval = value;
					this.SendPropertyChanged("TestInterval");
					this.OnTestIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestartStopped", DbType="Int NOT NULL")]
		public int RestartStopped
		{
			get
			{
				return this._RestartStopped;
			}
			set
			{
				if ((this._RestartStopped != value))
				{
					this.OnRestartStoppedChanging(value);
					this.SendPropertyChanging();
					this._RestartStopped = value;
					this.SendPropertyChanged("RestartStopped");
					this.OnRestartStoppedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_SERVICE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.EVENT_SERVICE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.EVENT_SERVICE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EVENT_SERVICESTARTED")]
	public partial class EVENT_SERVICESTARTED : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Nullable<int> _AfterRebootOption;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnAfterRebootOptionChanging(System.Nullable<int> value);
    partial void OnAfterRebootOptionChanged();
    #endregion
		
		public EVENT_SERVICESTARTED()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AfterRebootOption", DbType="Int")]
		public System.Nullable<int> AfterRebootOption
		{
			get
			{
				return this._AfterRebootOption;
			}
			set
			{
				if ((this._AfterRebootOption != value))
				{
					this.OnAfterRebootOptionChanging(value);
					this.SendPropertyChanging();
					this._AfterRebootOption = value;
					this.SendPropertyChanged("AfterRebootOption");
					this.OnAfterRebootOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_SERVICESTARTED", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.EVENT_SERVICESTARTED = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.EVENT_SERVICESTARTED = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EVENT_SNMPMONITORTRAP")]
	public partial class EVENT_SNMPMONITORTRAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _IPAddress;
		
		private string _EnterpriseID;
		
		private string _GenericID;
		
		private string _SpecificID;
		
		private string _TrapPort;
		
		private System.Nullable<int> _FilterSenderIP;
		
		private System.Nullable<int> _FilterEnterpriseID;
		
		private System.Nullable<int> _FilterGenericID;
		
		private System.Nullable<int> _FilterSpecificID;
		
		private string _PublishVarbinds;
		
		private System.Nullable<int> _OwnThePort;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnEnterpriseIDChanging(string value);
    partial void OnEnterpriseIDChanged();
    partial void OnGenericIDChanging(string value);
    partial void OnGenericIDChanged();
    partial void OnSpecificIDChanging(string value);
    partial void OnSpecificIDChanged();
    partial void OnTrapPortChanging(string value);
    partial void OnTrapPortChanged();
    partial void OnFilterSenderIPChanging(System.Nullable<int> value);
    partial void OnFilterSenderIPChanged();
    partial void OnFilterEnterpriseIDChanging(System.Nullable<int> value);
    partial void OnFilterEnterpriseIDChanged();
    partial void OnFilterGenericIDChanging(System.Nullable<int> value);
    partial void OnFilterGenericIDChanged();
    partial void OnFilterSpecificIDChanging(System.Nullable<int> value);
    partial void OnFilterSpecificIDChanged();
    partial void OnPublishVarbindsChanging(string value);
    partial void OnPublishVarbindsChanged();
    partial void OnOwnThePortChanging(System.Nullable<int> value);
    partial void OnOwnThePortChanged();
    #endregion
		
		public EVENT_SNMPMONITORTRAP()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(1000)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="NVarChar(1000)")]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					this.OnEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseID = value;
					this.SendPropertyChanged("EnterpriseID");
					this.OnEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenericID", DbType="NVarChar(1000)")]
		public string GenericID
		{
			get
			{
				return this._GenericID;
			}
			set
			{
				if ((this._GenericID != value))
				{
					this.OnGenericIDChanging(value);
					this.SendPropertyChanging();
					this._GenericID = value;
					this.SendPropertyChanged("GenericID");
					this.OnGenericIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificID", DbType="NVarChar(1000)")]
		public string SpecificID
		{
			get
			{
				return this._SpecificID;
			}
			set
			{
				if ((this._SpecificID != value))
				{
					this.OnSpecificIDChanging(value);
					this.SendPropertyChanging();
					this._SpecificID = value;
					this.SendPropertyChanged("SpecificID");
					this.OnSpecificIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrapPort", DbType="NVarChar(1000)")]
		public string TrapPort
		{
			get
			{
				return this._TrapPort;
			}
			set
			{
				if ((this._TrapPort != value))
				{
					this.OnTrapPortChanging(value);
					this.SendPropertyChanging();
					this._TrapPort = value;
					this.SendPropertyChanged("TrapPort");
					this.OnTrapPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterSenderIP", DbType="Int")]
		public System.Nullable<int> FilterSenderIP
		{
			get
			{
				return this._FilterSenderIP;
			}
			set
			{
				if ((this._FilterSenderIP != value))
				{
					this.OnFilterSenderIPChanging(value);
					this.SendPropertyChanging();
					this._FilterSenderIP = value;
					this.SendPropertyChanged("FilterSenderIP");
					this.OnFilterSenderIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterEnterpriseID", DbType="Int")]
		public System.Nullable<int> FilterEnterpriseID
		{
			get
			{
				return this._FilterEnterpriseID;
			}
			set
			{
				if ((this._FilterEnterpriseID != value))
				{
					this.OnFilterEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._FilterEnterpriseID = value;
					this.SendPropertyChanged("FilterEnterpriseID");
					this.OnFilterEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterGenericID", DbType="Int")]
		public System.Nullable<int> FilterGenericID
		{
			get
			{
				return this._FilterGenericID;
			}
			set
			{
				if ((this._FilterGenericID != value))
				{
					this.OnFilterGenericIDChanging(value);
					this.SendPropertyChanging();
					this._FilterGenericID = value;
					this.SendPropertyChanged("FilterGenericID");
					this.OnFilterGenericIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterSpecificID", DbType="Int")]
		public System.Nullable<int> FilterSpecificID
		{
			get
			{
				return this._FilterSpecificID;
			}
			set
			{
				if ((this._FilterSpecificID != value))
				{
					this.OnFilterSpecificIDChanging(value);
					this.SendPropertyChanging();
					this._FilterSpecificID = value;
					this.SendPropertyChanged("FilterSpecificID");
					this.OnFilterSpecificIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishVarbinds", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string PublishVarbinds
		{
			get
			{
				return this._PublishVarbinds;
			}
			set
			{
				if ((this._PublishVarbinds != value))
				{
					this.OnPublishVarbindsChanging(value);
					this.SendPropertyChanging();
					this._PublishVarbinds = value;
					this.SendPropertyChanged("PublishVarbinds");
					this.OnPublishVarbindsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnThePort", DbType="Int")]
		public System.Nullable<int> OwnThePort
		{
			get
			{
				return this._OwnThePort;
			}
			set
			{
				if ((this._OwnThePort != value))
				{
					this.OnOwnThePortChanging(value);
					this.SendPropertyChanging();
					this._OwnThePort = value;
					this.SendPropertyChanged("OwnThePort");
					this.OnOwnThePortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_SNMPMONITORTRAP", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.EVENT_SNMPMONITORTRAP = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.EVENT_SNMPMONITORTRAP = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EVENT_WMI")]
	public partial class EVENT_WMI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Computer;
		
		private string _Namespace;
		
		private string _Query;
		
		private string _UserName;
		
		private string _Password;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnComputerChanging(string value);
    partial void OnComputerChanged();
    partial void OnNamespaceChanging(string value);
    partial void OnNamespaceChanged();
    partial void OnQueryChanging(string value);
    partial void OnQueryChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public EVENT_WMI()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Computer", DbType="NVarChar(500)")]
		public string Computer
		{
			get
			{
				return this._Computer;
			}
			set
			{
				if ((this._Computer != value))
				{
					this.OnComputerChanging(value);
					this.SendPropertyChanging();
					this._Computer = value;
					this.SendPropertyChanged("Computer");
					this.OnComputerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Namespace", DbType="NVarChar(500)")]
		public string Namespace
		{
			get
			{
				return this._Namespace;
			}
			set
			{
				if ((this._Namespace != value))
				{
					this.OnNamespaceChanging(value);
					this.SendPropertyChanging();
					this._Namespace = value;
					this.SendPropertyChanged("Namespace");
					this.OnNamespaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Query", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Query
		{
			get
			{
				return this._Query;
			}
			set
			{
				if ((this._Query != value))
				{
					this.OnQueryChanging(value);
					this.SendPropertyChanging();
					this._Query = value;
					this.SendPropertyChanged("Query");
					this.OnQueryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(255)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(2000)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_WMI", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.EVENT_WMI = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.EVENT_WMI = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EVENTS")]
	public partial class EVENTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Type;
		
		private string _Computer;
		
		private System.DateTime _DateTime;
		
		private string _Summary;
		
		private string _Message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnComputerChanging(string value);
    partial void OnComputerChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
		
		public EVENTS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Computer", DbType="NVarChar(64)")]
		public string Computer
		{
			get
			{
				return this._Computer;
			}
			set
			{
				if ((this._Computer != value))
				{
					this.OnComputerChanging(value);
					this.SendPropertyChanging();
					this._Computer = value;
					this.SendPropertyChanged("Computer");
					this.OnComputerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Runtime].[Events]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Runtime___Events_
	{
		
		private System.Guid _Id;
		
		private string _Type;
		
		private string _SourceName;
		
		private System.Guid _SourceId;
		
		private System.DateTime _CreationTime;
		
		private string _Summary;
		
		private string _Description;
		
		public _Microsoft_SystemCenter_Orchestrator_Runtime___Events_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceName", DbType="NVarChar(64)")]
		public string SourceName
		{
			get
			{
				return this._SourceName;
			}
			set
			{
				if ((this._SourceName != value))
				{
					this._SourceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SourceId
		{
			get
			{
				return this._SourceId;
			}
			set
			{
				if ((this._SourceId != value))
				{
					this._SourceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this._CreationTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FM_COPYFILE")]
	public partial class FM_COPYFILE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _OriginFolder;
		
		private string _OriginOptions;
		
		private string _DestinationFolder;
		
		private string _DestinationOptions;
		
		private string _FileAgeOptions;
		
		private string _FileAgeDays;
		
		private string _FileAgeDateOptions;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnOriginFolderChanging(string value);
    partial void OnOriginFolderChanged();
    partial void OnOriginOptionsChanging(string value);
    partial void OnOriginOptionsChanged();
    partial void OnDestinationFolderChanging(string value);
    partial void OnDestinationFolderChanged();
    partial void OnDestinationOptionsChanging(string value);
    partial void OnDestinationOptionsChanged();
    partial void OnFileAgeOptionsChanging(string value);
    partial void OnFileAgeOptionsChanged();
    partial void OnFileAgeDaysChanging(string value);
    partial void OnFileAgeDaysChanged();
    partial void OnFileAgeDateOptionsChanging(string value);
    partial void OnFileAgeDateOptionsChanged();
    #endregion
		
		public FM_COPYFILE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginFolder", DbType="NVarChar(2000)")]
		public string OriginFolder
		{
			get
			{
				return this._OriginFolder;
			}
			set
			{
				if ((this._OriginFolder != value))
				{
					this.OnOriginFolderChanging(value);
					this.SendPropertyChanging();
					this._OriginFolder = value;
					this.SendPropertyChanged("OriginFolder");
					this.OnOriginFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginOptions", DbType="NVarChar(2000)")]
		public string OriginOptions
		{
			get
			{
				return this._OriginOptions;
			}
			set
			{
				if ((this._OriginOptions != value))
				{
					this.OnOriginOptionsChanging(value);
					this.SendPropertyChanging();
					this._OriginOptions = value;
					this.SendPropertyChanged("OriginOptions");
					this.OnOriginOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationFolder", DbType="NVarChar(2000)")]
		public string DestinationFolder
		{
			get
			{
				return this._DestinationFolder;
			}
			set
			{
				if ((this._DestinationFolder != value))
				{
					this.OnDestinationFolderChanging(value);
					this.SendPropertyChanging();
					this._DestinationFolder = value;
					this.SendPropertyChanged("DestinationFolder");
					this.OnDestinationFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationOptions", DbType="NVarChar(2000)")]
		public string DestinationOptions
		{
			get
			{
				return this._DestinationOptions;
			}
			set
			{
				if ((this._DestinationOptions != value))
				{
					this.OnDestinationOptionsChanging(value);
					this.SendPropertyChanging();
					this._DestinationOptions = value;
					this.SendPropertyChanged("DestinationOptions");
					this.OnDestinationOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAgeOptions", DbType="NVarChar(2000)")]
		public string FileAgeOptions
		{
			get
			{
				return this._FileAgeOptions;
			}
			set
			{
				if ((this._FileAgeOptions != value))
				{
					this.OnFileAgeOptionsChanging(value);
					this.SendPropertyChanging();
					this._FileAgeOptions = value;
					this.SendPropertyChanged("FileAgeOptions");
					this.OnFileAgeOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAgeDays", DbType="NVarChar(2000)")]
		public string FileAgeDays
		{
			get
			{
				return this._FileAgeDays;
			}
			set
			{
				if ((this._FileAgeDays != value))
				{
					this.OnFileAgeDaysChanging(value);
					this.SendPropertyChanging();
					this._FileAgeDays = value;
					this.SendPropertyChanged("FileAgeDays");
					this.OnFileAgeDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAgeDateOptions", DbType="NVarChar(2000)")]
		public string FileAgeDateOptions
		{
			get
			{
				return this._FileAgeDateOptions;
			}
			set
			{
				if ((this._FileAgeDateOptions != value))
				{
					this.OnFileAgeDateOptionsChanging(value);
					this.SendPropertyChanging();
					this._FileAgeDateOptions = value;
					this.SendPropertyChanged("FileAgeDateOptions");
					this.OnFileAgeDateOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_COPYFILE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.FM_COPYFILE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.FM_COPYFILE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FM_CREATEFOLDER")]
	public partial class FM_CREATEFOLDER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Folder;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnFolderChanging(string value);
    partial void OnFolderChanged();
    #endregion
		
		public FM_CREATEFOLDER()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Folder", DbType="NVarChar(2000)")]
		public string Folder
		{
			get
			{
				return this._Folder;
			}
			set
			{
				if ((this._Folder != value))
				{
					this.OnFolderChanging(value);
					this.SendPropertyChanging();
					this._Folder = value;
					this.SendPropertyChanged("Folder");
					this.OnFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_CREATEFOLDER", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.FM_CREATEFOLDER = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.FM_CREATEFOLDER = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FM_DELETEFILE")]
	public partial class FM_DELETEFILE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _OriginFolder;
		
		private string _OriginOptions;
		
		private string _FileAgeOptions;
		
		private string _FileAgeDays;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnOriginFolderChanging(string value);
    partial void OnOriginFolderChanged();
    partial void OnOriginOptionsChanging(string value);
    partial void OnOriginOptionsChanged();
    partial void OnFileAgeOptionsChanging(string value);
    partial void OnFileAgeOptionsChanged();
    partial void OnFileAgeDaysChanging(string value);
    partial void OnFileAgeDaysChanged();
    #endregion
		
		public FM_DELETEFILE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginFolder", DbType="NVarChar(2000)")]
		public string OriginFolder
		{
			get
			{
				return this._OriginFolder;
			}
			set
			{
				if ((this._OriginFolder != value))
				{
					this.OnOriginFolderChanging(value);
					this.SendPropertyChanging();
					this._OriginFolder = value;
					this.SendPropertyChanged("OriginFolder");
					this.OnOriginFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginOptions", DbType="NVarChar(2000)")]
		public string OriginOptions
		{
			get
			{
				return this._OriginOptions;
			}
			set
			{
				if ((this._OriginOptions != value))
				{
					this.OnOriginOptionsChanging(value);
					this.SendPropertyChanging();
					this._OriginOptions = value;
					this.SendPropertyChanged("OriginOptions");
					this.OnOriginOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAgeOptions", DbType="NVarChar(2000)")]
		public string FileAgeOptions
		{
			get
			{
				return this._FileAgeOptions;
			}
			set
			{
				if ((this._FileAgeOptions != value))
				{
					this.OnFileAgeOptionsChanging(value);
					this.SendPropertyChanging();
					this._FileAgeOptions = value;
					this.SendPropertyChanged("FileAgeOptions");
					this.OnFileAgeOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAgeDays", DbType="NVarChar(2000)")]
		public string FileAgeDays
		{
			get
			{
				return this._FileAgeDays;
			}
			set
			{
				if ((this._FileAgeDays != value))
				{
					this.OnFileAgeDaysChanging(value);
					this.SendPropertyChanging();
					this._FileAgeDays = value;
					this.SendPropertyChanged("FileAgeDays");
					this.OnFileAgeDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_DELETEFILE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.FM_DELETEFILE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.FM_DELETEFILE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FM_DELETEFOLDER")]
	public partial class FM_DELETEFOLDER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Folder;
		
		private string _DeleteOptions;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnFolderChanging(string value);
    partial void OnFolderChanged();
    partial void OnDeleteOptionsChanging(string value);
    partial void OnDeleteOptionsChanged();
    #endregion
		
		public FM_DELETEFOLDER()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Folder", DbType="NVarChar(2000)")]
		public string Folder
		{
			get
			{
				return this._Folder;
			}
			set
			{
				if ((this._Folder != value))
				{
					this.OnFolderChanging(value);
					this.SendPropertyChanging();
					this._Folder = value;
					this.SendPropertyChanged("Folder");
					this.OnFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteOptions", DbType="NVarChar(2000)")]
		public string DeleteOptions
		{
			get
			{
				return this._DeleteOptions;
			}
			set
			{
				if ((this._DeleteOptions != value))
				{
					this.OnDeleteOptionsChanging(value);
					this.SendPropertyChanging();
					this._DeleteOptions = value;
					this.SendPropertyChanged("DeleteOptions");
					this.OnDeleteOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_DELETEFOLDER", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.FM_DELETEFOLDER = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.FM_DELETEFOLDER = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FM_FILEMONITOR")]
	public partial class FM_FILEMONITOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Path;
		
		private string _IncludeSubFolders;
		
		private string _Filters;
		
		private string _NotifyIfCreated;
		
		private string _NotifyIfChanged;
		
		private string _NotifyIfRenamed;
		
		private string _NotifyIfDeleted;
		
		private string _TriggerAttributes;
		
		private string _TriggerSecurity;
		
		private string _TriggerCreationTime;
		
		private string _TriggerLastAccess;
		
		private string _TriggerLastWrite;
		
		private string _Username;
		
		private string _Password;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnIncludeSubFoldersChanging(string value);
    partial void OnIncludeSubFoldersChanged();
    partial void OnFiltersChanging(string value);
    partial void OnFiltersChanged();
    partial void OnNotifyIfCreatedChanging(string value);
    partial void OnNotifyIfCreatedChanged();
    partial void OnNotifyIfChangedChanging(string value);
    partial void OnNotifyIfChangedChanged();
    partial void OnNotifyIfRenamedChanging(string value);
    partial void OnNotifyIfRenamedChanged();
    partial void OnNotifyIfDeletedChanging(string value);
    partial void OnNotifyIfDeletedChanged();
    partial void OnTriggerAttributesChanging(string value);
    partial void OnTriggerAttributesChanged();
    partial void OnTriggerSecurityChanging(string value);
    partial void OnTriggerSecurityChanged();
    partial void OnTriggerCreationTimeChanging(string value);
    partial void OnTriggerCreationTimeChanged();
    partial void OnTriggerLastAccessChanging(string value);
    partial void OnTriggerLastAccessChanged();
    partial void OnTriggerLastWriteChanging(string value);
    partial void OnTriggerLastWriteChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public FM_FILEMONITOR()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(2000)")]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeSubFolders", DbType="NVarChar(2000)")]
		public string IncludeSubFolders
		{
			get
			{
				return this._IncludeSubFolders;
			}
			set
			{
				if ((this._IncludeSubFolders != value))
				{
					this.OnIncludeSubFoldersChanging(value);
					this.SendPropertyChanging();
					this._IncludeSubFolders = value;
					this.SendPropertyChanged("IncludeSubFolders");
					this.OnIncludeSubFoldersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filters", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Filters
		{
			get
			{
				return this._Filters;
			}
			set
			{
				if ((this._Filters != value))
				{
					this.OnFiltersChanging(value);
					this.SendPropertyChanging();
					this._Filters = value;
					this.SendPropertyChanged("Filters");
					this.OnFiltersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyIfCreated", DbType="NVarChar(2000)")]
		public string NotifyIfCreated
		{
			get
			{
				return this._NotifyIfCreated;
			}
			set
			{
				if ((this._NotifyIfCreated != value))
				{
					this.OnNotifyIfCreatedChanging(value);
					this.SendPropertyChanging();
					this._NotifyIfCreated = value;
					this.SendPropertyChanged("NotifyIfCreated");
					this.OnNotifyIfCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyIfChanged", DbType="NVarChar(2000)")]
		public string NotifyIfChanged
		{
			get
			{
				return this._NotifyIfChanged;
			}
			set
			{
				if ((this._NotifyIfChanged != value))
				{
					this.OnNotifyIfChangedChanging(value);
					this.SendPropertyChanging();
					this._NotifyIfChanged = value;
					this.SendPropertyChanged("NotifyIfChanged");
					this.OnNotifyIfChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyIfRenamed", DbType="NVarChar(2000)")]
		public string NotifyIfRenamed
		{
			get
			{
				return this._NotifyIfRenamed;
			}
			set
			{
				if ((this._NotifyIfRenamed != value))
				{
					this.OnNotifyIfRenamedChanging(value);
					this.SendPropertyChanging();
					this._NotifyIfRenamed = value;
					this.SendPropertyChanged("NotifyIfRenamed");
					this.OnNotifyIfRenamedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyIfDeleted", DbType="NVarChar(2000)")]
		public string NotifyIfDeleted
		{
			get
			{
				return this._NotifyIfDeleted;
			}
			set
			{
				if ((this._NotifyIfDeleted != value))
				{
					this.OnNotifyIfDeletedChanging(value);
					this.SendPropertyChanging();
					this._NotifyIfDeleted = value;
					this.SendPropertyChanged("NotifyIfDeleted");
					this.OnNotifyIfDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerAttributes", DbType="NVarChar(2000)")]
		public string TriggerAttributes
		{
			get
			{
				return this._TriggerAttributes;
			}
			set
			{
				if ((this._TriggerAttributes != value))
				{
					this.OnTriggerAttributesChanging(value);
					this.SendPropertyChanging();
					this._TriggerAttributes = value;
					this.SendPropertyChanged("TriggerAttributes");
					this.OnTriggerAttributesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerSecurity", DbType="NVarChar(2000)")]
		public string TriggerSecurity
		{
			get
			{
				return this._TriggerSecurity;
			}
			set
			{
				if ((this._TriggerSecurity != value))
				{
					this.OnTriggerSecurityChanging(value);
					this.SendPropertyChanging();
					this._TriggerSecurity = value;
					this.SendPropertyChanged("TriggerSecurity");
					this.OnTriggerSecurityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerCreationTime", DbType="NVarChar(2000)")]
		public string TriggerCreationTime
		{
			get
			{
				return this._TriggerCreationTime;
			}
			set
			{
				if ((this._TriggerCreationTime != value))
				{
					this.OnTriggerCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._TriggerCreationTime = value;
					this.SendPropertyChanged("TriggerCreationTime");
					this.OnTriggerCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerLastAccess", DbType="NVarChar(2000)")]
		public string TriggerLastAccess
		{
			get
			{
				return this._TriggerLastAccess;
			}
			set
			{
				if ((this._TriggerLastAccess != value))
				{
					this.OnTriggerLastAccessChanging(value);
					this.SendPropertyChanging();
					this._TriggerLastAccess = value;
					this.SendPropertyChanged("TriggerLastAccess");
					this.OnTriggerLastAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerLastWrite", DbType="NVarChar(2000)")]
		public string TriggerLastWrite
		{
			get
			{
				return this._TriggerLastWrite;
			}
			set
			{
				if ((this._TriggerLastWrite != value))
				{
					this.OnTriggerLastWriteChanging(value);
					this.SendPropertyChanging();
					this._TriggerLastWrite = value;
					this.SendPropertyChanged("TriggerLastWrite");
					this.OnTriggerLastWriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(2000)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(2000)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_FILEMONITOR", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.FM_FILEMONITOR = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.FM_FILEMONITOR = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FM_FOLDERMONITOR")]
	public partial class FM_FOLDERMONITOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Path;
		
		private string _IncludeSubFolders;
		
		private string _Filters;
		
		private string _NotifyIfNumberChanged;
		
		private string _NumberRelation;
		
		private string _NumberValue;
		
		private string _NotifyIfSizeChanged;
		
		private string _SizeRelation;
		
		private string _SizeValue;
		
		private string _SizeDimension;
		
		private string _Username;
		
		private string _Password;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnIncludeSubFoldersChanging(string value);
    partial void OnIncludeSubFoldersChanged();
    partial void OnFiltersChanging(string value);
    partial void OnFiltersChanged();
    partial void OnNotifyIfNumberChangedChanging(string value);
    partial void OnNotifyIfNumberChangedChanged();
    partial void OnNumberRelationChanging(string value);
    partial void OnNumberRelationChanged();
    partial void OnNumberValueChanging(string value);
    partial void OnNumberValueChanged();
    partial void OnNotifyIfSizeChangedChanging(string value);
    partial void OnNotifyIfSizeChangedChanged();
    partial void OnSizeRelationChanging(string value);
    partial void OnSizeRelationChanged();
    partial void OnSizeValueChanging(string value);
    partial void OnSizeValueChanged();
    partial void OnSizeDimensionChanging(string value);
    partial void OnSizeDimensionChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public FM_FOLDERMONITOR()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(2000)")]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeSubFolders", DbType="NVarChar(2000)")]
		public string IncludeSubFolders
		{
			get
			{
				return this._IncludeSubFolders;
			}
			set
			{
				if ((this._IncludeSubFolders != value))
				{
					this.OnIncludeSubFoldersChanging(value);
					this.SendPropertyChanging();
					this._IncludeSubFolders = value;
					this.SendPropertyChanged("IncludeSubFolders");
					this.OnIncludeSubFoldersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filters", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Filters
		{
			get
			{
				return this._Filters;
			}
			set
			{
				if ((this._Filters != value))
				{
					this.OnFiltersChanging(value);
					this.SendPropertyChanging();
					this._Filters = value;
					this.SendPropertyChanged("Filters");
					this.OnFiltersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyIfNumberChanged", DbType="NVarChar(2000)")]
		public string NotifyIfNumberChanged
		{
			get
			{
				return this._NotifyIfNumberChanged;
			}
			set
			{
				if ((this._NotifyIfNumberChanged != value))
				{
					this.OnNotifyIfNumberChangedChanging(value);
					this.SendPropertyChanging();
					this._NotifyIfNumberChanged = value;
					this.SendPropertyChanged("NotifyIfNumberChanged");
					this.OnNotifyIfNumberChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberRelation", DbType="NVarChar(2000)")]
		public string NumberRelation
		{
			get
			{
				return this._NumberRelation;
			}
			set
			{
				if ((this._NumberRelation != value))
				{
					this.OnNumberRelationChanging(value);
					this.SendPropertyChanging();
					this._NumberRelation = value;
					this.SendPropertyChanged("NumberRelation");
					this.OnNumberRelationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberValue", DbType="NVarChar(2000)")]
		public string NumberValue
		{
			get
			{
				return this._NumberValue;
			}
			set
			{
				if ((this._NumberValue != value))
				{
					this.OnNumberValueChanging(value);
					this.SendPropertyChanging();
					this._NumberValue = value;
					this.SendPropertyChanged("NumberValue");
					this.OnNumberValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyIfSizeChanged", DbType="NVarChar(2000)")]
		public string NotifyIfSizeChanged
		{
			get
			{
				return this._NotifyIfSizeChanged;
			}
			set
			{
				if ((this._NotifyIfSizeChanged != value))
				{
					this.OnNotifyIfSizeChangedChanging(value);
					this.SendPropertyChanging();
					this._NotifyIfSizeChanged = value;
					this.SendPropertyChanged("NotifyIfSizeChanged");
					this.OnNotifyIfSizeChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeRelation", DbType="NVarChar(2000)")]
		public string SizeRelation
		{
			get
			{
				return this._SizeRelation;
			}
			set
			{
				if ((this._SizeRelation != value))
				{
					this.OnSizeRelationChanging(value);
					this.SendPropertyChanging();
					this._SizeRelation = value;
					this.SendPropertyChanged("SizeRelation");
					this.OnSizeRelationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeValue", DbType="NVarChar(2000)")]
		public string SizeValue
		{
			get
			{
				return this._SizeValue;
			}
			set
			{
				if ((this._SizeValue != value))
				{
					this.OnSizeValueChanging(value);
					this.SendPropertyChanging();
					this._SizeValue = value;
					this.SendPropertyChanged("SizeValue");
					this.OnSizeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeDimension", DbType="NVarChar(2000)")]
		public string SizeDimension
		{
			get
			{
				return this._SizeDimension;
			}
			set
			{
				if ((this._SizeDimension != value))
				{
					this.OnSizeDimensionChanging(value);
					this.SendPropertyChanging();
					this._SizeDimension = value;
					this.SendPropertyChanged("SizeDimension");
					this.OnSizeDimensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(2000)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(2000)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_FOLDERMONITOR", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.FM_FOLDERMONITOR = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.FM_FOLDERMONITOR = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FM_GETFILESTATUS")]
	public partial class FM_GETFILESTATUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _SourcePath;
		
		private string _Recursive;
		
		private string _FileAgeOptions;
		
		private string _FileAgeDays;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnSourcePathChanging(string value);
    partial void OnSourcePathChanged();
    partial void OnRecursiveChanging(string value);
    partial void OnRecursiveChanged();
    partial void OnFileAgeOptionsChanging(string value);
    partial void OnFileAgeOptionsChanged();
    partial void OnFileAgeDaysChanging(string value);
    partial void OnFileAgeDaysChanged();
    #endregion
		
		public FM_GETFILESTATUS()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourcePath", DbType="NVarChar(2000)")]
		public string SourcePath
		{
			get
			{
				return this._SourcePath;
			}
			set
			{
				if ((this._SourcePath != value))
				{
					this.OnSourcePathChanging(value);
					this.SendPropertyChanging();
					this._SourcePath = value;
					this.SendPropertyChanged("SourcePath");
					this.OnSourcePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recursive", DbType="NVarChar(2000)")]
		public string Recursive
		{
			get
			{
				return this._Recursive;
			}
			set
			{
				if ((this._Recursive != value))
				{
					this.OnRecursiveChanging(value);
					this.SendPropertyChanging();
					this._Recursive = value;
					this.SendPropertyChanged("Recursive");
					this.OnRecursiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAgeOptions", DbType="NVarChar(2000)")]
		public string FileAgeOptions
		{
			get
			{
				return this._FileAgeOptions;
			}
			set
			{
				if ((this._FileAgeOptions != value))
				{
					this.OnFileAgeOptionsChanging(value);
					this.SendPropertyChanging();
					this._FileAgeOptions = value;
					this.SendPropertyChanged("FileAgeOptions");
					this.OnFileAgeOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAgeDays", DbType="NVarChar(2000)")]
		public string FileAgeDays
		{
			get
			{
				return this._FileAgeDays;
			}
			set
			{
				if ((this._FileAgeDays != value))
				{
					this.OnFileAgeDaysChanging(value);
					this.SendPropertyChanging();
					this._FileAgeDays = value;
					this.SendPropertyChanged("FileAgeDays");
					this.OnFileAgeDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_GETFILESTATUS", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.FM_GETFILESTATUS = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.FM_GETFILESTATUS = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FM_MOVEFILE")]
	public partial class FM_MOVEFILE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _OriginFolder;
		
		private string _OriginOptions;
		
		private string _DestinationFolder;
		
		private string _DestinationOptions;
		
		private string _FileAgeOptions;
		
		private string _FileAgeDays;
		
		private string _FileAgeDateOptions;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnOriginFolderChanging(string value);
    partial void OnOriginFolderChanged();
    partial void OnOriginOptionsChanging(string value);
    partial void OnOriginOptionsChanged();
    partial void OnDestinationFolderChanging(string value);
    partial void OnDestinationFolderChanged();
    partial void OnDestinationOptionsChanging(string value);
    partial void OnDestinationOptionsChanged();
    partial void OnFileAgeOptionsChanging(string value);
    partial void OnFileAgeOptionsChanged();
    partial void OnFileAgeDaysChanging(string value);
    partial void OnFileAgeDaysChanged();
    partial void OnFileAgeDateOptionsChanging(string value);
    partial void OnFileAgeDateOptionsChanged();
    #endregion
		
		public FM_MOVEFILE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginFolder", DbType="NVarChar(2000)")]
		public string OriginFolder
		{
			get
			{
				return this._OriginFolder;
			}
			set
			{
				if ((this._OriginFolder != value))
				{
					this.OnOriginFolderChanging(value);
					this.SendPropertyChanging();
					this._OriginFolder = value;
					this.SendPropertyChanged("OriginFolder");
					this.OnOriginFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginOptions", DbType="NVarChar(2000)")]
		public string OriginOptions
		{
			get
			{
				return this._OriginOptions;
			}
			set
			{
				if ((this._OriginOptions != value))
				{
					this.OnOriginOptionsChanging(value);
					this.SendPropertyChanging();
					this._OriginOptions = value;
					this.SendPropertyChanged("OriginOptions");
					this.OnOriginOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationFolder", DbType="NVarChar(2000)")]
		public string DestinationFolder
		{
			get
			{
				return this._DestinationFolder;
			}
			set
			{
				if ((this._DestinationFolder != value))
				{
					this.OnDestinationFolderChanging(value);
					this.SendPropertyChanging();
					this._DestinationFolder = value;
					this.SendPropertyChanged("DestinationFolder");
					this.OnDestinationFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationOptions", DbType="NVarChar(2000)")]
		public string DestinationOptions
		{
			get
			{
				return this._DestinationOptions;
			}
			set
			{
				if ((this._DestinationOptions != value))
				{
					this.OnDestinationOptionsChanging(value);
					this.SendPropertyChanging();
					this._DestinationOptions = value;
					this.SendPropertyChanged("DestinationOptions");
					this.OnDestinationOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAgeOptions", DbType="NVarChar(2000)")]
		public string FileAgeOptions
		{
			get
			{
				return this._FileAgeOptions;
			}
			set
			{
				if ((this._FileAgeOptions != value))
				{
					this.OnFileAgeOptionsChanging(value);
					this.SendPropertyChanging();
					this._FileAgeOptions = value;
					this.SendPropertyChanged("FileAgeOptions");
					this.OnFileAgeOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAgeDays", DbType="NVarChar(2000)")]
		public string FileAgeDays
		{
			get
			{
				return this._FileAgeDays;
			}
			set
			{
				if ((this._FileAgeDays != value))
				{
					this.OnFileAgeDaysChanging(value);
					this.SendPropertyChanging();
					this._FileAgeDays = value;
					this.SendPropertyChanged("FileAgeDays");
					this.OnFileAgeDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAgeDateOptions", DbType="NVarChar(2000)")]
		public string FileAgeDateOptions
		{
			get
			{
				return this._FileAgeDateOptions;
			}
			set
			{
				if ((this._FileAgeDateOptions != value))
				{
					this.OnFileAgeDateOptionsChanging(value);
					this.SendPropertyChanging();
					this._FileAgeDateOptions = value;
					this.SendPropertyChanged("FileAgeDateOptions");
					this.OnFileAgeDateOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_MOVEFILE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.FM_MOVEFILE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.FM_MOVEFILE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FM_MOVEFOLDER")]
	public partial class FM_MOVEFOLDER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _FromName;
		
		private string _ToName;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnFromNameChanging(string value);
    partial void OnFromNameChanged();
    partial void OnToNameChanging(string value);
    partial void OnToNameChanged();
    #endregion
		
		public FM_MOVEFOLDER()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromName", DbType="NVarChar(2000)")]
		public string FromName
		{
			get
			{
				return this._FromName;
			}
			set
			{
				if ((this._FromName != value))
				{
					this.OnFromNameChanging(value);
					this.SendPropertyChanging();
					this._FromName = value;
					this.SendPropertyChanged("FromName");
					this.OnFromNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToName", DbType="NVarChar(2000)")]
		public string ToName
		{
			get
			{
				return this._ToName;
			}
			set
			{
				if ((this._ToName != value))
				{
					this.OnToNameChanging(value);
					this.SendPropertyChanging();
					this._ToName = value;
					this.SendPropertyChanged("ToName");
					this.OnToNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_MOVEFOLDER", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.FM_MOVEFOLDER = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.FM_MOVEFOLDER = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FM_RENAMEFILE")]
	public partial class FM_RENAMEFILE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _OriginFolder;
		
		private string _FilterOfNames;
		
		private string _OriginOptions;
		
		private string _DestinationOptions;
		
		private string _FileAgeOptions;
		
		private string _FileAgeDays;
		
		private string _FileAgeDateOptions;
		
		private string _ExecutionData;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnOriginFolderChanging(string value);
    partial void OnOriginFolderChanged();
    partial void OnFilterOfNamesChanging(string value);
    partial void OnFilterOfNamesChanged();
    partial void OnOriginOptionsChanging(string value);
    partial void OnOriginOptionsChanged();
    partial void OnDestinationOptionsChanging(string value);
    partial void OnDestinationOptionsChanged();
    partial void OnFileAgeOptionsChanging(string value);
    partial void OnFileAgeOptionsChanged();
    partial void OnFileAgeDaysChanging(string value);
    partial void OnFileAgeDaysChanged();
    partial void OnFileAgeDateOptionsChanging(string value);
    partial void OnFileAgeDateOptionsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    #endregion
		
		public FM_RENAMEFILE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginFolder", DbType="NVarChar(2000)")]
		public string OriginFolder
		{
			get
			{
				return this._OriginFolder;
			}
			set
			{
				if ((this._OriginFolder != value))
				{
					this.OnOriginFolderChanging(value);
					this.SendPropertyChanging();
					this._OriginFolder = value;
					this.SendPropertyChanged("OriginFolder");
					this.OnOriginFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterOfNames", DbType="NVarChar(2000)")]
		public string FilterOfNames
		{
			get
			{
				return this._FilterOfNames;
			}
			set
			{
				if ((this._FilterOfNames != value))
				{
					this.OnFilterOfNamesChanging(value);
					this.SendPropertyChanging();
					this._FilterOfNames = value;
					this.SendPropertyChanged("FilterOfNames");
					this.OnFilterOfNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginOptions", DbType="NVarChar(2000)")]
		public string OriginOptions
		{
			get
			{
				return this._OriginOptions;
			}
			set
			{
				if ((this._OriginOptions != value))
				{
					this.OnOriginOptionsChanging(value);
					this.SendPropertyChanging();
					this._OriginOptions = value;
					this.SendPropertyChanged("OriginOptions");
					this.OnOriginOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationOptions", DbType="NVarChar(2000)")]
		public string DestinationOptions
		{
			get
			{
				return this._DestinationOptions;
			}
			set
			{
				if ((this._DestinationOptions != value))
				{
					this.OnDestinationOptionsChanging(value);
					this.SendPropertyChanging();
					this._DestinationOptions = value;
					this.SendPropertyChanged("DestinationOptions");
					this.OnDestinationOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAgeOptions", DbType="NVarChar(2000)")]
		public string FileAgeOptions
		{
			get
			{
				return this._FileAgeOptions;
			}
			set
			{
				if ((this._FileAgeOptions != value))
				{
					this.OnFileAgeOptionsChanging(value);
					this.SendPropertyChanging();
					this._FileAgeOptions = value;
					this.SendPropertyChanged("FileAgeOptions");
					this.OnFileAgeOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAgeDays", DbType="NVarChar(2000)")]
		public string FileAgeDays
		{
			get
			{
				return this._FileAgeDays;
			}
			set
			{
				if ((this._FileAgeDays != value))
				{
					this.OnFileAgeDaysChanging(value);
					this.SendPropertyChanging();
					this._FileAgeDays = value;
					this.SendPropertyChanged("FileAgeDays");
					this.OnFileAgeDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAgeDateOptions", DbType="NVarChar(2000)")]
		public string FileAgeDateOptions
		{
			get
			{
				return this._FileAgeDateOptions;
			}
			set
			{
				if ((this._FileAgeDateOptions != value))
				{
					this.OnFileAgeDateOptionsChanging(value);
					this.SendPropertyChanging();
					this._FileAgeDateOptions = value;
					this.SendPropertyChanged("FileAgeDateOptions");
					this.OnFileAgeDateOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_RENAMEFILE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.FM_RENAMEFILE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.FM_RENAMEFILE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FOLDERS")]
	public partial class FOLDERS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private System.DateTime _CreationTime;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _LastModified;
		
		private string _LastModifiedBy;
		
		private System.Nullable<bool> _Disabled;
		
		private bool _Deleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnCreationTimeChanging(System.DateTime value);
    partial void OnCreationTimeChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnLastModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedChanged();
    partial void OnLastModifiedByChanging(string value);
    partial void OnLastModifiedByChanged();
    partial void OnDisabledChanging(System.Nullable<bool> value);
    partial void OnDisabledChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public FOLDERS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="NVarChar(50)")]
		public string LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disabled", DbType="Bit")]
		public System.Nullable<bool> Disabled
		{
			get
			{
				return this._Disabled;
			}
			set
			{
				if ((this._Disabled != value))
				{
					this.OnDisabledChanging(value);
					this.SendPropertyChanging();
					this._Disabled = value;
					this.SendPropertyChanged("Disabled");
					this.OnDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator].[Folders]")]
	public partial class _Microsoft_SystemCenter_Orchestrator___Folders_
	{
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private string _Name;
		
		private System.DateTime _CreationTime;
		
		private string _CreatedBy;
		
		private System.DateTime _LastModifiedTime;
		
		private string _LastModifiedBy;
		
		private string _Path;
		
		public _Microsoft_SystemCenter_Orchestrator___Folders_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this._CreationTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedTime
		{
			get
			{
				return this._LastModifiedTime;
			}
			set
			{
				if ((this._LastModifiedTime != value))
				{
					this._LastModifiedTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this._LastModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this._Path = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HP_ILO_CMD")]
	public partial class HP_ILO_CMD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Server;
		
		private string _Command;
		
		private string _CommandProperties;
		
		private string _ExecutionData;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnServerChanging(string value);
    partial void OnServerChanged();
    partial void OnCommandChanging(string value);
    partial void OnCommandChanged();
    partial void OnCommandPropertiesChanging(string value);
    partial void OnCommandPropertiesChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    #endregion
		
		public HP_ILO_CMD()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Server", DbType="NVarChar(500)")]
		public string Server
		{
			get
			{
				return this._Server;
			}
			set
			{
				if ((this._Server != value))
				{
					this.OnServerChanging(value);
					this.SendPropertyChanging();
					this._Server = value;
					this.SendPropertyChanged("Server");
					this.OnServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Command", DbType="NVarChar(500)")]
		public string Command
		{
			get
			{
				return this._Command;
			}
			set
			{
				if ((this._Command != value))
				{
					this.OnCommandChanging(value);
					this.SendPropertyChanging();
					this._Command = value;
					this.SendPropertyChanged("Command");
					this.OnCommandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandProperties", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CommandProperties
		{
			get
			{
				return this._CommandProperties;
			}
			set
			{
				if ((this._CommandProperties != value))
				{
					this.OnCommandPropertiesChanging(value);
					this.SendPropertyChanging();
					this._CommandProperties = value;
					this.SendPropertyChanged("CommandProperties");
					this.OnCommandPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_HP_ILO_CMD", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.HP_ILO_CMD = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.HP_ILO_CMD = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HP_OA_CMD")]
	public partial class HP_OA_CMD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Server;
		
		private string _Command;
		
		private string _CommandProperties;
		
		private string _ExecutionData;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnServerChanging(string value);
    partial void OnServerChanged();
    partial void OnCommandChanging(string value);
    partial void OnCommandChanged();
    partial void OnCommandPropertiesChanging(string value);
    partial void OnCommandPropertiesChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    #endregion
		
		public HP_OA_CMD()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Server", DbType="NVarChar(500)")]
		public string Server
		{
			get
			{
				return this._Server;
			}
			set
			{
				if ((this._Server != value))
				{
					this.OnServerChanging(value);
					this.SendPropertyChanging();
					this._Server = value;
					this.SendPropertyChanged("Server");
					this.OnServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Command", DbType="NVarChar(500)")]
		public string Command
		{
			get
			{
				return this._Command;
			}
			set
			{
				if ((this._Command != value))
				{
					this.OnCommandChanging(value);
					this.SendPropertyChanging();
					this._Command = value;
					this.SendPropertyChanged("Command");
					this.OnCommandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandProperties", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CommandProperties
		{
			get
			{
				return this._CommandProperties;
			}
			set
			{
				if ((this._CommandProperties != value))
				{
					this.OnCommandPropertiesChanging(value);
					this.SendPropertyChanging();
					this._CommandProperties = value;
					this.SendPropertyChanged("CommandProperties");
					this.OnCommandPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_HP_OA_CMD", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.HP_OA_CMD = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.HP_OA_CMD = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INTERNETSTATUS_CLOSE")]
	public partial class INTERNETSTATUS_CLOSE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ParentID;
		
		private int _CustomClosePortOrder;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
		private EntityRef<TASK_INTERNETSTATUS> _TASK_INTERNETSTATUS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnParentIDChanging(System.Guid value);
    partial void OnParentIDChanged();
    partial void OnCustomClosePortOrderChanging(int value);
    partial void OnCustomClosePortOrderChanged();
    #endregion
		
		public INTERNETSTATUS_CLOSE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			this._TASK_INTERNETSTATUS = default(EntityRef<TASK_INTERNETSTATUS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if ((this._OBJECTS.HasLoadedOrAssignedValue || this._TASK_INTERNETSTATUS.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomClosePortOrder", DbType="Int NOT NULL")]
		public int CustomClosePortOrder
		{
			get
			{
				return this._CustomClosePortOrder;
			}
			set
			{
				if ((this._CustomClosePortOrder != value))
				{
					this.OnCustomClosePortOrderChanging(value);
					this.SendPropertyChanging();
					this._CustomClosePortOrder = value;
					this.SendPropertyChanged("CustomClosePortOrder");
					this.OnCustomClosePortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_INTERNETSTATUS_CLOSE", Storage="_OBJECTS", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.INTERNETSTATUS_CLOSE.Remove(this);
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.INTERNETSTATUS_CLOSE.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TASK_INTERNETSTATUS_INTERNETSTATUS_CLOSE", Storage="_TASK_INTERNETSTATUS", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public TASK_INTERNETSTATUS TASK_INTERNETSTATUS
		{
			get
			{
				return this._TASK_INTERNETSTATUS.Entity;
			}
			set
			{
				TASK_INTERNETSTATUS previousValue = this._TASK_INTERNETSTATUS.Entity;
				if (((previousValue != value) 
							|| (this._TASK_INTERNETSTATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_INTERNETSTATUS.Entity = null;
						previousValue.INTERNETSTATUS_CLOSE.Remove(this);
					}
					this._TASK_INTERNETSTATUS.Entity = value;
					if ((value != null))
					{
						value.INTERNETSTATUS_CLOSE.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("TASK_INTERNETSTATUS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INTERNETSTATUS_OPENPORT")]
	public partial class INTERNETSTATUS_OPENPORT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ParentID;
		
		private int _CustomOpenPortOrder;
		
		private int _CustomOpenPortNumber;
		
		private string _CustomOpenPort;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
		private EntityRef<TASK_INTERNETSTATUS> _TASK_INTERNETSTATUS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnParentIDChanging(System.Guid value);
    partial void OnParentIDChanged();
    partial void OnCustomOpenPortOrderChanging(int value);
    partial void OnCustomOpenPortOrderChanged();
    partial void OnCustomOpenPortNumberChanging(int value);
    partial void OnCustomOpenPortNumberChanged();
    partial void OnCustomOpenPortChanging(string value);
    partial void OnCustomOpenPortChanged();
    #endregion
		
		public INTERNETSTATUS_OPENPORT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			this._TASK_INTERNETSTATUS = default(EntityRef<TASK_INTERNETSTATUS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if ((this._OBJECTS.HasLoadedOrAssignedValue || this._TASK_INTERNETSTATUS.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomOpenPortOrder", DbType="Int NOT NULL")]
		public int CustomOpenPortOrder
		{
			get
			{
				return this._CustomOpenPortOrder;
			}
			set
			{
				if ((this._CustomOpenPortOrder != value))
				{
					this.OnCustomOpenPortOrderChanging(value);
					this.SendPropertyChanging();
					this._CustomOpenPortOrder = value;
					this.SendPropertyChanged("CustomOpenPortOrder");
					this.OnCustomOpenPortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomOpenPortNumber", DbType="Int NOT NULL")]
		public int CustomOpenPortNumber
		{
			get
			{
				return this._CustomOpenPortNumber;
			}
			set
			{
				if ((this._CustomOpenPortNumber != value))
				{
					this.OnCustomOpenPortNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomOpenPortNumber = value;
					this.SendPropertyChanged("CustomOpenPortNumber");
					this.OnCustomOpenPortNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomOpenPort", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string CustomOpenPort
		{
			get
			{
				return this._CustomOpenPort;
			}
			set
			{
				if ((this._CustomOpenPort != value))
				{
					this.OnCustomOpenPortChanging(value);
					this.SendPropertyChanging();
					this._CustomOpenPort = value;
					this.SendPropertyChanged("CustomOpenPort");
					this.OnCustomOpenPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_INTERNETSTATUS_OPENPORT", Storage="_OBJECTS", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.INTERNETSTATUS_OPENPORT.Remove(this);
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.INTERNETSTATUS_OPENPORT.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TASK_INTERNETSTATUS_INTERNETSTATUS_OPENPORT", Storage="_TASK_INTERNETSTATUS", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public TASK_INTERNETSTATUS TASK_INTERNETSTATUS
		{
			get
			{
				return this._TASK_INTERNETSTATUS.Entity;
			}
			set
			{
				TASK_INTERNETSTATUS previousValue = this._TASK_INTERNETSTATUS.Entity;
				if (((previousValue != value) 
							|| (this._TASK_INTERNETSTATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_INTERNETSTATUS.Entity = null;
						previousValue.INTERNETSTATUS_OPENPORT.Remove(this);
					}
					this._TASK_INTERNETSTATUS.Entity = value;
					if ((value != null))
					{
						value.INTERNETSTATUS_OPENPORT.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("TASK_INTERNETSTATUS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INTERNETSTATUS_RECEIVE")]
	public partial class INTERNETSTATUS_RECEIVE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ParentID;
		
		private int _CustomRecvOrder;
		
		private int _CustomRecvDataFileOption;
		
		private System.Nullable<int> _CustomRecvDataDDOption;
		
		private string _CustomRecvData;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
		private EntityRef<TASK_INTERNETSTATUS> _TASK_INTERNETSTATUS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnParentIDChanging(System.Guid value);
    partial void OnParentIDChanged();
    partial void OnCustomRecvOrderChanging(int value);
    partial void OnCustomRecvOrderChanged();
    partial void OnCustomRecvDataFileOptionChanging(int value);
    partial void OnCustomRecvDataFileOptionChanged();
    partial void OnCustomRecvDataDDOptionChanging(System.Nullable<int> value);
    partial void OnCustomRecvDataDDOptionChanged();
    partial void OnCustomRecvDataChanging(string value);
    partial void OnCustomRecvDataChanged();
    #endregion
		
		public INTERNETSTATUS_RECEIVE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			this._TASK_INTERNETSTATUS = default(EntityRef<TASK_INTERNETSTATUS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if ((this._OBJECTS.HasLoadedOrAssignedValue || this._TASK_INTERNETSTATUS.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomRecvOrder", DbType="Int NOT NULL")]
		public int CustomRecvOrder
		{
			get
			{
				return this._CustomRecvOrder;
			}
			set
			{
				if ((this._CustomRecvOrder != value))
				{
					this.OnCustomRecvOrderChanging(value);
					this.SendPropertyChanging();
					this._CustomRecvOrder = value;
					this.SendPropertyChanged("CustomRecvOrder");
					this.OnCustomRecvOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomRecvDataFileOption", DbType="Int NOT NULL")]
		public int CustomRecvDataFileOption
		{
			get
			{
				return this._CustomRecvDataFileOption;
			}
			set
			{
				if ((this._CustomRecvDataFileOption != value))
				{
					this.OnCustomRecvDataFileOptionChanging(value);
					this.SendPropertyChanging();
					this._CustomRecvDataFileOption = value;
					this.SendPropertyChanged("CustomRecvDataFileOption");
					this.OnCustomRecvDataFileOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomRecvDataDDOption", DbType="Int")]
		public System.Nullable<int> CustomRecvDataDDOption
		{
			get
			{
				return this._CustomRecvDataDDOption;
			}
			set
			{
				if ((this._CustomRecvDataDDOption != value))
				{
					this.OnCustomRecvDataDDOptionChanging(value);
					this.SendPropertyChanging();
					this._CustomRecvDataDDOption = value;
					this.SendPropertyChanged("CustomRecvDataDDOption");
					this.OnCustomRecvDataDDOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomRecvData", DbType="NVarChar(2000)")]
		public string CustomRecvData
		{
			get
			{
				return this._CustomRecvData;
			}
			set
			{
				if ((this._CustomRecvData != value))
				{
					this.OnCustomRecvDataChanging(value);
					this.SendPropertyChanging();
					this._CustomRecvData = value;
					this.SendPropertyChanged("CustomRecvData");
					this.OnCustomRecvDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_INTERNETSTATUS_RECEIVE", Storage="_OBJECTS", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.INTERNETSTATUS_RECEIVE.Remove(this);
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.INTERNETSTATUS_RECEIVE.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TASK_INTERNETSTATUS_INTERNETSTATUS_RECEIVE", Storage="_TASK_INTERNETSTATUS", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public TASK_INTERNETSTATUS TASK_INTERNETSTATUS
		{
			get
			{
				return this._TASK_INTERNETSTATUS.Entity;
			}
			set
			{
				TASK_INTERNETSTATUS previousValue = this._TASK_INTERNETSTATUS.Entity;
				if (((previousValue != value) 
							|| (this._TASK_INTERNETSTATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_INTERNETSTATUS.Entity = null;
						previousValue.INTERNETSTATUS_RECEIVE.Remove(this);
					}
					this._TASK_INTERNETSTATUS.Entity = value;
					if ((value != null))
					{
						value.INTERNETSTATUS_RECEIVE.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("TASK_INTERNETSTATUS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INTERNETSTATUS_SEND")]
	public partial class INTERNETSTATUS_SEND : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ParentID;
		
		private int _CustomSendOrder;
		
		private int _CustomSendDataFileOption;
		
		private string _CustomSendData;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
		private EntityRef<TASK_INTERNETSTATUS> _TASK_INTERNETSTATUS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnParentIDChanging(System.Guid value);
    partial void OnParentIDChanged();
    partial void OnCustomSendOrderChanging(int value);
    partial void OnCustomSendOrderChanged();
    partial void OnCustomSendDataFileOptionChanging(int value);
    partial void OnCustomSendDataFileOptionChanged();
    partial void OnCustomSendDataChanging(string value);
    partial void OnCustomSendDataChanged();
    #endregion
		
		public INTERNETSTATUS_SEND()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			this._TASK_INTERNETSTATUS = default(EntityRef<TASK_INTERNETSTATUS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if ((this._OBJECTS.HasLoadedOrAssignedValue || this._TASK_INTERNETSTATUS.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomSendOrder", DbType="Int NOT NULL")]
		public int CustomSendOrder
		{
			get
			{
				return this._CustomSendOrder;
			}
			set
			{
				if ((this._CustomSendOrder != value))
				{
					this.OnCustomSendOrderChanging(value);
					this.SendPropertyChanging();
					this._CustomSendOrder = value;
					this.SendPropertyChanged("CustomSendOrder");
					this.OnCustomSendOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomSendDataFileOption", DbType="Int NOT NULL")]
		public int CustomSendDataFileOption
		{
			get
			{
				return this._CustomSendDataFileOption;
			}
			set
			{
				if ((this._CustomSendDataFileOption != value))
				{
					this.OnCustomSendDataFileOptionChanging(value);
					this.SendPropertyChanging();
					this._CustomSendDataFileOption = value;
					this.SendPropertyChanged("CustomSendDataFileOption");
					this.OnCustomSendDataFileOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomSendData", DbType="NVarChar(2000)")]
		public string CustomSendData
		{
			get
			{
				return this._CustomSendData;
			}
			set
			{
				if ((this._CustomSendData != value))
				{
					this.OnCustomSendDataChanging(value);
					this.SendPropertyChanging();
					this._CustomSendData = value;
					this.SendPropertyChanged("CustomSendData");
					this.OnCustomSendDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_INTERNETSTATUS_SEND", Storage="_OBJECTS", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.INTERNETSTATUS_SEND.Remove(this);
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.INTERNETSTATUS_SEND.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TASK_INTERNETSTATUS_INTERNETSTATUS_SEND", Storage="_TASK_INTERNETSTATUS", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public TASK_INTERNETSTATUS TASK_INTERNETSTATUS
		{
			get
			{
				return this._TASK_INTERNETSTATUS.Entity;
			}
			set
			{
				TASK_INTERNETSTATUS previousValue = this._TASK_INTERNETSTATUS.Entity;
				if (((previousValue != value) 
							|| (this._TASK_INTERNETSTATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_INTERNETSTATUS.Entity = null;
						previousValue.INTERNETSTATUS_SEND.Remove(this);
					}
					this._TASK_INTERNETSTATUS.Entity = value;
					if ((value != null))
					{
						value.INTERNETSTATUS_SEND.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("TASK_INTERNETSTATUS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Runtime].[Jobs]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Runtime___Jobs_
	{
		
		private System.Guid _Id;
		
		private System.Guid _RunbookId;
		
		private string _Parameters;
		
		private string _RunbookServers;
		
		private System.Nullable<System.Guid> _RunbookServerId;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private bool _ParentIsWaiting;
		
		private string _Status;
		
		private string _CreatedBy;
		
		private System.DateTime _CreationTime;
		
		private string _LastModifiedBy;
		
		private System.DateTime _LastModifiedTime;
		
		public _Microsoft_SystemCenter_Orchestrator_Runtime___Jobs_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RunbookId
		{
			get
			{
				return this._RunbookId;
			}
			set
			{
				if ((this._RunbookId != value))
				{
					this._RunbookId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameters", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Parameters
		{
			get
			{
				return this._Parameters;
			}
			set
			{
				if ((this._Parameters != value))
				{
					this._Parameters = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookServers", DbType="NVarChar(2000)")]
		public string RunbookServers
		{
			get
			{
				return this._RunbookServers;
			}
			set
			{
				if ((this._RunbookServers != value))
				{
					this._RunbookServers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookServerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RunbookServerId
		{
			get
			{
				return this._RunbookServerId;
			}
			set
			{
				if ((this._RunbookServerId != value))
				{
					this._RunbookServerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentIsWaiting", DbType="Bit NOT NULL")]
		public bool ParentIsWaiting
		{
			get
			{
				return this._ParentIsWaiting;
			}
			set
			{
				if ((this._ParentIsWaiting != value))
				{
					this._ParentIsWaiting = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this._CreationTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this._LastModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedTime
		{
			get
			{
				return this._LastModifiedTime;
			}
			set
			{
				if ((this._LastModifiedTime != value))
				{
					this._LastModifiedTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Runtime.Internal].[Jobs]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _RunbookId;
		
		private long _JobQueueId;
		
		private string _Parameters;
		
		private string _RunbookServers;
		
		private System.Nullable<System.Guid> _RunbookServerId;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private bool _ParentIsWaiting;
		
		private long _StatusId;
		
		private string _CreatedBy;
		
		private System.DateTime _CreationTime;
		
		private string _LastModifiedBy;
		
		private System.DateTime _LastModifiedTime;
		
		private EntityRef<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_> @__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_;
		
		private EntityRef<POLICIES> _POLICIES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRunbookIdChanging(System.Guid value);
    partial void OnRunbookIdChanged();
    partial void OnJobQueueIdChanging(long value);
    partial void OnJobQueueIdChanged();
    partial void OnParametersChanging(string value);
    partial void OnParametersChanged();
    partial void OnRunbookServersChanging(string value);
    partial void OnRunbookServersChanged();
    partial void OnRunbookServerIdChanging(System.Nullable<System.Guid> value);
    partial void OnRunbookServerIdChanged();
    partial void OnParentIdChanging(System.Nullable<System.Guid> value);
    partial void OnParentIdChanged();
    partial void OnParentIsWaitingChanging(bool value);
    partial void OnParentIsWaitingChanged();
    partial void OnStatusIdChanging(long value);
    partial void OnStatusIdChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreationTimeChanging(System.DateTime value);
    partial void OnCreationTimeChanged();
    partial void OnLastModifiedByChanging(string value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedTimeChanging(System.DateTime value);
    partial void OnLastModifiedTimeChanged();
    #endregion
		
		public _Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_()
		{
			this.@__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_ = default(EntityRef<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_>);
			this._POLICIES = default(EntityRef<POLICIES>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RunbookId
		{
			get
			{
				return this._RunbookId;
			}
			set
			{
				if ((this._RunbookId != value))
				{
					if (this._POLICIES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRunbookIdChanging(value);
					this.SendPropertyChanging();
					this._RunbookId = value;
					this.SendPropertyChanged("RunbookId");
					this.OnRunbookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobQueueId", DbType="BigInt NOT NULL")]
		public long JobQueueId
		{
			get
			{
				return this._JobQueueId;
			}
			set
			{
				if ((this._JobQueueId != value))
				{
					this.OnJobQueueIdChanging(value);
					this.SendPropertyChanging();
					this._JobQueueId = value;
					this.SendPropertyChanged("JobQueueId");
					this.OnJobQueueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameters", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Parameters
		{
			get
			{
				return this._Parameters;
			}
			set
			{
				if ((this._Parameters != value))
				{
					this.OnParametersChanging(value);
					this.SendPropertyChanging();
					this._Parameters = value;
					this.SendPropertyChanged("Parameters");
					this.OnParametersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookServers", DbType="NVarChar(2000)")]
		public string RunbookServers
		{
			get
			{
				return this._RunbookServers;
			}
			set
			{
				if ((this._RunbookServers != value))
				{
					this.OnRunbookServersChanging(value);
					this.SendPropertyChanging();
					this._RunbookServers = value;
					this.SendPropertyChanged("RunbookServers");
					this.OnRunbookServersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookServerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RunbookServerId
		{
			get
			{
				return this._RunbookServerId;
			}
			set
			{
				if ((this._RunbookServerId != value))
				{
					this.OnRunbookServerIdChanging(value);
					this.SendPropertyChanging();
					this._RunbookServerId = value;
					this.SendPropertyChanged("RunbookServerId");
					this.OnRunbookServerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentIsWaiting", DbType="Bit NOT NULL")]
		public bool ParentIsWaiting
		{
			get
			{
				return this._ParentIsWaiting;
			}
			set
			{
				if ((this._ParentIsWaiting != value))
				{
					this.OnParentIsWaitingChanging(value);
					this.SendPropertyChanging();
					this._ParentIsWaiting = value;
					this.SendPropertyChanged("ParentIsWaiting");
					this.OnParentIsWaitingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="BigInt NOT NULL")]
		public long StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this.@__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedTime
		{
			get
			{
				return this._LastModifiedTime;
			}
			set
			{
				if ((this._LastModifiedTime != value))
				{
					this.OnLastModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedTime = value;
					this.SendPropertyChanged("LastModifiedTime");
					this.OnLastModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus___Microsoft_Sys" +
			"temCenter_Orchestrator_Runtime_Internal___Jobs_", Storage="__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_", ThisKey="StatusId", OtherKey="Id", IsForeignKey=true)]
		public _Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_ _Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_
		{
			get
			{
				return this.@__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_.Entity;
			}
			set
			{
				_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_ previousValue = this.@__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_.Entity;
				if (((previousValue != value) 
							|| (this.@__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_.Entity = null;
						previousValue._Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_.Remove(this);
					}
					this.@__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_.Entity = value;
					if ((value != null))
					{
						value._Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_.Add(this);
						this._StatusId = value.Id;
					}
					else
					{
						this._StatusId = default(long);
					}
					this.SendPropertyChanged("_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="POLICIES__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_", Storage="_POLICIES", ThisKey="RunbookId", OtherKey="UniqueID", IsForeignKey=true, DeleteOnNull=true)]
		public POLICIES POLICIES
		{
			get
			{
				return this._POLICIES.Entity;
			}
			set
			{
				POLICIES previousValue = this._POLICIES.Entity;
				if (((previousValue != value) 
							|| (this._POLICIES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POLICIES.Entity = null;
						previousValue._Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_.Remove(this);
					}
					this._POLICIES.Entity = value;
					if ((value != null))
					{
						value._Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_.Add(this);
						this._RunbookId = value.UniqueID;
					}
					else
					{
						this._RunbookId = default(System.Guid);
					}
					this.SendPropertyChanged("POLICIES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Runtime.Internal].[JobStatus]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private EntitySet<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_> @__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public _Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_()
		{
			this.@__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_ = new EntitySet<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_>(new Action<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_>(this.attach__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_), new Action<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_>(this.detach__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus___Microsoft_Sys" +
			"temCenter_Orchestrator_Runtime_Internal___Jobs_", Storage="__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_", ThisKey="Id", OtherKey="StatusId")]
		public EntitySet<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_> _Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_
		{
			get
			{
				return this.@__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_;
			}
			set
			{
				this.@__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_(_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_ entity)
		{
			this.SendPropertyChanging();
			entity._Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_ = this;
		}
		
		private void detach__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_(_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_ entity)
		{
			this.SendPropertyChanging();
			entity._Microsoft_SystemCenter_Orchestrator_Runtime_Internal___JobStatus_ = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LICENSES")]
	public partial class LICENSES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ProductID;
		
		private string _Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(System.Guid value);
    partial void OnProductIDChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public LICENSES()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LINKS")]
	public partial class LINKS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _SourceObject;
		
		private System.Guid _TargetObject;
		
		private int _Color;
		
		private int _WaitDelay;
		
		private string _SubPoints;
		
		private System.Nullable<bool> _And;
		
		private string _Label;
		
		private System.Nullable<int> _Width;
		
		private EntitySet<TRIGGERS> _TRIGGERS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnSourceObjectChanging(System.Guid value);
    partial void OnSourceObjectChanged();
    partial void OnTargetObjectChanging(System.Guid value);
    partial void OnTargetObjectChanged();
    partial void OnColorChanging(int value);
    partial void OnColorChanged();
    partial void OnWaitDelayChanging(int value);
    partial void OnWaitDelayChanged();
    partial void OnSubPointsChanging(string value);
    partial void OnSubPointsChanged();
    partial void OnAndChanging(System.Nullable<bool> value);
    partial void OnAndChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnWidthChanging(System.Nullable<int> value);
    partial void OnWidthChanged();
    #endregion
		
		public LINKS()
		{
			this._TRIGGERS = new EntitySet<TRIGGERS>(new Action<TRIGGERS>(this.attach_TRIGGERS), new Action<TRIGGERS>(this.detach_TRIGGERS));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceObject", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SourceObject
		{
			get
			{
				return this._SourceObject;
			}
			set
			{
				if ((this._SourceObject != value))
				{
					this.OnSourceObjectChanging(value);
					this.SendPropertyChanging();
					this._SourceObject = value;
					this.SendPropertyChanged("SourceObject");
					this.OnSourceObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetObject", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TargetObject
		{
			get
			{
				return this._TargetObject;
			}
			set
			{
				if ((this._TargetObject != value))
				{
					this.OnTargetObjectChanging(value);
					this.SendPropertyChanging();
					this._TargetObject = value;
					this.SendPropertyChanged("TargetObject");
					this.OnTargetObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="Int NOT NULL")]
		public int Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitDelay", DbType="Int NOT NULL")]
		public int WaitDelay
		{
			get
			{
				return this._WaitDelay;
			}
			set
			{
				if ((this._WaitDelay != value))
				{
					this.OnWaitDelayChanging(value);
					this.SendPropertyChanging();
					this._WaitDelay = value;
					this.SendPropertyChanged("WaitDelay");
					this.OnWaitDelayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubPoints", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SubPoints
		{
			get
			{
				return this._SubPoints;
			}
			set
			{
				if ((this._SubPoints != value))
				{
					this.OnSubPointsChanging(value);
					this.SendPropertyChanging();
					this._SubPoints = value;
					this.SendPropertyChanged("SubPoints");
					this.OnSubPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_And", DbType="Bit")]
		public System.Nullable<bool> And
		{
			get
			{
				return this._And;
			}
			set
			{
				if ((this._And != value))
				{
					this.OnAndChanging(value);
					this.SendPropertyChanging();
					this._And = value;
					this.SendPropertyChanged("And");
					this.OnAndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="NVarChar(200)")]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int")]
		public System.Nullable<int> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LINKS_TRIGGERS", Storage="_TRIGGERS", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<TRIGGERS> TRIGGERS
		{
			get
			{
				return this._TRIGGERS;
			}
			set
			{
				this._TRIGGERS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TRIGGERS(TRIGGERS entity)
		{
			this.SendPropertyChanging();
			entity.LINKS = this;
		}
		
		private void detach_TRIGGERS(TRIGGERS entity)
		{
			this.SendPropertyChanging();
			entity.LINKS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Maintenance].[MaintenanceTasks]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Maintenance___MaintenanceTasks_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _ProcedureName;
		
		private bool _IsEnabled;
		
		private System.DateTime _LastExecutionTime;
		
		private int _IntervalInSeconds;
		
		private bool _IsTimerBased;
		
		private System.Nullable<System.Guid> _ConversationHandle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnProcedureNameChanging(string value);
    partial void OnProcedureNameChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnLastExecutionTimeChanging(System.DateTime value);
    partial void OnLastExecutionTimeChanged();
    partial void OnIntervalInSecondsChanging(int value);
    partial void OnIntervalInSecondsChanged();
    partial void OnIsTimerBasedChanging(bool value);
    partial void OnIsTimerBasedChanged();
    partial void OnConversationHandleChanging(System.Nullable<System.Guid> value);
    partial void OnConversationHandleChanged();
    #endregion
		
		public _Microsoft_SystemCenter_Orchestrator_Maintenance___MaintenanceTasks_()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcedureName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string ProcedureName
		{
			get
			{
				return this._ProcedureName;
			}
			set
			{
				if ((this._ProcedureName != value))
				{
					this.OnProcedureNameChanging(value);
					this.SendPropertyChanging();
					this._ProcedureName = value;
					this.SendPropertyChanged("ProcedureName");
					this.OnProcedureNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastExecutionTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastExecutionTime
		{
			get
			{
				return this._LastExecutionTime;
			}
			set
			{
				if ((this._LastExecutionTime != value))
				{
					this.OnLastExecutionTimeChanging(value);
					this.SendPropertyChanging();
					this._LastExecutionTime = value;
					this.SendPropertyChanged("LastExecutionTime");
					this.OnLastExecutionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntervalInSeconds", DbType="Int NOT NULL")]
		public int IntervalInSeconds
		{
			get
			{
				return this._IntervalInSeconds;
			}
			set
			{
				if ((this._IntervalInSeconds != value))
				{
					this.OnIntervalInSecondsChanging(value);
					this.SendPropertyChanging();
					this._IntervalInSeconds = value;
					this.SendPropertyChanged("IntervalInSeconds");
					this.OnIntervalInSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTimerBased", DbType="Bit NOT NULL")]
		public bool IsTimerBased
		{
			get
			{
				return this._IsTimerBased;
			}
			set
			{
				if ((this._IsTimerBased != value))
				{
					this.OnIsTimerBasedChanging(value);
					this.SendPropertyChanging();
					this._IsTimerBased = value;
					this.SendPropertyChanged("IsTimerBased");
					this.OnIsTimerBasedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversationHandle", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ConversationHandle
		{
			get
			{
				return this._ConversationHandle;
			}
			set
			{
				if ((this._ConversationHandle != value))
				{
					this.OnConversationHandleChanging(value);
					this.SendPropertyChanging();
					this._ConversationHandle = value;
					this.SendPropertyChanged("ConversationHandle");
					this.OnConversationHandleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MODIFY_COUNTER")]
	public partial class MODIFY_COUNTER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Nullable<System.Guid> _CounterID;
		
		private string _Action;
		
		private string _Value;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnCounterIDChanging(System.Nullable<System.Guid> value);
    partial void OnCounterIDChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public MODIFY_COUNTER()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CounterID
		{
			get
			{
				return this._CounterID;
			}
			set
			{
				if ((this._CounterID != value))
				{
					this.OnCounterIDChanging(value);
					this.SendPropertyChanging();
					this._CounterID = value;
					this.SendPropertyChanged("CounterID");
					this.OnCounterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(64)")]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(200)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_MODIFY_COUNTER", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.MODIFY_COUNTER = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.MODIFY_COUNTER = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONITOR_COUNTER")]
	public partial class MONITOR_COUNTER
	{
		
		private System.Guid _UniqueID;
		
		private System.Nullable<bool> _And;
		
		public MONITOR_COUNTER()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this._UniqueID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_And", DbType="Bit")]
		public System.Nullable<bool> And
		{
			get
			{
				return this._And;
			}
			set
			{
				if ((this._And != value))
				{
					this._And = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONITOR_COUNTER_TRIGGERS")]
	public partial class MONITOR_COUNTER_TRIGGERS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ParentID;
		
		private System.Nullable<System.Guid> _CounterID;
		
		private string _Condition;
		
		private string _Value;
		
		private System.Nullable<int> _GroupID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnParentIDChanging(System.Guid value);
    partial void OnParentIDChanged();
    partial void OnCounterIDChanging(System.Nullable<System.Guid> value);
    partial void OnCounterIDChanged();
    partial void OnConditionChanging(string value);
    partial void OnConditionChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    #endregion
		
		public MONITOR_COUNTER_TRIGGERS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CounterID
		{
			get
			{
				return this._CounterID;
			}
			set
			{
				if ((this._CounterID != value))
				{
					this.OnCounterIDChanging(value);
					this.SendPropertyChanging();
					this._CounterID = value;
					this.SendPropertyChanged("CounterID");
					this.OnCounterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Condition", DbType="NVarChar(200)")]
		public string Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(2000)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MT_APPENDLINE")]
	public partial class MT_APPENDLINE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _FileName;
		
		private string _Encoding;
		
		private string _Text;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnEncodingChanging(string value);
    partial void OnEncodingChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    #endregion
		
		public MT_APPENDLINE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(2000)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Encoding", DbType="NVarChar(2000)")]
		public string Encoding
		{
			get
			{
				return this._Encoding;
			}
			set
			{
				if ((this._Encoding != value))
				{
					this.OnEncodingChanging(value);
					this.SendPropertyChanging();
					this._Encoding = value;
					this.SendPropertyChanged("Encoding");
					this.OnEncodingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_MT_APPENDLINE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.MT_APPENDLINE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.MT_APPENDLINE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MT_DELETELINE")]
	public partial class MT_DELETELINE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _FileName;
		
		private string _Encoding;
		
		private string _Lines;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnEncodingChanging(string value);
    partial void OnEncodingChanged();
    partial void OnLinesChanging(string value);
    partial void OnLinesChanged();
    #endregion
		
		public MT_DELETELINE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(2000)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Encoding", DbType="NVarChar(2000)")]
		public string Encoding
		{
			get
			{
				return this._Encoding;
			}
			set
			{
				if ((this._Encoding != value))
				{
					this.OnEncodingChanging(value);
					this.SendPropertyChanging();
					this._Encoding = value;
					this.SendPropertyChanged("Encoding");
					this.OnEncodingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lines", DbType="NVarChar(2000)")]
		public string Lines
		{
			get
			{
				return this._Lines;
			}
			set
			{
				if ((this._Lines != value))
				{
					this.OnLinesChanging(value);
					this.SendPropertyChanging();
					this._Lines = value;
					this.SendPropertyChanged("Lines");
					this.OnLinesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_MT_DELETELINE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.MT_DELETELINE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.MT_DELETELINE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MT_FINDTEXT")]
	public partial class MT_FINDTEXT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _FileName;
		
		private string _Encoding;
		
		private string _SearchText;
		
		private string _UseRegex;
		
		private string _CaseSensitive;
		
		private string _FindFirstOnly;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnEncodingChanging(string value);
    partial void OnEncodingChanged();
    partial void OnSearchTextChanging(string value);
    partial void OnSearchTextChanged();
    partial void OnUseRegexChanging(string value);
    partial void OnUseRegexChanged();
    partial void OnCaseSensitiveChanging(string value);
    partial void OnCaseSensitiveChanged();
    partial void OnFindFirstOnlyChanging(string value);
    partial void OnFindFirstOnlyChanged();
    #endregion
		
		public MT_FINDTEXT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(2000)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Encoding", DbType="NVarChar(2000)")]
		public string Encoding
		{
			get
			{
				return this._Encoding;
			}
			set
			{
				if ((this._Encoding != value))
				{
					this.OnEncodingChanging(value);
					this.SendPropertyChanging();
					this._Encoding = value;
					this.SendPropertyChanged("Encoding");
					this.OnEncodingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchText", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SearchText
		{
			get
			{
				return this._SearchText;
			}
			set
			{
				if ((this._SearchText != value))
				{
					this.OnSearchTextChanging(value);
					this.SendPropertyChanging();
					this._SearchText = value;
					this.SendPropertyChanged("SearchText");
					this.OnSearchTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseRegex", DbType="NVarChar(2000)")]
		public string UseRegex
		{
			get
			{
				return this._UseRegex;
			}
			set
			{
				if ((this._UseRegex != value))
				{
					this.OnUseRegexChanging(value);
					this.SendPropertyChanging();
					this._UseRegex = value;
					this.SendPropertyChanged("UseRegex");
					this.OnUseRegexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseSensitive", DbType="NVarChar(2000)")]
		public string CaseSensitive
		{
			get
			{
				return this._CaseSensitive;
			}
			set
			{
				if ((this._CaseSensitive != value))
				{
					this.OnCaseSensitiveChanging(value);
					this.SendPropertyChanging();
					this._CaseSensitive = value;
					this.SendPropertyChanged("CaseSensitive");
					this.OnCaseSensitiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindFirstOnly", DbType="NVarChar(2000)")]
		public string FindFirstOnly
		{
			get
			{
				return this._FindFirstOnly;
			}
			set
			{
				if ((this._FindFirstOnly != value))
				{
					this.OnFindFirstOnlyChanging(value);
					this.SendPropertyChanging();
					this._FindFirstOnly = value;
					this.SendPropertyChanged("FindFirstOnly");
					this.OnFindFirstOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_MT_FINDTEXT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.MT_FINDTEXT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.MT_FINDTEXT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MT_GETLINES")]
	public partial class MT_GETLINES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _FileName;
		
		private string _Encoding;
		
		private string _GetLinesRanges;
		
		private string _ExecutionData;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnEncodingChanging(string value);
    partial void OnEncodingChanged();
    partial void OnGetLinesRangesChanging(string value);
    partial void OnGetLinesRangesChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    #endregion
		
		public MT_GETLINES()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(2000)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Encoding", DbType="NVarChar(2000)")]
		public string Encoding
		{
			get
			{
				return this._Encoding;
			}
			set
			{
				if ((this._Encoding != value))
				{
					this.OnEncodingChanging(value);
					this.SendPropertyChanging();
					this._Encoding = value;
					this.SendPropertyChanged("Encoding");
					this.OnEncodingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GetLinesRanges", DbType="NVarChar(2000)")]
		public string GetLinesRanges
		{
			get
			{
				return this._GetLinesRanges;
			}
			set
			{
				if ((this._GetLinesRanges != value))
				{
					this.OnGetLinesRangesChanging(value);
					this.SendPropertyChanging();
					this._GetLinesRanges = value;
					this.SendPropertyChanged("GetLinesRanges");
					this.OnGetLinesRangesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_MT_GETLINES", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.MT_GETLINES = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.MT_GETLINES = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MT_INSERTLINE")]
	public partial class MT_INSERTLINE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _FileName;
		
		private string _Encoding;
		
		private string _Text;
		
		private string _Line;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnEncodingChanging(string value);
    partial void OnEncodingChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    #endregion
		
		public MT_INSERTLINE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(2000)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Encoding", DbType="NVarChar(2000)")]
		public string Encoding
		{
			get
			{
				return this._Encoding;
			}
			set
			{
				if ((this._Encoding != value))
				{
					this.OnEncodingChanging(value);
					this.SendPropertyChanging();
					this._Encoding = value;
					this.SendPropertyChanged("Encoding");
					this.OnEncodingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Line", DbType="NVarChar(2000)")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_MT_INSERTLINE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.MT_INSERTLINE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.MT_INSERTLINE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MT_READLINE")]
	public partial class MT_READLINE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _FileName;
		
		private string _Encoding;
		
		private string _Lines;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnEncodingChanging(string value);
    partial void OnEncodingChanged();
    partial void OnLinesChanging(string value);
    partial void OnLinesChanged();
    #endregion
		
		public MT_READLINE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(2000)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Encoding", DbType="NVarChar(2000)")]
		public string Encoding
		{
			get
			{
				return this._Encoding;
			}
			set
			{
				if ((this._Encoding != value))
				{
					this.OnEncodingChanging(value);
					this.SendPropertyChanging();
					this._Encoding = value;
					this.SendPropertyChanged("Encoding");
					this.OnEncodingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lines", DbType="NVarChar(2000)")]
		public string Lines
		{
			get
			{
				return this._Lines;
			}
			set
			{
				if ((this._Lines != value))
				{
					this.OnLinesChanging(value);
					this.SendPropertyChanging();
					this._Lines = value;
					this.SendPropertyChanged("Lines");
					this.OnLinesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_MT_READLINE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.MT_READLINE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.MT_READLINE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MT_SEARCHANDREPLACE")]
	public partial class MT_SEARCHANDREPLACE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _FileName;
		
		private string _Encoding;
		
		private string _SearchText;
		
		private string _UseRegex;
		
		private string _CaseSensitive;
		
		private string _ReplaceText;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnEncodingChanging(string value);
    partial void OnEncodingChanged();
    partial void OnSearchTextChanging(string value);
    partial void OnSearchTextChanged();
    partial void OnUseRegexChanging(string value);
    partial void OnUseRegexChanged();
    partial void OnCaseSensitiveChanging(string value);
    partial void OnCaseSensitiveChanged();
    partial void OnReplaceTextChanging(string value);
    partial void OnReplaceTextChanged();
    #endregion
		
		public MT_SEARCHANDREPLACE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(2000)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Encoding", DbType="NVarChar(2000)")]
		public string Encoding
		{
			get
			{
				return this._Encoding;
			}
			set
			{
				if ((this._Encoding != value))
				{
					this.OnEncodingChanging(value);
					this.SendPropertyChanging();
					this._Encoding = value;
					this.SendPropertyChanged("Encoding");
					this.OnEncodingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchText", DbType="NVarChar(2000)")]
		public string SearchText
		{
			get
			{
				return this._SearchText;
			}
			set
			{
				if ((this._SearchText != value))
				{
					this.OnSearchTextChanging(value);
					this.SendPropertyChanging();
					this._SearchText = value;
					this.SendPropertyChanged("SearchText");
					this.OnSearchTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseRegex", DbType="NVarChar(2000)")]
		public string UseRegex
		{
			get
			{
				return this._UseRegex;
			}
			set
			{
				if ((this._UseRegex != value))
				{
					this.OnUseRegexChanging(value);
					this.SendPropertyChanging();
					this._UseRegex = value;
					this.SendPropertyChanged("UseRegex");
					this.OnUseRegexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseSensitive", DbType="NVarChar(2000)")]
		public string CaseSensitive
		{
			get
			{
				return this._CaseSensitive;
			}
			set
			{
				if ((this._CaseSensitive != value))
				{
					this.OnCaseSensitiveChanging(value);
					this.SendPropertyChanging();
					this._CaseSensitive = value;
					this.SendPropertyChanged("CaseSensitive");
					this.OnCaseSensitiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplaceText", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ReplaceText
		{
			get
			{
				return this._ReplaceText;
			}
			set
			{
				if ((this._ReplaceText != value))
				{
					this.OnReplaceTextChanging(value);
					this.SendPropertyChanging();
					this._ReplaceText = value;
					this.SendPropertyChanged("ReplaceText");
					this.OnReplaceTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_MT_SEARCHANDREPLACE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.MT_SEARCHANDREPLACE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.MT_SEARCHANDREPLACE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OBJECT_AUDIT")]
	public partial class OBJECT_AUDIT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ObjectID;
		
		private System.Guid _ObjectType;
		
		private System.Guid _TransactionID;
		
		private string _Action;
		
		private string _Attribute;
		
		private string _OldValue;
		
		private string _NewValue;
		
		private System.DateTime _DateTime;
		
		private string _Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnObjectIDChanging(System.Guid value);
    partial void OnObjectIDChanged();
    partial void OnObjectTypeChanging(System.Guid value);
    partial void OnObjectTypeChanged();
    partial void OnTransactionIDChanging(System.Guid value);
    partial void OnTransactionIDChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnAttributeChanging(string value);
    partial void OnAttributeChanged();
    partial void OnOldValueChanging(string value);
    partial void OnOldValueChanged();
    partial void OnNewValueChanging(string value);
    partial void OnNewValueChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public OBJECT_AUDIT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attribute", DbType="NVarChar(200)")]
		public string Attribute
		{
			get
			{
				return this._Attribute;
			}
			set
			{
				if ((this._Attribute != value))
				{
					this.OnAttributeChanging(value);
					this.SendPropertyChanging();
					this._Attribute = value;
					this.SendPropertyChanged("Attribute");
					this.OnAttributeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldValue", DbType="NVarChar(2000)")]
		public string OldValue
		{
			get
			{
				return this._OldValue;
			}
			set
			{
				if ((this._OldValue != value))
				{
					this.OnOldValueChanging(value);
					this.SendPropertyChanging();
					this._OldValue = value;
					this.SendPropertyChanged("OldValue");
					this.OnOldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="NVarChar(2000)")]
		public string NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OBJECTINSTANCEDATA")]
	public partial class OBJECTINSTANCEDATA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ObjectInstanceID;
		
		private string _Key;
		
		private string _Value;
		
		private System.Nullable<int> _CollectionIndex;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnObjectInstanceIDChanging(System.Guid value);
    partial void OnObjectInstanceIDChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnCollectionIndexChanging(System.Nullable<int> value);
    partial void OnCollectionIndexChanged();
    #endregion
		
		public OBJECTINSTANCEDATA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectInstanceID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ObjectInstanceID
		{
			get
			{
				return this._ObjectInstanceID;
			}
			set
			{
				if ((this._ObjectInstanceID != value))
				{
					this.OnObjectInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectInstanceID = value;
					this.SendPropertyChanged("ObjectInstanceID");
					this.OnObjectInstanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Key", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionIndex", DbType="Int")]
		public System.Nullable<int> CollectionIndex
		{
			get
			{
				return this._CollectionIndex;
			}
			set
			{
				if ((this._CollectionIndex != value))
				{
					this.OnCollectionIndexChanging(value);
					this.SendPropertyChanging();
					this._CollectionIndex = value;
					this.SendPropertyChanged("CollectionIndex");
					this.OnCollectionIndexChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OBJECTINSTANCES")]
	public partial class OBJECTINSTANCES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _InstanceID;
		
		private System.Guid _ObjectID;
		
		private int _InstanceNumber;
		
		private string _ObjectStatus;
		
		private System.DateTime _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnInstanceIDChanging(System.Guid value);
    partial void OnInstanceIDChanged();
    partial void OnObjectIDChanging(System.Guid value);
    partial void OnObjectIDChanged();
    partial void OnInstanceNumberChanging(int value);
    partial void OnInstanceNumberChanged();
    partial void OnObjectStatusChanging(string value);
    partial void OnObjectStatusChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    #endregion
		
		public OBJECTINSTANCES()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstanceID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid InstanceID
		{
			get
			{
				return this._InstanceID;
			}
			set
			{
				if ((this._InstanceID != value))
				{
					this.OnInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._InstanceID = value;
					this.SendPropertyChanged("InstanceID");
					this.OnInstanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstanceNumber", DbType="Int NOT NULL")]
		public int InstanceNumber
		{
			get
			{
				return this._InstanceNumber;
			}
			set
			{
				if ((this._InstanceNumber != value))
				{
					this.OnInstanceNumberChanging(value);
					this.SendPropertyChanging();
					this._InstanceNumber = value;
					this.SendPropertyChanged("InstanceNumber");
					this.OnInstanceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectStatus", DbType="NVarChar(64)")]
		public string ObjectStatus
		{
			get
			{
				return this._ObjectStatus;
			}
			set
			{
				if ((this._ObjectStatus != value))
				{
					this.OnObjectStatusChanging(value);
					this.SendPropertyChanging();
					this._ObjectStatus = value;
					this.SendPropertyChanged("ObjectStatus");
					this.OnObjectStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_OBJECTINSTANCES", Storage="_OBJECTS", ThisKey="ObjectID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.OBJECTINSTANCES.Remove(this);
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.OBJECTINSTANCES.Add(this);
						this._ObjectID = value.UniqueID;
					}
					else
					{
						this._ObjectID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OBJECTLOOPING")]
	public partial class OBJECTLOOPING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private bool _Enabled;
		
		private string _DelayBetweenAttempts;
		
		private string _ExitConditions;
		
		private string _DoNotExitConditions;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnDelayBetweenAttemptsChanging(string value);
    partial void OnDelayBetweenAttemptsChanged();
    partial void OnExitConditionsChanging(string value);
    partial void OnExitConditionsChanged();
    partial void OnDoNotExitConditionsChanging(string value);
    partial void OnDoNotExitConditionsChanged();
    #endregion
		
		public OBJECTLOOPING()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelayBetweenAttempts", DbType="NVarChar(2000)")]
		public string DelayBetweenAttempts
		{
			get
			{
				return this._DelayBetweenAttempts;
			}
			set
			{
				if ((this._DelayBetweenAttempts != value))
				{
					this.OnDelayBetweenAttemptsChanging(value);
					this.SendPropertyChanging();
					this._DelayBetweenAttempts = value;
					this.SendPropertyChanged("DelayBetweenAttempts");
					this.OnDelayBetweenAttemptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitConditions", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ExitConditions
		{
			get
			{
				return this._ExitConditions;
			}
			set
			{
				if ((this._ExitConditions != value))
				{
					this.OnExitConditionsChanging(value);
					this.SendPropertyChanging();
					this._ExitConditions = value;
					this.SendPropertyChanged("ExitConditions");
					this.OnExitConditionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoNotExitConditions", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string DoNotExitConditions
		{
			get
			{
				return this._DoNotExitConditions;
			}
			set
			{
				if ((this._DoNotExitConditions != value))
				{
					this.OnDoNotExitConditionsChanging(value);
					this.SendPropertyChanging();
					this._DoNotExitConditions = value;
					this.SendPropertyChanged("DoNotExitConditions");
					this.OnDoNotExitConditionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_OBJECTLOOPING", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true, DeleteOnNull=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.OBJECTLOOPING = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.OBJECTLOOPING = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OBJECTS")]
	public partial class OBJECTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ParentID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _PositionX;
		
		private System.Nullable<int> _PositionY;
		
		private System.Guid _ObjectType;
		
		private string _SubType;
		
		private bool _Enabled;
		
		private System.Nullable<int> _Flags;
		
		private System.Nullable<bool> _ASC_UseServiceSecurity;
		
		private System.Nullable<bool> _ASC_ThisAccount;
		
		private string _ASC_Username;
		
		private string _ASC_Password;
		
		private System.Nullable<bool> _HasExtenders;
		
		private System.DateTime _CreationTime;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _LastModified;
		
		private string _LastModifiedBy;
		
		private bool _Deleted;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<decimal> _Savings;
		
		private System.Nullable<short> _Number;
		
		private string _AlternateDisplayData;
		
		private System.Nullable<int> _ASW_ObjectTimeout;
		
		private System.Nullable<bool> _ASW_NotifyOnFail;
		
		private System.Nullable<bool> _Flatten;
		
		private System.Nullable<bool> _FlatUseLineBreak;
		
		private System.Nullable<bool> _FlatUseCSV;
		
		private System.Nullable<bool> _FlatUseCustomSep;
		
		private string _FlatCustomSep;
		
		private EntityRef<COUNTER_STATUS> _COUNTER_STATUS;
		
		private EntitySet<EMAIL_ATTACHMENTS> _EMAIL_ATTACHMENTS;
		
		private EntitySet<EMAIL_RECIPIENTS> _EMAIL_RECIPIENTS;
		
		private EntityRef<ENCRYPTION_RUNDECRYPTION> _ENCRYPTION_RUNDECRYPTION;
		
		private EntityRef<ENCRYPTION_RUNENCRYPTION> _ENCRYPTION_RUNENCRYPTION;
		
		private EntityRef<EVENT_DATETIME> _EVENT_DATETIME;
		
		private EntityRef<EVENT_DISKSPACE> _EVENT_DISKSPACE;
		
		private EntitySet<EVENT_DISKSPACE_DRIVEINFO> _EVENT_DISKSPACE_DRIVEINFO;
		
		private EntityRef<EVENT_EVENTLOG> _EVENT_EVENTLOG;
		
		private EntitySet<EVENT_EVENTLOGFILTER> _EVENT_EVENTLOGFILTER;
		
		private EntityRef<EVENT_MONITORCOMPUTERIP> _EVENT_MONITORCOMPUTERIP;
		
		private EntityRef<EVENT_MONITORINTERNET> _EVENT_MONITORINTERNET;
		
		private EntityRef<EVENT_PROCESS> _EVENT_PROCESS;
		
		private EntityRef<EVENT_SERVICE> _EVENT_SERVICE;
		
		private EntityRef<EVENT_SERVICESTARTED> _EVENT_SERVICESTARTED;
		
		private EntityRef<EVENT_SNMPMONITORTRAP> _EVENT_SNMPMONITORTRAP;
		
		private EntityRef<EVENT_WMI> _EVENT_WMI;
		
		private EntityRef<FM_COPYFILE> _FM_COPYFILE;
		
		private EntityRef<FM_CREATEFOLDER> _FM_CREATEFOLDER;
		
		private EntityRef<FM_DELETEFILE> _FM_DELETEFILE;
		
		private EntityRef<FM_DELETEFOLDER> _FM_DELETEFOLDER;
		
		private EntityRef<FM_FILEMONITOR> _FM_FILEMONITOR;
		
		private EntityRef<FM_FOLDERMONITOR> _FM_FOLDERMONITOR;
		
		private EntityRef<FM_GETFILESTATUS> _FM_GETFILESTATUS;
		
		private EntityRef<FM_MOVEFILE> _FM_MOVEFILE;
		
		private EntityRef<FM_MOVEFOLDER> _FM_MOVEFOLDER;
		
		private EntityRef<FM_RENAMEFILE> _FM_RENAMEFILE;
		
		private EntityRef<HP_ILO_CMD> _HP_ILO_CMD;
		
		private EntityRef<HP_OA_CMD> _HP_OA_CMD;
		
		private EntitySet<INTERNETSTATUS_CLOSE> _INTERNETSTATUS_CLOSE;
		
		private EntitySet<INTERNETSTATUS_OPENPORT> _INTERNETSTATUS_OPENPORT;
		
		private EntitySet<INTERNETSTATUS_RECEIVE> _INTERNETSTATUS_RECEIVE;
		
		private EntitySet<INTERNETSTATUS_SEND> _INTERNETSTATUS_SEND;
		
		private EntityRef<MODIFY_COUNTER> _MODIFY_COUNTER;
		
		private EntityRef<MT_APPENDLINE> _MT_APPENDLINE;
		
		private EntityRef<MT_DELETELINE> _MT_DELETELINE;
		
		private EntityRef<MT_FINDTEXT> _MT_FINDTEXT;
		
		private EntityRef<MT_GETLINES> _MT_GETLINES;
		
		private EntityRef<MT_INSERTLINE> _MT_INSERTLINE;
		
		private EntityRef<MT_READLINE> _MT_READLINE;
		
		private EntityRef<MT_SEARCHANDREPLACE> _MT_SEARCHANDREPLACE;
		
		private EntitySet<OBJECTINSTANCES> _OBJECTINSTANCES;
		
		private EntityRef<OBJECTLOOPING> _OBJECTLOOPING;
		
		private EntityRef<RUNDOTNETSCRIPT> _RUNDOTNETSCRIPT;
		
		private EntityRef<SCCM2007_ADDCOMPUTER> _SCCM2007_ADDCOMPUTER;
		
		private EntityRef<SCCM2007_ADVERTISETASK> _SCCM2007_ADVERTISETASK;
		
		private EntityRef<SCCM2007_CREATEADVERTISEMENT> _SCCM2007_CREATEADVERTISEMENT;
		
		private EntityRef<SCCM2007_CREATECOLLECTION> _SCCM2007_CREATECOLLECTION;
		
		private EntityRef<SCCM2007_DEL_COLLECTION> _SCCM2007_DEL_COLLECTION;
		
		private EntityRef<SCCM2007_DEPLOYSOFTWAREUPDATE> _SCCM2007_DEPLOYSOFTWAREUPDATE;
		
		private EntityRef<SCCM2007_GETADVSTATUS> _SCCM2007_GETADVSTATUS;
		
		private EntityRef<SCCM2007_GETCOLLECTION> _SCCM2007_GETCOLLECTION;
		
		private EntityRef<SCCM2007_GETSUCOMPLIANCE> _SCCM2007_GETSUCOMPLIANCE;
		
		private EntityRef<SCCM2007_REFRESHCLIENT> _SCCM2007_REFRESHCLIENT;
		
		private EntityRef<SCCM2007_REFRESHCOLLECTION> _SCCM2007_REFRESHCOLLECTION;
		
		private EntityRef<SCCM2012_ADDCOLLECTIONRULE> _SCCM2012_ADDCOLLECTIONRULE;
		
		private EntityRef<SCCM2012_CREATECOLLECTION> _SCCM2012_CREATECOLLECTION;
		
		private EntityRef<SCCM2012_DELCOLLECTION> _SCCM2012_DELCOLLECTION;
		
		private EntityRef<SCCM2012_DELCOLLECTIONRULE> _SCCM2012_DELCOLLECTIONRULE;
		
		private EntityRef<SCCM2012_DEPLOYAPPLICATION> _SCCM2012_DEPLOYAPPLICATION;
		
		private EntityRef<SCCM2012_DEPLOYPROGRAM> _SCCM2012_DEPLOYPROGRAM;
		
		private EntityRef<SCCM2012_DEPLOYSOFTWAREUPDATE> _SCCM2012_DEPLOYSOFTWAREUPDATE;
		
		private EntityRef<SCCM2012_DEPLOYTASKSEQUENCE> _SCCM2012_DEPLOYTASKSEQUENCE;
		
		private EntityRef<SCCM2012_GETCOLLECTIONMEMBER> _SCCM2012_GETCOLLECTIONMEMBER;
		
		private EntityRef<SCCM2012_GETDEPLOYMENTSTATUS> _SCCM2012_GETDEPLOYMENTSTATUS;
		
		private EntityRef<SCCM2012_PERFORMCLIENTACTION> _SCCM2012_PERFORMCLIENTACTION;
		
		private EntityRef<SCCM2012_UPDCOLLECTIONMEMBERSHIP> _SCCM2012_UPDCOLLECTIONMEMBERSHIP;
		
		private EntityRef<SCOM2007_CREATEALERT> _SCOM2007_CREATEALERT;
		
		private EntityRef<SCOM2007_GETALERTS> _SCOM2007_GETALERTS;
		
		private EntityRef<SCOM2007_GETMONITORS> _SCOM2007_GETMONITORS;
		
		private EntityRef<SCOM2007_MONALERT> _SCOM2007_MONALERT;
		
		private EntityRef<SCOM2007_MONHEALTH> _SCOM2007_MONHEALTH;
		
		private EntityRef<SCOM2007_SCHEDMAINT> _SCOM2007_SCHEDMAINT;
		
		private EntityRef<SCOM2007_STOPMAINT> _SCOM2007_STOPMAINT;
		
		private EntityRef<SCOM2007_UPDATEALERT> _SCOM2007_UPDATEALERT;
		
		private EntityRef<SCOM2012_CREATEALERT> _SCOM2012_CREATEALERT;
		
		private EntityRef<SCOM2012_GETALERTS> _SCOM2012_GETALERTS;
		
		private EntityRef<SCOM2012_GETMONITORS> _SCOM2012_GETMONITORS;
		
		private EntityRef<SCOM2012_MONALERT> _SCOM2012_MONALERT;
		
		private EntityRef<SCOM2012_MONHEALTH> _SCOM2012_MONHEALTH;
		
		private EntityRef<SCOM2012_SCHEDMAINT> _SCOM2012_SCHEDMAINT;
		
		private EntityRef<SCOM2012_STOPMAINT> _SCOM2012_STOPMAINT;
		
		private EntityRef<SCOM2012_UPDATEALERT> _SCOM2012_UPDATEALERT;
		
		private EntityRef<SCSM2012_CREATEOBJECT> _SCSM2012_CREATEOBJECT;
		
		private EntityRef<SCSM2012_CREATEREL> _SCSM2012_CREATEREL;
		
		private EntityRef<SCSM2012_CREATERELOBJ> _SCSM2012_CREATERELOBJ;
		
		private EntityRef<SCSM2012_CRTCHGTMP> _SCSM2012_CRTCHGTMP;
		
		private EntityRef<SCSM2012_CRTINCTMP> _SCSM2012_CRTINCTMP;
		
		private EntityRef<SCSM2012_DELETEREL> _SCSM2012_DELETEREL;
		
		private EntityRef<SCSM2012_GETACT> _SCSM2012_GETACT;
		
		private EntityRef<SCSM2012_GETOBJECT> _SCSM2012_GETOBJECT;
		
		private EntityRef<SCSM2012_GETRELOBJ> _SCSM2012_GETRELOBJ;
		
		private EntityRef<SCSM2012_MONOBJECT> _SCSM2012_MONOBJECT;
		
		private EntityRef<SCSM2012_UPDATEACT> _SCSM2012_UPDATEACT;
		
		private EntityRef<SCSM2012_UPDATEATTACH> _SCSM2012_UPDATEATTACH;
		
		private EntityRef<SCSM2012_UPDATEOBJECT> _SCSM2012_UPDATEOBJECT;
		
		private EntityRef<SSH_RUNCOMMAND> _SSH_RUNCOMMAND;
		
		private EntityRef<STATUS_SCHEDULE> _STATUS_SCHEDULE;
		
		private EntityRef<TASK_APPLY_XSLT> _TASK_APPLY_XSLT;
		
		private EntityRef<TASK_COMPARE> _TASK_COMPARE;
		
		private EntityRef<TASK_COMPRESS> _TASK_COMPRESS;
		
		private EntityRef<TASK_COMPUTERIP> _TASK_COMPUTERIP;
		
		private EntityRef<TASK_DIALUPNETWORKING> _TASK_DIALUPNETWORKING;
		
		private EntityRef<TASK_DIALUPNETWORKINGSTATUS> _TASK_DIALUPNETWORKINGSTATUS;
		
		private EntityRef<TASK_DISCONNECTNETWORKPATH> _TASK_DISCONNECTNETWORKPATH;
		
		private EntityRef<TASK_EMAIL> _TASK_EMAIL;
		
		private EntityRef<TASK_ENDPROCESS> _TASK_ENDPROCESS;
		
		private EntityRef<TASK_FILEMANAGEMENT> _TASK_FILEMANAGEMENT;
		
		private EntitySet<TASK_FILEMANAGEMENTRENAME> _TASK_FILEMANAGEMENTRENAME;
		
		private EntityRef<TASK_FORMATDATE> _TASK_FORMATDATE;
		
		private EntityRef<TASK_GETDISKSPACESTATUS> _TASK_GETDISKSPACESTATUS;
		
		private EntityRef<TASK_INTERNETSTATUS> _TASK_INTERNETSTATUS;
		
		private EntityRef<TASK_JUNCTION> _TASK_JUNCTION;
		
		private EntityRef<TASK_MAPNETWORKPATH> _TASK_MAPNETWORKPATH;
		
		private EntityRef<TASK_MAPVALUES> _TASK_MAPVALUES;
		
		private EntityRef<TASK_MESSAGEEVENTLOG> _TASK_MESSAGEEVENTLOG;
		
		private EntityRef<TASK_PROCESSSTATUS> _TASK_PROCESSSTATUS;
		
		private EntityRef<TASK_QUERY_XML> _TASK_QUERY_XML;
		
		private EntityRef<TASK_QUERYDATABASE> _TASK_QUERYDATABASE;
		
		private EntityRef<TASK_QUERYWMI> _TASK_QUERYWMI;
		
		private EntityRef<TASK_RANDOM_STRING> _TASK_RANDOM_STRING;
		
		private EntityRef<TASK_READTEXTLOG> _TASK_READTEXTLOG;
		
		private EntityRef<TASK_RUNPROGRAM> _TASK_RUNPROGRAM;
		
		private EntityRef<TASK_SAVEEVENTLOGENTRIES> _TASK_SAVEEVENTLOGENTRIES;
		
		private EntityRef<TASK_SERVICESTATUS> _TASK_SERVICESTATUS;
		
		private EntityRef<TASK_SNMPGETVARIABLE> _TASK_SNMPGETVARIABLE;
		
		private EntityRef<TASK_SNMPSENDTRAP> _TASK_SNMPSENDTRAP;
		
		private EntityRef<TASK_SNMPSETVARIABLE> _TASK_SNMPSETVARIABLE;
		
		private EntityRef<TASK_STARTSTOPSERVICE> _TASK_STARTSTOPSERVICE;
		
		private EntityRef<TASK_SYSLOG> _TASK_SYSLOG;
		
		private EntityRef<TASK_SYSTEMRESTART> _TASK_SYSTEMRESTART;
		
		private EntityRef<TASK_TELEPHONYDIAL> _TASK_TELEPHONYDIAL;
		
		private EntityRef<TASK_TELEPHONYEND> _TASK_TELEPHONYEND;
		
		private EntityRef<TASK_TELEPHONYPROCESS> _TASK_TELEPHONYPROCESS;
		
		private EntityRef<TASK_WEBPAGE> _TASK_WEBPAGE;
		
		private EntityRef<TASK_WRITETODATABASE> _TASK_WRITETODATABASE;
		
		private EntitySet<TASK_WRITETODATABASE_DATA> _TASK_WRITETODATABASE_DATA;
		
		private EntitySet<TELEPHONY_SELECTEDLINES> _TELEPHONY_SELECTEDLINES;
		
		private EntityRef<WS_INVOKE> _WS_INVOKE;
		
		private EntityRef<OBJECTTYPES> _OBJECTTYPES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnParentIDChanging(System.Guid value);
    partial void OnParentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPositionXChanging(System.Nullable<int> value);
    partial void OnPositionXChanged();
    partial void OnPositionYChanging(System.Nullable<int> value);
    partial void OnPositionYChanged();
    partial void OnObjectTypeChanging(System.Guid value);
    partial void OnObjectTypeChanged();
    partial void OnSubTypeChanging(string value);
    partial void OnSubTypeChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnFlagsChanging(System.Nullable<int> value);
    partial void OnFlagsChanged();
    partial void OnASC_UseServiceSecurityChanging(System.Nullable<bool> value);
    partial void OnASC_UseServiceSecurityChanged();
    partial void OnASC_ThisAccountChanging(System.Nullable<bool> value);
    partial void OnASC_ThisAccountChanged();
    partial void OnASC_UsernameChanging(string value);
    partial void OnASC_UsernameChanged();
    partial void OnASC_PasswordChanging(string value);
    partial void OnASC_PasswordChanged();
    partial void OnHasExtendersChanging(System.Nullable<bool> value);
    partial void OnHasExtendersChanged();
    partial void OnCreationTimeChanging(System.DateTime value);
    partial void OnCreationTimeChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnLastModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedChanged();
    partial void OnLastModifiedByChanging(string value);
    partial void OnLastModifiedByChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnSavingsChanging(System.Nullable<decimal> value);
    partial void OnSavingsChanged();
    partial void OnNumberChanging(System.Nullable<short> value);
    partial void OnNumberChanged();
    partial void OnAlternateDisplayDataChanging(string value);
    partial void OnAlternateDisplayDataChanged();
    partial void OnASW_ObjectTimeoutChanging(System.Nullable<int> value);
    partial void OnASW_ObjectTimeoutChanged();
    partial void OnASW_NotifyOnFailChanging(System.Nullable<bool> value);
    partial void OnASW_NotifyOnFailChanged();
    partial void OnFlattenChanging(System.Nullable<bool> value);
    partial void OnFlattenChanged();
    partial void OnFlatUseLineBreakChanging(System.Nullable<bool> value);
    partial void OnFlatUseLineBreakChanged();
    partial void OnFlatUseCSVChanging(System.Nullable<bool> value);
    partial void OnFlatUseCSVChanged();
    partial void OnFlatUseCustomSepChanging(System.Nullable<bool> value);
    partial void OnFlatUseCustomSepChanged();
    partial void OnFlatCustomSepChanging(string value);
    partial void OnFlatCustomSepChanged();
    #endregion
		
		public OBJECTS()
		{
			this._COUNTER_STATUS = default(EntityRef<COUNTER_STATUS>);
			this._EMAIL_ATTACHMENTS = new EntitySet<EMAIL_ATTACHMENTS>(new Action<EMAIL_ATTACHMENTS>(this.attach_EMAIL_ATTACHMENTS), new Action<EMAIL_ATTACHMENTS>(this.detach_EMAIL_ATTACHMENTS));
			this._EMAIL_RECIPIENTS = new EntitySet<EMAIL_RECIPIENTS>(new Action<EMAIL_RECIPIENTS>(this.attach_EMAIL_RECIPIENTS), new Action<EMAIL_RECIPIENTS>(this.detach_EMAIL_RECIPIENTS));
			this._ENCRYPTION_RUNDECRYPTION = default(EntityRef<ENCRYPTION_RUNDECRYPTION>);
			this._ENCRYPTION_RUNENCRYPTION = default(EntityRef<ENCRYPTION_RUNENCRYPTION>);
			this._EVENT_DATETIME = default(EntityRef<EVENT_DATETIME>);
			this._EVENT_DISKSPACE = default(EntityRef<EVENT_DISKSPACE>);
			this._EVENT_DISKSPACE_DRIVEINFO = new EntitySet<EVENT_DISKSPACE_DRIVEINFO>(new Action<EVENT_DISKSPACE_DRIVEINFO>(this.attach_EVENT_DISKSPACE_DRIVEINFO), new Action<EVENT_DISKSPACE_DRIVEINFO>(this.detach_EVENT_DISKSPACE_DRIVEINFO));
			this._EVENT_EVENTLOG = default(EntityRef<EVENT_EVENTLOG>);
			this._EVENT_EVENTLOGFILTER = new EntitySet<EVENT_EVENTLOGFILTER>(new Action<EVENT_EVENTLOGFILTER>(this.attach_EVENT_EVENTLOGFILTER), new Action<EVENT_EVENTLOGFILTER>(this.detach_EVENT_EVENTLOGFILTER));
			this._EVENT_MONITORCOMPUTERIP = default(EntityRef<EVENT_MONITORCOMPUTERIP>);
			this._EVENT_MONITORINTERNET = default(EntityRef<EVENT_MONITORINTERNET>);
			this._EVENT_PROCESS = default(EntityRef<EVENT_PROCESS>);
			this._EVENT_SERVICE = default(EntityRef<EVENT_SERVICE>);
			this._EVENT_SERVICESTARTED = default(EntityRef<EVENT_SERVICESTARTED>);
			this._EVENT_SNMPMONITORTRAP = default(EntityRef<EVENT_SNMPMONITORTRAP>);
			this._EVENT_WMI = default(EntityRef<EVENT_WMI>);
			this._FM_COPYFILE = default(EntityRef<FM_COPYFILE>);
			this._FM_CREATEFOLDER = default(EntityRef<FM_CREATEFOLDER>);
			this._FM_DELETEFILE = default(EntityRef<FM_DELETEFILE>);
			this._FM_DELETEFOLDER = default(EntityRef<FM_DELETEFOLDER>);
			this._FM_FILEMONITOR = default(EntityRef<FM_FILEMONITOR>);
			this._FM_FOLDERMONITOR = default(EntityRef<FM_FOLDERMONITOR>);
			this._FM_GETFILESTATUS = default(EntityRef<FM_GETFILESTATUS>);
			this._FM_MOVEFILE = default(EntityRef<FM_MOVEFILE>);
			this._FM_MOVEFOLDER = default(EntityRef<FM_MOVEFOLDER>);
			this._FM_RENAMEFILE = default(EntityRef<FM_RENAMEFILE>);
			this._HP_ILO_CMD = default(EntityRef<HP_ILO_CMD>);
			this._HP_OA_CMD = default(EntityRef<HP_OA_CMD>);
			this._INTERNETSTATUS_CLOSE = new EntitySet<INTERNETSTATUS_CLOSE>(new Action<INTERNETSTATUS_CLOSE>(this.attach_INTERNETSTATUS_CLOSE), new Action<INTERNETSTATUS_CLOSE>(this.detach_INTERNETSTATUS_CLOSE));
			this._INTERNETSTATUS_OPENPORT = new EntitySet<INTERNETSTATUS_OPENPORT>(new Action<INTERNETSTATUS_OPENPORT>(this.attach_INTERNETSTATUS_OPENPORT), new Action<INTERNETSTATUS_OPENPORT>(this.detach_INTERNETSTATUS_OPENPORT));
			this._INTERNETSTATUS_RECEIVE = new EntitySet<INTERNETSTATUS_RECEIVE>(new Action<INTERNETSTATUS_RECEIVE>(this.attach_INTERNETSTATUS_RECEIVE), new Action<INTERNETSTATUS_RECEIVE>(this.detach_INTERNETSTATUS_RECEIVE));
			this._INTERNETSTATUS_SEND = new EntitySet<INTERNETSTATUS_SEND>(new Action<INTERNETSTATUS_SEND>(this.attach_INTERNETSTATUS_SEND), new Action<INTERNETSTATUS_SEND>(this.detach_INTERNETSTATUS_SEND));
			this._MODIFY_COUNTER = default(EntityRef<MODIFY_COUNTER>);
			this._MT_APPENDLINE = default(EntityRef<MT_APPENDLINE>);
			this._MT_DELETELINE = default(EntityRef<MT_DELETELINE>);
			this._MT_FINDTEXT = default(EntityRef<MT_FINDTEXT>);
			this._MT_GETLINES = default(EntityRef<MT_GETLINES>);
			this._MT_INSERTLINE = default(EntityRef<MT_INSERTLINE>);
			this._MT_READLINE = default(EntityRef<MT_READLINE>);
			this._MT_SEARCHANDREPLACE = default(EntityRef<MT_SEARCHANDREPLACE>);
			this._OBJECTINSTANCES = new EntitySet<OBJECTINSTANCES>(new Action<OBJECTINSTANCES>(this.attach_OBJECTINSTANCES), new Action<OBJECTINSTANCES>(this.detach_OBJECTINSTANCES));
			this._OBJECTLOOPING = default(EntityRef<OBJECTLOOPING>);
			this._RUNDOTNETSCRIPT = default(EntityRef<RUNDOTNETSCRIPT>);
			this._SCCM2007_ADDCOMPUTER = default(EntityRef<SCCM2007_ADDCOMPUTER>);
			this._SCCM2007_ADVERTISETASK = default(EntityRef<SCCM2007_ADVERTISETASK>);
			this._SCCM2007_CREATEADVERTISEMENT = default(EntityRef<SCCM2007_CREATEADVERTISEMENT>);
			this._SCCM2007_CREATECOLLECTION = default(EntityRef<SCCM2007_CREATECOLLECTION>);
			this._SCCM2007_DEL_COLLECTION = default(EntityRef<SCCM2007_DEL_COLLECTION>);
			this._SCCM2007_DEPLOYSOFTWAREUPDATE = default(EntityRef<SCCM2007_DEPLOYSOFTWAREUPDATE>);
			this._SCCM2007_GETADVSTATUS = default(EntityRef<SCCM2007_GETADVSTATUS>);
			this._SCCM2007_GETCOLLECTION = default(EntityRef<SCCM2007_GETCOLLECTION>);
			this._SCCM2007_GETSUCOMPLIANCE = default(EntityRef<SCCM2007_GETSUCOMPLIANCE>);
			this._SCCM2007_REFRESHCLIENT = default(EntityRef<SCCM2007_REFRESHCLIENT>);
			this._SCCM2007_REFRESHCOLLECTION = default(EntityRef<SCCM2007_REFRESHCOLLECTION>);
			this._SCCM2012_ADDCOLLECTIONRULE = default(EntityRef<SCCM2012_ADDCOLLECTIONRULE>);
			this._SCCM2012_CREATECOLLECTION = default(EntityRef<SCCM2012_CREATECOLLECTION>);
			this._SCCM2012_DELCOLLECTION = default(EntityRef<SCCM2012_DELCOLLECTION>);
			this._SCCM2012_DELCOLLECTIONRULE = default(EntityRef<SCCM2012_DELCOLLECTIONRULE>);
			this._SCCM2012_DEPLOYAPPLICATION = default(EntityRef<SCCM2012_DEPLOYAPPLICATION>);
			this._SCCM2012_DEPLOYPROGRAM = default(EntityRef<SCCM2012_DEPLOYPROGRAM>);
			this._SCCM2012_DEPLOYSOFTWAREUPDATE = default(EntityRef<SCCM2012_DEPLOYSOFTWAREUPDATE>);
			this._SCCM2012_DEPLOYTASKSEQUENCE = default(EntityRef<SCCM2012_DEPLOYTASKSEQUENCE>);
			this._SCCM2012_GETCOLLECTIONMEMBER = default(EntityRef<SCCM2012_GETCOLLECTIONMEMBER>);
			this._SCCM2012_GETDEPLOYMENTSTATUS = default(EntityRef<SCCM2012_GETDEPLOYMENTSTATUS>);
			this._SCCM2012_PERFORMCLIENTACTION = default(EntityRef<SCCM2012_PERFORMCLIENTACTION>);
			this._SCCM2012_UPDCOLLECTIONMEMBERSHIP = default(EntityRef<SCCM2012_UPDCOLLECTIONMEMBERSHIP>);
			this._SCOM2007_CREATEALERT = default(EntityRef<SCOM2007_CREATEALERT>);
			this._SCOM2007_GETALERTS = default(EntityRef<SCOM2007_GETALERTS>);
			this._SCOM2007_GETMONITORS = default(EntityRef<SCOM2007_GETMONITORS>);
			this._SCOM2007_MONALERT = default(EntityRef<SCOM2007_MONALERT>);
			this._SCOM2007_MONHEALTH = default(EntityRef<SCOM2007_MONHEALTH>);
			this._SCOM2007_SCHEDMAINT = default(EntityRef<SCOM2007_SCHEDMAINT>);
			this._SCOM2007_STOPMAINT = default(EntityRef<SCOM2007_STOPMAINT>);
			this._SCOM2007_UPDATEALERT = default(EntityRef<SCOM2007_UPDATEALERT>);
			this._SCOM2012_CREATEALERT = default(EntityRef<SCOM2012_CREATEALERT>);
			this._SCOM2012_GETALERTS = default(EntityRef<SCOM2012_GETALERTS>);
			this._SCOM2012_GETMONITORS = default(EntityRef<SCOM2012_GETMONITORS>);
			this._SCOM2012_MONALERT = default(EntityRef<SCOM2012_MONALERT>);
			this._SCOM2012_MONHEALTH = default(EntityRef<SCOM2012_MONHEALTH>);
			this._SCOM2012_SCHEDMAINT = default(EntityRef<SCOM2012_SCHEDMAINT>);
			this._SCOM2012_STOPMAINT = default(EntityRef<SCOM2012_STOPMAINT>);
			this._SCOM2012_UPDATEALERT = default(EntityRef<SCOM2012_UPDATEALERT>);
			this._SCSM2012_CREATEOBJECT = default(EntityRef<SCSM2012_CREATEOBJECT>);
			this._SCSM2012_CREATEREL = default(EntityRef<SCSM2012_CREATEREL>);
			this._SCSM2012_CREATERELOBJ = default(EntityRef<SCSM2012_CREATERELOBJ>);
			this._SCSM2012_CRTCHGTMP = default(EntityRef<SCSM2012_CRTCHGTMP>);
			this._SCSM2012_CRTINCTMP = default(EntityRef<SCSM2012_CRTINCTMP>);
			this._SCSM2012_DELETEREL = default(EntityRef<SCSM2012_DELETEREL>);
			this._SCSM2012_GETACT = default(EntityRef<SCSM2012_GETACT>);
			this._SCSM2012_GETOBJECT = default(EntityRef<SCSM2012_GETOBJECT>);
			this._SCSM2012_GETRELOBJ = default(EntityRef<SCSM2012_GETRELOBJ>);
			this._SCSM2012_MONOBJECT = default(EntityRef<SCSM2012_MONOBJECT>);
			this._SCSM2012_UPDATEACT = default(EntityRef<SCSM2012_UPDATEACT>);
			this._SCSM2012_UPDATEATTACH = default(EntityRef<SCSM2012_UPDATEATTACH>);
			this._SCSM2012_UPDATEOBJECT = default(EntityRef<SCSM2012_UPDATEOBJECT>);
			this._SSH_RUNCOMMAND = default(EntityRef<SSH_RUNCOMMAND>);
			this._STATUS_SCHEDULE = default(EntityRef<STATUS_SCHEDULE>);
			this._TASK_APPLY_XSLT = default(EntityRef<TASK_APPLY_XSLT>);
			this._TASK_COMPARE = default(EntityRef<TASK_COMPARE>);
			this._TASK_COMPRESS = default(EntityRef<TASK_COMPRESS>);
			this._TASK_COMPUTERIP = default(EntityRef<TASK_COMPUTERIP>);
			this._TASK_DIALUPNETWORKING = default(EntityRef<TASK_DIALUPNETWORKING>);
			this._TASK_DIALUPNETWORKINGSTATUS = default(EntityRef<TASK_DIALUPNETWORKINGSTATUS>);
			this._TASK_DISCONNECTNETWORKPATH = default(EntityRef<TASK_DISCONNECTNETWORKPATH>);
			this._TASK_EMAIL = default(EntityRef<TASK_EMAIL>);
			this._TASK_ENDPROCESS = default(EntityRef<TASK_ENDPROCESS>);
			this._TASK_FILEMANAGEMENT = default(EntityRef<TASK_FILEMANAGEMENT>);
			this._TASK_FILEMANAGEMENTRENAME = new EntitySet<TASK_FILEMANAGEMENTRENAME>(new Action<TASK_FILEMANAGEMENTRENAME>(this.attach_TASK_FILEMANAGEMENTRENAME), new Action<TASK_FILEMANAGEMENTRENAME>(this.detach_TASK_FILEMANAGEMENTRENAME));
			this._TASK_FORMATDATE = default(EntityRef<TASK_FORMATDATE>);
			this._TASK_GETDISKSPACESTATUS = default(EntityRef<TASK_GETDISKSPACESTATUS>);
			this._TASK_INTERNETSTATUS = default(EntityRef<TASK_INTERNETSTATUS>);
			this._TASK_JUNCTION = default(EntityRef<TASK_JUNCTION>);
			this._TASK_MAPNETWORKPATH = default(EntityRef<TASK_MAPNETWORKPATH>);
			this._TASK_MAPVALUES = default(EntityRef<TASK_MAPVALUES>);
			this._TASK_MESSAGEEVENTLOG = default(EntityRef<TASK_MESSAGEEVENTLOG>);
			this._TASK_PROCESSSTATUS = default(EntityRef<TASK_PROCESSSTATUS>);
			this._TASK_QUERY_XML = default(EntityRef<TASK_QUERY_XML>);
			this._TASK_QUERYDATABASE = default(EntityRef<TASK_QUERYDATABASE>);
			this._TASK_QUERYWMI = default(EntityRef<TASK_QUERYWMI>);
			this._TASK_RANDOM_STRING = default(EntityRef<TASK_RANDOM_STRING>);
			this._TASK_READTEXTLOG = default(EntityRef<TASK_READTEXTLOG>);
			this._TASK_RUNPROGRAM = default(EntityRef<TASK_RUNPROGRAM>);
			this._TASK_SAVEEVENTLOGENTRIES = default(EntityRef<TASK_SAVEEVENTLOGENTRIES>);
			this._TASK_SERVICESTATUS = default(EntityRef<TASK_SERVICESTATUS>);
			this._TASK_SNMPGETVARIABLE = default(EntityRef<TASK_SNMPGETVARIABLE>);
			this._TASK_SNMPSENDTRAP = default(EntityRef<TASK_SNMPSENDTRAP>);
			this._TASK_SNMPSETVARIABLE = default(EntityRef<TASK_SNMPSETVARIABLE>);
			this._TASK_STARTSTOPSERVICE = default(EntityRef<TASK_STARTSTOPSERVICE>);
			this._TASK_SYSLOG = default(EntityRef<TASK_SYSLOG>);
			this._TASK_SYSTEMRESTART = default(EntityRef<TASK_SYSTEMRESTART>);
			this._TASK_TELEPHONYDIAL = default(EntityRef<TASK_TELEPHONYDIAL>);
			this._TASK_TELEPHONYEND = default(EntityRef<TASK_TELEPHONYEND>);
			this._TASK_TELEPHONYPROCESS = default(EntityRef<TASK_TELEPHONYPROCESS>);
			this._TASK_WEBPAGE = default(EntityRef<TASK_WEBPAGE>);
			this._TASK_WRITETODATABASE = default(EntityRef<TASK_WRITETODATABASE>);
			this._TASK_WRITETODATABASE_DATA = new EntitySet<TASK_WRITETODATABASE_DATA>(new Action<TASK_WRITETODATABASE_DATA>(this.attach_TASK_WRITETODATABASE_DATA), new Action<TASK_WRITETODATABASE_DATA>(this.detach_TASK_WRITETODATABASE_DATA));
			this._TELEPHONY_SELECTEDLINES = new EntitySet<TELEPHONY_SELECTEDLINES>(new Action<TELEPHONY_SELECTEDLINES>(this.attach_TELEPHONY_SELECTEDLINES), new Action<TELEPHONY_SELECTEDLINES>(this.detach_TELEPHONY_SELECTEDLINES));
			this._WS_INVOKE = default(EntityRef<WS_INVOKE>);
			this._OBJECTTYPES = default(EntityRef<OBJECTTYPES>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionX", DbType="Int")]
		public System.Nullable<int> PositionX
		{
			get
			{
				return this._PositionX;
			}
			set
			{
				if ((this._PositionX != value))
				{
					this.OnPositionXChanging(value);
					this.SendPropertyChanging();
					this._PositionX = value;
					this.SendPropertyChanged("PositionX");
					this.OnPositionXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionY", DbType="Int")]
		public System.Nullable<int> PositionY
		{
			get
			{
				return this._PositionY;
			}
			set
			{
				if ((this._PositionY != value))
				{
					this.OnPositionYChanging(value);
					this.SendPropertyChanging();
					this._PositionY = value;
					this.SendPropertyChanged("PositionY");
					this.OnPositionYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					if (this._OBJECTTYPES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubType", DbType="NVarChar(200)")]
		public string SubType
		{
			get
			{
				return this._SubType;
			}
			set
			{
				if ((this._SubType != value))
				{
					this.OnSubTypeChanging(value);
					this.SendPropertyChanging();
					this._SubType = value;
					this.SendPropertyChanged("SubType");
					this.OnSubTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int")]
		public System.Nullable<int> Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASC_UseServiceSecurity", DbType="Bit")]
		public System.Nullable<bool> ASC_UseServiceSecurity
		{
			get
			{
				return this._ASC_UseServiceSecurity;
			}
			set
			{
				if ((this._ASC_UseServiceSecurity != value))
				{
					this.OnASC_UseServiceSecurityChanging(value);
					this.SendPropertyChanging();
					this._ASC_UseServiceSecurity = value;
					this.SendPropertyChanged("ASC_UseServiceSecurity");
					this.OnASC_UseServiceSecurityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASC_ThisAccount", DbType="Bit")]
		public System.Nullable<bool> ASC_ThisAccount
		{
			get
			{
				return this._ASC_ThisAccount;
			}
			set
			{
				if ((this._ASC_ThisAccount != value))
				{
					this.OnASC_ThisAccountChanging(value);
					this.SendPropertyChanging();
					this._ASC_ThisAccount = value;
					this.SendPropertyChanged("ASC_ThisAccount");
					this.OnASC_ThisAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASC_Username", DbType="NVarChar(2000)")]
		public string ASC_Username
		{
			get
			{
				return this._ASC_Username;
			}
			set
			{
				if ((this._ASC_Username != value))
				{
					this.OnASC_UsernameChanging(value);
					this.SendPropertyChanging();
					this._ASC_Username = value;
					this.SendPropertyChanged("ASC_Username");
					this.OnASC_UsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASC_Password", DbType="NVarChar(2000)")]
		public string ASC_Password
		{
			get
			{
				return this._ASC_Password;
			}
			set
			{
				if ((this._ASC_Password != value))
				{
					this.OnASC_PasswordChanging(value);
					this.SendPropertyChanging();
					this._ASC_Password = value;
					this.SendPropertyChanged("ASC_Password");
					this.OnASC_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasExtenders", DbType="Bit")]
		public System.Nullable<bool> HasExtenders
		{
			get
			{
				return this._HasExtenders;
			}
			set
			{
				if ((this._HasExtenders != value))
				{
					this.OnHasExtendersChanging(value);
					this.SendPropertyChanging();
					this._HasExtenders = value;
					this.SendPropertyChanged("HasExtenders");
					this.OnHasExtendersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="NVarChar(50)")]
		public string LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Money")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Savings", DbType="Money")]
		public System.Nullable<decimal> Savings
		{
			get
			{
				return this._Savings;
			}
			set
			{
				if ((this._Savings != value))
				{
					this.OnSavingsChanging(value);
					this.SendPropertyChanging();
					this._Savings = value;
					this.SendPropertyChanged("Savings");
					this.OnSavingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="SmallInt")]
		public System.Nullable<short> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateDisplayData", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AlternateDisplayData
		{
			get
			{
				return this._AlternateDisplayData;
			}
			set
			{
				if ((this._AlternateDisplayData != value))
				{
					this.OnAlternateDisplayDataChanging(value);
					this.SendPropertyChanging();
					this._AlternateDisplayData = value;
					this.SendPropertyChanged("AlternateDisplayData");
					this.OnAlternateDisplayDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASW_ObjectTimeout", DbType="Int")]
		public System.Nullable<int> ASW_ObjectTimeout
		{
			get
			{
				return this._ASW_ObjectTimeout;
			}
			set
			{
				if ((this._ASW_ObjectTimeout != value))
				{
					this.OnASW_ObjectTimeoutChanging(value);
					this.SendPropertyChanging();
					this._ASW_ObjectTimeout = value;
					this.SendPropertyChanged("ASW_ObjectTimeout");
					this.OnASW_ObjectTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASW_NotifyOnFail", DbType="Bit")]
		public System.Nullable<bool> ASW_NotifyOnFail
		{
			get
			{
				return this._ASW_NotifyOnFail;
			}
			set
			{
				if ((this._ASW_NotifyOnFail != value))
				{
					this.OnASW_NotifyOnFailChanging(value);
					this.SendPropertyChanging();
					this._ASW_NotifyOnFail = value;
					this.SendPropertyChanged("ASW_NotifyOnFail");
					this.OnASW_NotifyOnFailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flatten", DbType="Bit")]
		public System.Nullable<bool> Flatten
		{
			get
			{
				return this._Flatten;
			}
			set
			{
				if ((this._Flatten != value))
				{
					this.OnFlattenChanging(value);
					this.SendPropertyChanging();
					this._Flatten = value;
					this.SendPropertyChanged("Flatten");
					this.OnFlattenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatUseLineBreak", DbType="Bit")]
		public System.Nullable<bool> FlatUseLineBreak
		{
			get
			{
				return this._FlatUseLineBreak;
			}
			set
			{
				if ((this._FlatUseLineBreak != value))
				{
					this.OnFlatUseLineBreakChanging(value);
					this.SendPropertyChanging();
					this._FlatUseLineBreak = value;
					this.SendPropertyChanged("FlatUseLineBreak");
					this.OnFlatUseLineBreakChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatUseCSV", DbType="Bit")]
		public System.Nullable<bool> FlatUseCSV
		{
			get
			{
				return this._FlatUseCSV;
			}
			set
			{
				if ((this._FlatUseCSV != value))
				{
					this.OnFlatUseCSVChanging(value);
					this.SendPropertyChanging();
					this._FlatUseCSV = value;
					this.SendPropertyChanged("FlatUseCSV");
					this.OnFlatUseCSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatUseCustomSep", DbType="Bit")]
		public System.Nullable<bool> FlatUseCustomSep
		{
			get
			{
				return this._FlatUseCustomSep;
			}
			set
			{
				if ((this._FlatUseCustomSep != value))
				{
					this.OnFlatUseCustomSepChanging(value);
					this.SendPropertyChanging();
					this._FlatUseCustomSep = value;
					this.SendPropertyChanged("FlatUseCustomSep");
					this.OnFlatUseCustomSepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatCustomSep", DbType="NVarChar(2000)")]
		public string FlatCustomSep
		{
			get
			{
				return this._FlatCustomSep;
			}
			set
			{
				if ((this._FlatCustomSep != value))
				{
					this.OnFlatCustomSepChanging(value);
					this.SendPropertyChanging();
					this._FlatCustomSep = value;
					this.SendPropertyChanged("FlatCustomSep");
					this.OnFlatCustomSepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_COUNTER_STATUS", Storage="_COUNTER_STATUS", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public COUNTER_STATUS COUNTER_STATUS
		{
			get
			{
				return this._COUNTER_STATUS.Entity;
			}
			set
			{
				COUNTER_STATUS previousValue = this._COUNTER_STATUS.Entity;
				if (((previousValue != value) 
							|| (this._COUNTER_STATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTER_STATUS.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._COUNTER_STATUS.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("COUNTER_STATUS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EMAIL_ATTACHMENTS", Storage="_EMAIL_ATTACHMENTS", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<EMAIL_ATTACHMENTS> EMAIL_ATTACHMENTS
		{
			get
			{
				return this._EMAIL_ATTACHMENTS;
			}
			set
			{
				this._EMAIL_ATTACHMENTS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EMAIL_RECIPIENTS", Storage="_EMAIL_RECIPIENTS", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<EMAIL_RECIPIENTS> EMAIL_RECIPIENTS
		{
			get
			{
				return this._EMAIL_RECIPIENTS;
			}
			set
			{
				this._EMAIL_RECIPIENTS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_ENCRYPTION_RUNDECRYPTION", Storage="_ENCRYPTION_RUNDECRYPTION", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public ENCRYPTION_RUNDECRYPTION ENCRYPTION_RUNDECRYPTION
		{
			get
			{
				return this._ENCRYPTION_RUNDECRYPTION.Entity;
			}
			set
			{
				ENCRYPTION_RUNDECRYPTION previousValue = this._ENCRYPTION_RUNDECRYPTION.Entity;
				if (((previousValue != value) 
							|| (this._ENCRYPTION_RUNDECRYPTION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ENCRYPTION_RUNDECRYPTION.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._ENCRYPTION_RUNDECRYPTION.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("ENCRYPTION_RUNDECRYPTION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_ENCRYPTION_RUNENCRYPTION", Storage="_ENCRYPTION_RUNENCRYPTION", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public ENCRYPTION_RUNENCRYPTION ENCRYPTION_RUNENCRYPTION
		{
			get
			{
				return this._ENCRYPTION_RUNENCRYPTION.Entity;
			}
			set
			{
				ENCRYPTION_RUNENCRYPTION previousValue = this._ENCRYPTION_RUNENCRYPTION.Entity;
				if (((previousValue != value) 
							|| (this._ENCRYPTION_RUNENCRYPTION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ENCRYPTION_RUNENCRYPTION.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._ENCRYPTION_RUNENCRYPTION.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("ENCRYPTION_RUNENCRYPTION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_DATETIME", Storage="_EVENT_DATETIME", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public EVENT_DATETIME EVENT_DATETIME
		{
			get
			{
				return this._EVENT_DATETIME.Entity;
			}
			set
			{
				EVENT_DATETIME previousValue = this._EVENT_DATETIME.Entity;
				if (((previousValue != value) 
							|| (this._EVENT_DATETIME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EVENT_DATETIME.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._EVENT_DATETIME.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("EVENT_DATETIME");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_DISKSPACE", Storage="_EVENT_DISKSPACE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public EVENT_DISKSPACE EVENT_DISKSPACE
		{
			get
			{
				return this._EVENT_DISKSPACE.Entity;
			}
			set
			{
				EVENT_DISKSPACE previousValue = this._EVENT_DISKSPACE.Entity;
				if (((previousValue != value) 
							|| (this._EVENT_DISKSPACE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EVENT_DISKSPACE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._EVENT_DISKSPACE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("EVENT_DISKSPACE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_DISKSPACE_DRIVEINFO", Storage="_EVENT_DISKSPACE_DRIVEINFO", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<EVENT_DISKSPACE_DRIVEINFO> EVENT_DISKSPACE_DRIVEINFO
		{
			get
			{
				return this._EVENT_DISKSPACE_DRIVEINFO;
			}
			set
			{
				this._EVENT_DISKSPACE_DRIVEINFO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_EVENTLOG", Storage="_EVENT_EVENTLOG", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public EVENT_EVENTLOG EVENT_EVENTLOG
		{
			get
			{
				return this._EVENT_EVENTLOG.Entity;
			}
			set
			{
				EVENT_EVENTLOG previousValue = this._EVENT_EVENTLOG.Entity;
				if (((previousValue != value) 
							|| (this._EVENT_EVENTLOG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EVENT_EVENTLOG.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._EVENT_EVENTLOG.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("EVENT_EVENTLOG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_EVENTLOGFILTER", Storage="_EVENT_EVENTLOGFILTER", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<EVENT_EVENTLOGFILTER> EVENT_EVENTLOGFILTER
		{
			get
			{
				return this._EVENT_EVENTLOGFILTER;
			}
			set
			{
				this._EVENT_EVENTLOGFILTER.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_MONITORCOMPUTERIP", Storage="_EVENT_MONITORCOMPUTERIP", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public EVENT_MONITORCOMPUTERIP EVENT_MONITORCOMPUTERIP
		{
			get
			{
				return this._EVENT_MONITORCOMPUTERIP.Entity;
			}
			set
			{
				EVENT_MONITORCOMPUTERIP previousValue = this._EVENT_MONITORCOMPUTERIP.Entity;
				if (((previousValue != value) 
							|| (this._EVENT_MONITORCOMPUTERIP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EVENT_MONITORCOMPUTERIP.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._EVENT_MONITORCOMPUTERIP.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("EVENT_MONITORCOMPUTERIP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_MONITORINTERNET", Storage="_EVENT_MONITORINTERNET", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public EVENT_MONITORINTERNET EVENT_MONITORINTERNET
		{
			get
			{
				return this._EVENT_MONITORINTERNET.Entity;
			}
			set
			{
				EVENT_MONITORINTERNET previousValue = this._EVENT_MONITORINTERNET.Entity;
				if (((previousValue != value) 
							|| (this._EVENT_MONITORINTERNET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EVENT_MONITORINTERNET.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._EVENT_MONITORINTERNET.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("EVENT_MONITORINTERNET");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_PROCESS", Storage="_EVENT_PROCESS", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public EVENT_PROCESS EVENT_PROCESS
		{
			get
			{
				return this._EVENT_PROCESS.Entity;
			}
			set
			{
				EVENT_PROCESS previousValue = this._EVENT_PROCESS.Entity;
				if (((previousValue != value) 
							|| (this._EVENT_PROCESS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EVENT_PROCESS.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._EVENT_PROCESS.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("EVENT_PROCESS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_SERVICE", Storage="_EVENT_SERVICE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public EVENT_SERVICE EVENT_SERVICE
		{
			get
			{
				return this._EVENT_SERVICE.Entity;
			}
			set
			{
				EVENT_SERVICE previousValue = this._EVENT_SERVICE.Entity;
				if (((previousValue != value) 
							|| (this._EVENT_SERVICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EVENT_SERVICE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._EVENT_SERVICE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("EVENT_SERVICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_SERVICESTARTED", Storage="_EVENT_SERVICESTARTED", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public EVENT_SERVICESTARTED EVENT_SERVICESTARTED
		{
			get
			{
				return this._EVENT_SERVICESTARTED.Entity;
			}
			set
			{
				EVENT_SERVICESTARTED previousValue = this._EVENT_SERVICESTARTED.Entity;
				if (((previousValue != value) 
							|| (this._EVENT_SERVICESTARTED.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EVENT_SERVICESTARTED.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._EVENT_SERVICESTARTED.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("EVENT_SERVICESTARTED");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_SNMPMONITORTRAP", Storage="_EVENT_SNMPMONITORTRAP", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public EVENT_SNMPMONITORTRAP EVENT_SNMPMONITORTRAP
		{
			get
			{
				return this._EVENT_SNMPMONITORTRAP.Entity;
			}
			set
			{
				EVENT_SNMPMONITORTRAP previousValue = this._EVENT_SNMPMONITORTRAP.Entity;
				if (((previousValue != value) 
							|| (this._EVENT_SNMPMONITORTRAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EVENT_SNMPMONITORTRAP.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._EVENT_SNMPMONITORTRAP.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("EVENT_SNMPMONITORTRAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_EVENT_WMI", Storage="_EVENT_WMI", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public EVENT_WMI EVENT_WMI
		{
			get
			{
				return this._EVENT_WMI.Entity;
			}
			set
			{
				EVENT_WMI previousValue = this._EVENT_WMI.Entity;
				if (((previousValue != value) 
							|| (this._EVENT_WMI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EVENT_WMI.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._EVENT_WMI.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("EVENT_WMI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_COPYFILE", Storage="_FM_COPYFILE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public FM_COPYFILE FM_COPYFILE
		{
			get
			{
				return this._FM_COPYFILE.Entity;
			}
			set
			{
				FM_COPYFILE previousValue = this._FM_COPYFILE.Entity;
				if (((previousValue != value) 
							|| (this._FM_COPYFILE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FM_COPYFILE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._FM_COPYFILE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("FM_COPYFILE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_CREATEFOLDER", Storage="_FM_CREATEFOLDER", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public FM_CREATEFOLDER FM_CREATEFOLDER
		{
			get
			{
				return this._FM_CREATEFOLDER.Entity;
			}
			set
			{
				FM_CREATEFOLDER previousValue = this._FM_CREATEFOLDER.Entity;
				if (((previousValue != value) 
							|| (this._FM_CREATEFOLDER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FM_CREATEFOLDER.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._FM_CREATEFOLDER.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("FM_CREATEFOLDER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_DELETEFILE", Storage="_FM_DELETEFILE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public FM_DELETEFILE FM_DELETEFILE
		{
			get
			{
				return this._FM_DELETEFILE.Entity;
			}
			set
			{
				FM_DELETEFILE previousValue = this._FM_DELETEFILE.Entity;
				if (((previousValue != value) 
							|| (this._FM_DELETEFILE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FM_DELETEFILE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._FM_DELETEFILE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("FM_DELETEFILE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_DELETEFOLDER", Storage="_FM_DELETEFOLDER", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public FM_DELETEFOLDER FM_DELETEFOLDER
		{
			get
			{
				return this._FM_DELETEFOLDER.Entity;
			}
			set
			{
				FM_DELETEFOLDER previousValue = this._FM_DELETEFOLDER.Entity;
				if (((previousValue != value) 
							|| (this._FM_DELETEFOLDER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FM_DELETEFOLDER.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._FM_DELETEFOLDER.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("FM_DELETEFOLDER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_FILEMONITOR", Storage="_FM_FILEMONITOR", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public FM_FILEMONITOR FM_FILEMONITOR
		{
			get
			{
				return this._FM_FILEMONITOR.Entity;
			}
			set
			{
				FM_FILEMONITOR previousValue = this._FM_FILEMONITOR.Entity;
				if (((previousValue != value) 
							|| (this._FM_FILEMONITOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FM_FILEMONITOR.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._FM_FILEMONITOR.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("FM_FILEMONITOR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_FOLDERMONITOR", Storage="_FM_FOLDERMONITOR", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public FM_FOLDERMONITOR FM_FOLDERMONITOR
		{
			get
			{
				return this._FM_FOLDERMONITOR.Entity;
			}
			set
			{
				FM_FOLDERMONITOR previousValue = this._FM_FOLDERMONITOR.Entity;
				if (((previousValue != value) 
							|| (this._FM_FOLDERMONITOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FM_FOLDERMONITOR.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._FM_FOLDERMONITOR.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("FM_FOLDERMONITOR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_GETFILESTATUS", Storage="_FM_GETFILESTATUS", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public FM_GETFILESTATUS FM_GETFILESTATUS
		{
			get
			{
				return this._FM_GETFILESTATUS.Entity;
			}
			set
			{
				FM_GETFILESTATUS previousValue = this._FM_GETFILESTATUS.Entity;
				if (((previousValue != value) 
							|| (this._FM_GETFILESTATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FM_GETFILESTATUS.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._FM_GETFILESTATUS.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("FM_GETFILESTATUS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_MOVEFILE", Storage="_FM_MOVEFILE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public FM_MOVEFILE FM_MOVEFILE
		{
			get
			{
				return this._FM_MOVEFILE.Entity;
			}
			set
			{
				FM_MOVEFILE previousValue = this._FM_MOVEFILE.Entity;
				if (((previousValue != value) 
							|| (this._FM_MOVEFILE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FM_MOVEFILE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._FM_MOVEFILE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("FM_MOVEFILE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_MOVEFOLDER", Storage="_FM_MOVEFOLDER", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public FM_MOVEFOLDER FM_MOVEFOLDER
		{
			get
			{
				return this._FM_MOVEFOLDER.Entity;
			}
			set
			{
				FM_MOVEFOLDER previousValue = this._FM_MOVEFOLDER.Entity;
				if (((previousValue != value) 
							|| (this._FM_MOVEFOLDER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FM_MOVEFOLDER.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._FM_MOVEFOLDER.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("FM_MOVEFOLDER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_FM_RENAMEFILE", Storage="_FM_RENAMEFILE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public FM_RENAMEFILE FM_RENAMEFILE
		{
			get
			{
				return this._FM_RENAMEFILE.Entity;
			}
			set
			{
				FM_RENAMEFILE previousValue = this._FM_RENAMEFILE.Entity;
				if (((previousValue != value) 
							|| (this._FM_RENAMEFILE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FM_RENAMEFILE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._FM_RENAMEFILE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("FM_RENAMEFILE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_HP_ILO_CMD", Storage="_HP_ILO_CMD", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public HP_ILO_CMD HP_ILO_CMD
		{
			get
			{
				return this._HP_ILO_CMD.Entity;
			}
			set
			{
				HP_ILO_CMD previousValue = this._HP_ILO_CMD.Entity;
				if (((previousValue != value) 
							|| (this._HP_ILO_CMD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HP_ILO_CMD.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._HP_ILO_CMD.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("HP_ILO_CMD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_HP_OA_CMD", Storage="_HP_OA_CMD", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public HP_OA_CMD HP_OA_CMD
		{
			get
			{
				return this._HP_OA_CMD.Entity;
			}
			set
			{
				HP_OA_CMD previousValue = this._HP_OA_CMD.Entity;
				if (((previousValue != value) 
							|| (this._HP_OA_CMD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HP_OA_CMD.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._HP_OA_CMD.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("HP_OA_CMD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_INTERNETSTATUS_CLOSE", Storage="_INTERNETSTATUS_CLOSE", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<INTERNETSTATUS_CLOSE> INTERNETSTATUS_CLOSE
		{
			get
			{
				return this._INTERNETSTATUS_CLOSE;
			}
			set
			{
				this._INTERNETSTATUS_CLOSE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_INTERNETSTATUS_OPENPORT", Storage="_INTERNETSTATUS_OPENPORT", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<INTERNETSTATUS_OPENPORT> INTERNETSTATUS_OPENPORT
		{
			get
			{
				return this._INTERNETSTATUS_OPENPORT;
			}
			set
			{
				this._INTERNETSTATUS_OPENPORT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_INTERNETSTATUS_RECEIVE", Storage="_INTERNETSTATUS_RECEIVE", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<INTERNETSTATUS_RECEIVE> INTERNETSTATUS_RECEIVE
		{
			get
			{
				return this._INTERNETSTATUS_RECEIVE;
			}
			set
			{
				this._INTERNETSTATUS_RECEIVE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_INTERNETSTATUS_SEND", Storage="_INTERNETSTATUS_SEND", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<INTERNETSTATUS_SEND> INTERNETSTATUS_SEND
		{
			get
			{
				return this._INTERNETSTATUS_SEND;
			}
			set
			{
				this._INTERNETSTATUS_SEND.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_MODIFY_COUNTER", Storage="_MODIFY_COUNTER", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public MODIFY_COUNTER MODIFY_COUNTER
		{
			get
			{
				return this._MODIFY_COUNTER.Entity;
			}
			set
			{
				MODIFY_COUNTER previousValue = this._MODIFY_COUNTER.Entity;
				if (((previousValue != value) 
							|| (this._MODIFY_COUNTER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MODIFY_COUNTER.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._MODIFY_COUNTER.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("MODIFY_COUNTER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_MT_APPENDLINE", Storage="_MT_APPENDLINE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public MT_APPENDLINE MT_APPENDLINE
		{
			get
			{
				return this._MT_APPENDLINE.Entity;
			}
			set
			{
				MT_APPENDLINE previousValue = this._MT_APPENDLINE.Entity;
				if (((previousValue != value) 
							|| (this._MT_APPENDLINE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MT_APPENDLINE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._MT_APPENDLINE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("MT_APPENDLINE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_MT_DELETELINE", Storage="_MT_DELETELINE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public MT_DELETELINE MT_DELETELINE
		{
			get
			{
				return this._MT_DELETELINE.Entity;
			}
			set
			{
				MT_DELETELINE previousValue = this._MT_DELETELINE.Entity;
				if (((previousValue != value) 
							|| (this._MT_DELETELINE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MT_DELETELINE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._MT_DELETELINE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("MT_DELETELINE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_MT_FINDTEXT", Storage="_MT_FINDTEXT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public MT_FINDTEXT MT_FINDTEXT
		{
			get
			{
				return this._MT_FINDTEXT.Entity;
			}
			set
			{
				MT_FINDTEXT previousValue = this._MT_FINDTEXT.Entity;
				if (((previousValue != value) 
							|| (this._MT_FINDTEXT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MT_FINDTEXT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._MT_FINDTEXT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("MT_FINDTEXT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_MT_GETLINES", Storage="_MT_GETLINES", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public MT_GETLINES MT_GETLINES
		{
			get
			{
				return this._MT_GETLINES.Entity;
			}
			set
			{
				MT_GETLINES previousValue = this._MT_GETLINES.Entity;
				if (((previousValue != value) 
							|| (this._MT_GETLINES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MT_GETLINES.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._MT_GETLINES.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("MT_GETLINES");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_MT_INSERTLINE", Storage="_MT_INSERTLINE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public MT_INSERTLINE MT_INSERTLINE
		{
			get
			{
				return this._MT_INSERTLINE.Entity;
			}
			set
			{
				MT_INSERTLINE previousValue = this._MT_INSERTLINE.Entity;
				if (((previousValue != value) 
							|| (this._MT_INSERTLINE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MT_INSERTLINE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._MT_INSERTLINE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("MT_INSERTLINE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_MT_READLINE", Storage="_MT_READLINE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public MT_READLINE MT_READLINE
		{
			get
			{
				return this._MT_READLINE.Entity;
			}
			set
			{
				MT_READLINE previousValue = this._MT_READLINE.Entity;
				if (((previousValue != value) 
							|| (this._MT_READLINE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MT_READLINE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._MT_READLINE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("MT_READLINE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_MT_SEARCHANDREPLACE", Storage="_MT_SEARCHANDREPLACE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public MT_SEARCHANDREPLACE MT_SEARCHANDREPLACE
		{
			get
			{
				return this._MT_SEARCHANDREPLACE.Entity;
			}
			set
			{
				MT_SEARCHANDREPLACE previousValue = this._MT_SEARCHANDREPLACE.Entity;
				if (((previousValue != value) 
							|| (this._MT_SEARCHANDREPLACE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MT_SEARCHANDREPLACE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._MT_SEARCHANDREPLACE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("MT_SEARCHANDREPLACE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_OBJECTINSTANCES", Storage="_OBJECTINSTANCES", ThisKey="UniqueID", OtherKey="ObjectID")]
		public EntitySet<OBJECTINSTANCES> OBJECTINSTANCES
		{
			get
			{
				return this._OBJECTINSTANCES;
			}
			set
			{
				this._OBJECTINSTANCES.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_OBJECTLOOPING", Storage="_OBJECTLOOPING", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public OBJECTLOOPING OBJECTLOOPING
		{
			get
			{
				return this._OBJECTLOOPING.Entity;
			}
			set
			{
				OBJECTLOOPING previousValue = this._OBJECTLOOPING.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTLOOPING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTLOOPING.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._OBJECTLOOPING.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("OBJECTLOOPING");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_RUNDOTNETSCRIPT", Storage="_RUNDOTNETSCRIPT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public RUNDOTNETSCRIPT RUNDOTNETSCRIPT
		{
			get
			{
				return this._RUNDOTNETSCRIPT.Entity;
			}
			set
			{
				RUNDOTNETSCRIPT previousValue = this._RUNDOTNETSCRIPT.Entity;
				if (((previousValue != value) 
							|| (this._RUNDOTNETSCRIPT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RUNDOTNETSCRIPT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._RUNDOTNETSCRIPT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("RUNDOTNETSCRIPT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_ADDCOMPUTER", Storage="_SCCM2007_ADDCOMPUTER", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2007_ADDCOMPUTER SCCM2007_ADDCOMPUTER
		{
			get
			{
				return this._SCCM2007_ADDCOMPUTER.Entity;
			}
			set
			{
				SCCM2007_ADDCOMPUTER previousValue = this._SCCM2007_ADDCOMPUTER.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2007_ADDCOMPUTER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2007_ADDCOMPUTER.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2007_ADDCOMPUTER.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2007_ADDCOMPUTER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_ADVERTISETASK", Storage="_SCCM2007_ADVERTISETASK", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2007_ADVERTISETASK SCCM2007_ADVERTISETASK
		{
			get
			{
				return this._SCCM2007_ADVERTISETASK.Entity;
			}
			set
			{
				SCCM2007_ADVERTISETASK previousValue = this._SCCM2007_ADVERTISETASK.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2007_ADVERTISETASK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2007_ADVERTISETASK.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2007_ADVERTISETASK.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2007_ADVERTISETASK");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_CREATEADVERTISEMENT", Storage="_SCCM2007_CREATEADVERTISEMENT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2007_CREATEADVERTISEMENT SCCM2007_CREATEADVERTISEMENT
		{
			get
			{
				return this._SCCM2007_CREATEADVERTISEMENT.Entity;
			}
			set
			{
				SCCM2007_CREATEADVERTISEMENT previousValue = this._SCCM2007_CREATEADVERTISEMENT.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2007_CREATEADVERTISEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2007_CREATEADVERTISEMENT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2007_CREATEADVERTISEMENT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2007_CREATEADVERTISEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_CREATECOLLECTION", Storage="_SCCM2007_CREATECOLLECTION", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2007_CREATECOLLECTION SCCM2007_CREATECOLLECTION
		{
			get
			{
				return this._SCCM2007_CREATECOLLECTION.Entity;
			}
			set
			{
				SCCM2007_CREATECOLLECTION previousValue = this._SCCM2007_CREATECOLLECTION.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2007_CREATECOLLECTION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2007_CREATECOLLECTION.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2007_CREATECOLLECTION.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2007_CREATECOLLECTION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_DEL_COLLECTION", Storage="_SCCM2007_DEL_COLLECTION", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2007_DEL_COLLECTION SCCM2007_DEL_COLLECTION
		{
			get
			{
				return this._SCCM2007_DEL_COLLECTION.Entity;
			}
			set
			{
				SCCM2007_DEL_COLLECTION previousValue = this._SCCM2007_DEL_COLLECTION.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2007_DEL_COLLECTION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2007_DEL_COLLECTION.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2007_DEL_COLLECTION.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2007_DEL_COLLECTION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_DEPLOYSOFTWAREUPDATE", Storage="_SCCM2007_DEPLOYSOFTWAREUPDATE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2007_DEPLOYSOFTWAREUPDATE SCCM2007_DEPLOYSOFTWAREUPDATE
		{
			get
			{
				return this._SCCM2007_DEPLOYSOFTWAREUPDATE.Entity;
			}
			set
			{
				SCCM2007_DEPLOYSOFTWAREUPDATE previousValue = this._SCCM2007_DEPLOYSOFTWAREUPDATE.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2007_DEPLOYSOFTWAREUPDATE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2007_DEPLOYSOFTWAREUPDATE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2007_DEPLOYSOFTWAREUPDATE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2007_DEPLOYSOFTWAREUPDATE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_GETADVSTATUS", Storage="_SCCM2007_GETADVSTATUS", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2007_GETADVSTATUS SCCM2007_GETADVSTATUS
		{
			get
			{
				return this._SCCM2007_GETADVSTATUS.Entity;
			}
			set
			{
				SCCM2007_GETADVSTATUS previousValue = this._SCCM2007_GETADVSTATUS.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2007_GETADVSTATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2007_GETADVSTATUS.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2007_GETADVSTATUS.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2007_GETADVSTATUS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_GETCOLLECTION", Storage="_SCCM2007_GETCOLLECTION", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2007_GETCOLLECTION SCCM2007_GETCOLLECTION
		{
			get
			{
				return this._SCCM2007_GETCOLLECTION.Entity;
			}
			set
			{
				SCCM2007_GETCOLLECTION previousValue = this._SCCM2007_GETCOLLECTION.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2007_GETCOLLECTION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2007_GETCOLLECTION.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2007_GETCOLLECTION.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2007_GETCOLLECTION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_GETSUCOMPLIANCE", Storage="_SCCM2007_GETSUCOMPLIANCE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2007_GETSUCOMPLIANCE SCCM2007_GETSUCOMPLIANCE
		{
			get
			{
				return this._SCCM2007_GETSUCOMPLIANCE.Entity;
			}
			set
			{
				SCCM2007_GETSUCOMPLIANCE previousValue = this._SCCM2007_GETSUCOMPLIANCE.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2007_GETSUCOMPLIANCE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2007_GETSUCOMPLIANCE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2007_GETSUCOMPLIANCE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2007_GETSUCOMPLIANCE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_REFRESHCLIENT", Storage="_SCCM2007_REFRESHCLIENT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2007_REFRESHCLIENT SCCM2007_REFRESHCLIENT
		{
			get
			{
				return this._SCCM2007_REFRESHCLIENT.Entity;
			}
			set
			{
				SCCM2007_REFRESHCLIENT previousValue = this._SCCM2007_REFRESHCLIENT.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2007_REFRESHCLIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2007_REFRESHCLIENT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2007_REFRESHCLIENT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2007_REFRESHCLIENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_REFRESHCOLLECTION", Storage="_SCCM2007_REFRESHCOLLECTION", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2007_REFRESHCOLLECTION SCCM2007_REFRESHCOLLECTION
		{
			get
			{
				return this._SCCM2007_REFRESHCOLLECTION.Entity;
			}
			set
			{
				SCCM2007_REFRESHCOLLECTION previousValue = this._SCCM2007_REFRESHCOLLECTION.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2007_REFRESHCOLLECTION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2007_REFRESHCOLLECTION.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2007_REFRESHCOLLECTION.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2007_REFRESHCOLLECTION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_ADDCOLLECTIONRULE", Storage="_SCCM2012_ADDCOLLECTIONRULE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2012_ADDCOLLECTIONRULE SCCM2012_ADDCOLLECTIONRULE
		{
			get
			{
				return this._SCCM2012_ADDCOLLECTIONRULE.Entity;
			}
			set
			{
				SCCM2012_ADDCOLLECTIONRULE previousValue = this._SCCM2012_ADDCOLLECTIONRULE.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2012_ADDCOLLECTIONRULE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2012_ADDCOLLECTIONRULE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2012_ADDCOLLECTIONRULE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2012_ADDCOLLECTIONRULE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_CREATECOLLECTION", Storage="_SCCM2012_CREATECOLLECTION", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2012_CREATECOLLECTION SCCM2012_CREATECOLLECTION
		{
			get
			{
				return this._SCCM2012_CREATECOLLECTION.Entity;
			}
			set
			{
				SCCM2012_CREATECOLLECTION previousValue = this._SCCM2012_CREATECOLLECTION.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2012_CREATECOLLECTION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2012_CREATECOLLECTION.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2012_CREATECOLLECTION.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2012_CREATECOLLECTION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_DELCOLLECTION", Storage="_SCCM2012_DELCOLLECTION", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2012_DELCOLLECTION SCCM2012_DELCOLLECTION
		{
			get
			{
				return this._SCCM2012_DELCOLLECTION.Entity;
			}
			set
			{
				SCCM2012_DELCOLLECTION previousValue = this._SCCM2012_DELCOLLECTION.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2012_DELCOLLECTION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2012_DELCOLLECTION.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2012_DELCOLLECTION.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2012_DELCOLLECTION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_DELCOLLECTIONRULE", Storage="_SCCM2012_DELCOLLECTIONRULE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2012_DELCOLLECTIONRULE SCCM2012_DELCOLLECTIONRULE
		{
			get
			{
				return this._SCCM2012_DELCOLLECTIONRULE.Entity;
			}
			set
			{
				SCCM2012_DELCOLLECTIONRULE previousValue = this._SCCM2012_DELCOLLECTIONRULE.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2012_DELCOLLECTIONRULE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2012_DELCOLLECTIONRULE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2012_DELCOLLECTIONRULE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2012_DELCOLLECTIONRULE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_DEPLOYAPPLICATION", Storage="_SCCM2012_DEPLOYAPPLICATION", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2012_DEPLOYAPPLICATION SCCM2012_DEPLOYAPPLICATION
		{
			get
			{
				return this._SCCM2012_DEPLOYAPPLICATION.Entity;
			}
			set
			{
				SCCM2012_DEPLOYAPPLICATION previousValue = this._SCCM2012_DEPLOYAPPLICATION.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2012_DEPLOYAPPLICATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2012_DEPLOYAPPLICATION.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2012_DEPLOYAPPLICATION.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2012_DEPLOYAPPLICATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_DEPLOYPROGRAM", Storage="_SCCM2012_DEPLOYPROGRAM", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2012_DEPLOYPROGRAM SCCM2012_DEPLOYPROGRAM
		{
			get
			{
				return this._SCCM2012_DEPLOYPROGRAM.Entity;
			}
			set
			{
				SCCM2012_DEPLOYPROGRAM previousValue = this._SCCM2012_DEPLOYPROGRAM.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2012_DEPLOYPROGRAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2012_DEPLOYPROGRAM.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2012_DEPLOYPROGRAM.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2012_DEPLOYPROGRAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_DEPLOYSOFTWAREUPDATE", Storage="_SCCM2012_DEPLOYSOFTWAREUPDATE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2012_DEPLOYSOFTWAREUPDATE SCCM2012_DEPLOYSOFTWAREUPDATE
		{
			get
			{
				return this._SCCM2012_DEPLOYSOFTWAREUPDATE.Entity;
			}
			set
			{
				SCCM2012_DEPLOYSOFTWAREUPDATE previousValue = this._SCCM2012_DEPLOYSOFTWAREUPDATE.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2012_DEPLOYSOFTWAREUPDATE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2012_DEPLOYSOFTWAREUPDATE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2012_DEPLOYSOFTWAREUPDATE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2012_DEPLOYSOFTWAREUPDATE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_DEPLOYTASKSEQUENCE", Storage="_SCCM2012_DEPLOYTASKSEQUENCE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2012_DEPLOYTASKSEQUENCE SCCM2012_DEPLOYTASKSEQUENCE
		{
			get
			{
				return this._SCCM2012_DEPLOYTASKSEQUENCE.Entity;
			}
			set
			{
				SCCM2012_DEPLOYTASKSEQUENCE previousValue = this._SCCM2012_DEPLOYTASKSEQUENCE.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2012_DEPLOYTASKSEQUENCE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2012_DEPLOYTASKSEQUENCE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2012_DEPLOYTASKSEQUENCE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2012_DEPLOYTASKSEQUENCE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_GETCOLLECTIONMEMBER", Storage="_SCCM2012_GETCOLLECTIONMEMBER", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2012_GETCOLLECTIONMEMBER SCCM2012_GETCOLLECTIONMEMBER
		{
			get
			{
				return this._SCCM2012_GETCOLLECTIONMEMBER.Entity;
			}
			set
			{
				SCCM2012_GETCOLLECTIONMEMBER previousValue = this._SCCM2012_GETCOLLECTIONMEMBER.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2012_GETCOLLECTIONMEMBER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2012_GETCOLLECTIONMEMBER.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2012_GETCOLLECTIONMEMBER.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2012_GETCOLLECTIONMEMBER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_GETDEPLOYMENTSTATUS", Storage="_SCCM2012_GETDEPLOYMENTSTATUS", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2012_GETDEPLOYMENTSTATUS SCCM2012_GETDEPLOYMENTSTATUS
		{
			get
			{
				return this._SCCM2012_GETDEPLOYMENTSTATUS.Entity;
			}
			set
			{
				SCCM2012_GETDEPLOYMENTSTATUS previousValue = this._SCCM2012_GETDEPLOYMENTSTATUS.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2012_GETDEPLOYMENTSTATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2012_GETDEPLOYMENTSTATUS.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2012_GETDEPLOYMENTSTATUS.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2012_GETDEPLOYMENTSTATUS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_PERFORMCLIENTACTION", Storage="_SCCM2012_PERFORMCLIENTACTION", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2012_PERFORMCLIENTACTION SCCM2012_PERFORMCLIENTACTION
		{
			get
			{
				return this._SCCM2012_PERFORMCLIENTACTION.Entity;
			}
			set
			{
				SCCM2012_PERFORMCLIENTACTION previousValue = this._SCCM2012_PERFORMCLIENTACTION.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2012_PERFORMCLIENTACTION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2012_PERFORMCLIENTACTION.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2012_PERFORMCLIENTACTION.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2012_PERFORMCLIENTACTION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_UPDCOLLECTIONMEMBERSHIP", Storage="_SCCM2012_UPDCOLLECTIONMEMBERSHIP", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCCM2012_UPDCOLLECTIONMEMBERSHIP SCCM2012_UPDCOLLECTIONMEMBERSHIP
		{
			get
			{
				return this._SCCM2012_UPDCOLLECTIONMEMBERSHIP.Entity;
			}
			set
			{
				SCCM2012_UPDCOLLECTIONMEMBERSHIP previousValue = this._SCCM2012_UPDCOLLECTIONMEMBERSHIP.Entity;
				if (((previousValue != value) 
							|| (this._SCCM2012_UPDCOLLECTIONMEMBERSHIP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCCM2012_UPDCOLLECTIONMEMBERSHIP.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCCM2012_UPDCOLLECTIONMEMBERSHIP.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCCM2012_UPDCOLLECTIONMEMBERSHIP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2007_CREATEALERT", Storage="_SCOM2007_CREATEALERT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCOM2007_CREATEALERT SCOM2007_CREATEALERT
		{
			get
			{
				return this._SCOM2007_CREATEALERT.Entity;
			}
			set
			{
				SCOM2007_CREATEALERT previousValue = this._SCOM2007_CREATEALERT.Entity;
				if (((previousValue != value) 
							|| (this._SCOM2007_CREATEALERT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCOM2007_CREATEALERT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCOM2007_CREATEALERT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCOM2007_CREATEALERT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2007_GETALERTS", Storage="_SCOM2007_GETALERTS", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCOM2007_GETALERTS SCOM2007_GETALERTS
		{
			get
			{
				return this._SCOM2007_GETALERTS.Entity;
			}
			set
			{
				SCOM2007_GETALERTS previousValue = this._SCOM2007_GETALERTS.Entity;
				if (((previousValue != value) 
							|| (this._SCOM2007_GETALERTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCOM2007_GETALERTS.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCOM2007_GETALERTS.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCOM2007_GETALERTS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2007_GETMONITORS", Storage="_SCOM2007_GETMONITORS", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCOM2007_GETMONITORS SCOM2007_GETMONITORS
		{
			get
			{
				return this._SCOM2007_GETMONITORS.Entity;
			}
			set
			{
				SCOM2007_GETMONITORS previousValue = this._SCOM2007_GETMONITORS.Entity;
				if (((previousValue != value) 
							|| (this._SCOM2007_GETMONITORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCOM2007_GETMONITORS.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCOM2007_GETMONITORS.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCOM2007_GETMONITORS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2007_MONALERT", Storage="_SCOM2007_MONALERT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCOM2007_MONALERT SCOM2007_MONALERT
		{
			get
			{
				return this._SCOM2007_MONALERT.Entity;
			}
			set
			{
				SCOM2007_MONALERT previousValue = this._SCOM2007_MONALERT.Entity;
				if (((previousValue != value) 
							|| (this._SCOM2007_MONALERT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCOM2007_MONALERT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCOM2007_MONALERT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCOM2007_MONALERT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2007_MONHEALTH", Storage="_SCOM2007_MONHEALTH", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCOM2007_MONHEALTH SCOM2007_MONHEALTH
		{
			get
			{
				return this._SCOM2007_MONHEALTH.Entity;
			}
			set
			{
				SCOM2007_MONHEALTH previousValue = this._SCOM2007_MONHEALTH.Entity;
				if (((previousValue != value) 
							|| (this._SCOM2007_MONHEALTH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCOM2007_MONHEALTH.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCOM2007_MONHEALTH.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCOM2007_MONHEALTH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2007_SCHEDMAINT", Storage="_SCOM2007_SCHEDMAINT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCOM2007_SCHEDMAINT SCOM2007_SCHEDMAINT
		{
			get
			{
				return this._SCOM2007_SCHEDMAINT.Entity;
			}
			set
			{
				SCOM2007_SCHEDMAINT previousValue = this._SCOM2007_SCHEDMAINT.Entity;
				if (((previousValue != value) 
							|| (this._SCOM2007_SCHEDMAINT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCOM2007_SCHEDMAINT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCOM2007_SCHEDMAINT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCOM2007_SCHEDMAINT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2007_STOPMAINT", Storage="_SCOM2007_STOPMAINT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCOM2007_STOPMAINT SCOM2007_STOPMAINT
		{
			get
			{
				return this._SCOM2007_STOPMAINT.Entity;
			}
			set
			{
				SCOM2007_STOPMAINT previousValue = this._SCOM2007_STOPMAINT.Entity;
				if (((previousValue != value) 
							|| (this._SCOM2007_STOPMAINT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCOM2007_STOPMAINT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCOM2007_STOPMAINT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCOM2007_STOPMAINT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2007_UPDATEALERT", Storage="_SCOM2007_UPDATEALERT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCOM2007_UPDATEALERT SCOM2007_UPDATEALERT
		{
			get
			{
				return this._SCOM2007_UPDATEALERT.Entity;
			}
			set
			{
				SCOM2007_UPDATEALERT previousValue = this._SCOM2007_UPDATEALERT.Entity;
				if (((previousValue != value) 
							|| (this._SCOM2007_UPDATEALERT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCOM2007_UPDATEALERT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCOM2007_UPDATEALERT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCOM2007_UPDATEALERT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2012_CREATEALERT", Storage="_SCOM2012_CREATEALERT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCOM2012_CREATEALERT SCOM2012_CREATEALERT
		{
			get
			{
				return this._SCOM2012_CREATEALERT.Entity;
			}
			set
			{
				SCOM2012_CREATEALERT previousValue = this._SCOM2012_CREATEALERT.Entity;
				if (((previousValue != value) 
							|| (this._SCOM2012_CREATEALERT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCOM2012_CREATEALERT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCOM2012_CREATEALERT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCOM2012_CREATEALERT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2012_GETALERTS", Storage="_SCOM2012_GETALERTS", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCOM2012_GETALERTS SCOM2012_GETALERTS
		{
			get
			{
				return this._SCOM2012_GETALERTS.Entity;
			}
			set
			{
				SCOM2012_GETALERTS previousValue = this._SCOM2012_GETALERTS.Entity;
				if (((previousValue != value) 
							|| (this._SCOM2012_GETALERTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCOM2012_GETALERTS.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCOM2012_GETALERTS.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCOM2012_GETALERTS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2012_GETMONITORS", Storage="_SCOM2012_GETMONITORS", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCOM2012_GETMONITORS SCOM2012_GETMONITORS
		{
			get
			{
				return this._SCOM2012_GETMONITORS.Entity;
			}
			set
			{
				SCOM2012_GETMONITORS previousValue = this._SCOM2012_GETMONITORS.Entity;
				if (((previousValue != value) 
							|| (this._SCOM2012_GETMONITORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCOM2012_GETMONITORS.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCOM2012_GETMONITORS.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCOM2012_GETMONITORS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2012_MONALERT", Storage="_SCOM2012_MONALERT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCOM2012_MONALERT SCOM2012_MONALERT
		{
			get
			{
				return this._SCOM2012_MONALERT.Entity;
			}
			set
			{
				SCOM2012_MONALERT previousValue = this._SCOM2012_MONALERT.Entity;
				if (((previousValue != value) 
							|| (this._SCOM2012_MONALERT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCOM2012_MONALERT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCOM2012_MONALERT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCOM2012_MONALERT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2012_MONHEALTH", Storage="_SCOM2012_MONHEALTH", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCOM2012_MONHEALTH SCOM2012_MONHEALTH
		{
			get
			{
				return this._SCOM2012_MONHEALTH.Entity;
			}
			set
			{
				SCOM2012_MONHEALTH previousValue = this._SCOM2012_MONHEALTH.Entity;
				if (((previousValue != value) 
							|| (this._SCOM2012_MONHEALTH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCOM2012_MONHEALTH.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCOM2012_MONHEALTH.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCOM2012_MONHEALTH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2012_SCHEDMAINT", Storage="_SCOM2012_SCHEDMAINT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCOM2012_SCHEDMAINT SCOM2012_SCHEDMAINT
		{
			get
			{
				return this._SCOM2012_SCHEDMAINT.Entity;
			}
			set
			{
				SCOM2012_SCHEDMAINT previousValue = this._SCOM2012_SCHEDMAINT.Entity;
				if (((previousValue != value) 
							|| (this._SCOM2012_SCHEDMAINT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCOM2012_SCHEDMAINT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCOM2012_SCHEDMAINT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCOM2012_SCHEDMAINT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2012_STOPMAINT", Storage="_SCOM2012_STOPMAINT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCOM2012_STOPMAINT SCOM2012_STOPMAINT
		{
			get
			{
				return this._SCOM2012_STOPMAINT.Entity;
			}
			set
			{
				SCOM2012_STOPMAINT previousValue = this._SCOM2012_STOPMAINT.Entity;
				if (((previousValue != value) 
							|| (this._SCOM2012_STOPMAINT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCOM2012_STOPMAINT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCOM2012_STOPMAINT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCOM2012_STOPMAINT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2012_UPDATEALERT", Storage="_SCOM2012_UPDATEALERT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCOM2012_UPDATEALERT SCOM2012_UPDATEALERT
		{
			get
			{
				return this._SCOM2012_UPDATEALERT.Entity;
			}
			set
			{
				SCOM2012_UPDATEALERT previousValue = this._SCOM2012_UPDATEALERT.Entity;
				if (((previousValue != value) 
							|| (this._SCOM2012_UPDATEALERT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCOM2012_UPDATEALERT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCOM2012_UPDATEALERT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCOM2012_UPDATEALERT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_CREATEOBJECT", Storage="_SCSM2012_CREATEOBJECT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCSM2012_CREATEOBJECT SCSM2012_CREATEOBJECT
		{
			get
			{
				return this._SCSM2012_CREATEOBJECT.Entity;
			}
			set
			{
				SCSM2012_CREATEOBJECT previousValue = this._SCSM2012_CREATEOBJECT.Entity;
				if (((previousValue != value) 
							|| (this._SCSM2012_CREATEOBJECT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCSM2012_CREATEOBJECT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCSM2012_CREATEOBJECT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCSM2012_CREATEOBJECT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_CREATEREL", Storage="_SCSM2012_CREATEREL", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCSM2012_CREATEREL SCSM2012_CREATEREL
		{
			get
			{
				return this._SCSM2012_CREATEREL.Entity;
			}
			set
			{
				SCSM2012_CREATEREL previousValue = this._SCSM2012_CREATEREL.Entity;
				if (((previousValue != value) 
							|| (this._SCSM2012_CREATEREL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCSM2012_CREATEREL.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCSM2012_CREATEREL.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCSM2012_CREATEREL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_CREATERELOBJ", Storage="_SCSM2012_CREATERELOBJ", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCSM2012_CREATERELOBJ SCSM2012_CREATERELOBJ
		{
			get
			{
				return this._SCSM2012_CREATERELOBJ.Entity;
			}
			set
			{
				SCSM2012_CREATERELOBJ previousValue = this._SCSM2012_CREATERELOBJ.Entity;
				if (((previousValue != value) 
							|| (this._SCSM2012_CREATERELOBJ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCSM2012_CREATERELOBJ.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCSM2012_CREATERELOBJ.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCSM2012_CREATERELOBJ");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_CRTCHGTMP", Storage="_SCSM2012_CRTCHGTMP", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCSM2012_CRTCHGTMP SCSM2012_CRTCHGTMP
		{
			get
			{
				return this._SCSM2012_CRTCHGTMP.Entity;
			}
			set
			{
				SCSM2012_CRTCHGTMP previousValue = this._SCSM2012_CRTCHGTMP.Entity;
				if (((previousValue != value) 
							|| (this._SCSM2012_CRTCHGTMP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCSM2012_CRTCHGTMP.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCSM2012_CRTCHGTMP.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCSM2012_CRTCHGTMP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_CRTINCTMP", Storage="_SCSM2012_CRTINCTMP", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCSM2012_CRTINCTMP SCSM2012_CRTINCTMP
		{
			get
			{
				return this._SCSM2012_CRTINCTMP.Entity;
			}
			set
			{
				SCSM2012_CRTINCTMP previousValue = this._SCSM2012_CRTINCTMP.Entity;
				if (((previousValue != value) 
							|| (this._SCSM2012_CRTINCTMP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCSM2012_CRTINCTMP.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCSM2012_CRTINCTMP.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCSM2012_CRTINCTMP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_DELETEREL", Storage="_SCSM2012_DELETEREL", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCSM2012_DELETEREL SCSM2012_DELETEREL
		{
			get
			{
				return this._SCSM2012_DELETEREL.Entity;
			}
			set
			{
				SCSM2012_DELETEREL previousValue = this._SCSM2012_DELETEREL.Entity;
				if (((previousValue != value) 
							|| (this._SCSM2012_DELETEREL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCSM2012_DELETEREL.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCSM2012_DELETEREL.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCSM2012_DELETEREL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_GETACT", Storage="_SCSM2012_GETACT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCSM2012_GETACT SCSM2012_GETACT
		{
			get
			{
				return this._SCSM2012_GETACT.Entity;
			}
			set
			{
				SCSM2012_GETACT previousValue = this._SCSM2012_GETACT.Entity;
				if (((previousValue != value) 
							|| (this._SCSM2012_GETACT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCSM2012_GETACT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCSM2012_GETACT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCSM2012_GETACT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_GETOBJECT", Storage="_SCSM2012_GETOBJECT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCSM2012_GETOBJECT SCSM2012_GETOBJECT
		{
			get
			{
				return this._SCSM2012_GETOBJECT.Entity;
			}
			set
			{
				SCSM2012_GETOBJECT previousValue = this._SCSM2012_GETOBJECT.Entity;
				if (((previousValue != value) 
							|| (this._SCSM2012_GETOBJECT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCSM2012_GETOBJECT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCSM2012_GETOBJECT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCSM2012_GETOBJECT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_GETRELOBJ", Storage="_SCSM2012_GETRELOBJ", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCSM2012_GETRELOBJ SCSM2012_GETRELOBJ
		{
			get
			{
				return this._SCSM2012_GETRELOBJ.Entity;
			}
			set
			{
				SCSM2012_GETRELOBJ previousValue = this._SCSM2012_GETRELOBJ.Entity;
				if (((previousValue != value) 
							|| (this._SCSM2012_GETRELOBJ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCSM2012_GETRELOBJ.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCSM2012_GETRELOBJ.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCSM2012_GETRELOBJ");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_MONOBJECT", Storage="_SCSM2012_MONOBJECT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCSM2012_MONOBJECT SCSM2012_MONOBJECT
		{
			get
			{
				return this._SCSM2012_MONOBJECT.Entity;
			}
			set
			{
				SCSM2012_MONOBJECT previousValue = this._SCSM2012_MONOBJECT.Entity;
				if (((previousValue != value) 
							|| (this._SCSM2012_MONOBJECT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCSM2012_MONOBJECT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCSM2012_MONOBJECT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCSM2012_MONOBJECT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_UPDATEACT", Storage="_SCSM2012_UPDATEACT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCSM2012_UPDATEACT SCSM2012_UPDATEACT
		{
			get
			{
				return this._SCSM2012_UPDATEACT.Entity;
			}
			set
			{
				SCSM2012_UPDATEACT previousValue = this._SCSM2012_UPDATEACT.Entity;
				if (((previousValue != value) 
							|| (this._SCSM2012_UPDATEACT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCSM2012_UPDATEACT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCSM2012_UPDATEACT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCSM2012_UPDATEACT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_UPDATEATTACH", Storage="_SCSM2012_UPDATEATTACH", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCSM2012_UPDATEATTACH SCSM2012_UPDATEATTACH
		{
			get
			{
				return this._SCSM2012_UPDATEATTACH.Entity;
			}
			set
			{
				SCSM2012_UPDATEATTACH previousValue = this._SCSM2012_UPDATEATTACH.Entity;
				if (((previousValue != value) 
							|| (this._SCSM2012_UPDATEATTACH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCSM2012_UPDATEATTACH.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCSM2012_UPDATEATTACH.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCSM2012_UPDATEATTACH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_UPDATEOBJECT", Storage="_SCSM2012_UPDATEOBJECT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SCSM2012_UPDATEOBJECT SCSM2012_UPDATEOBJECT
		{
			get
			{
				return this._SCSM2012_UPDATEOBJECT.Entity;
			}
			set
			{
				SCSM2012_UPDATEOBJECT previousValue = this._SCSM2012_UPDATEOBJECT.Entity;
				if (((previousValue != value) 
							|| (this._SCSM2012_UPDATEOBJECT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCSM2012_UPDATEOBJECT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SCSM2012_UPDATEOBJECT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SCSM2012_UPDATEOBJECT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SSH_RUNCOMMAND", Storage="_SSH_RUNCOMMAND", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public SSH_RUNCOMMAND SSH_RUNCOMMAND
		{
			get
			{
				return this._SSH_RUNCOMMAND.Entity;
			}
			set
			{
				SSH_RUNCOMMAND previousValue = this._SSH_RUNCOMMAND.Entity;
				if (((previousValue != value) 
							|| (this._SSH_RUNCOMMAND.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SSH_RUNCOMMAND.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._SSH_RUNCOMMAND.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("SSH_RUNCOMMAND");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_STATUS_SCHEDULE", Storage="_STATUS_SCHEDULE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public STATUS_SCHEDULE STATUS_SCHEDULE
		{
			get
			{
				return this._STATUS_SCHEDULE.Entity;
			}
			set
			{
				STATUS_SCHEDULE previousValue = this._STATUS_SCHEDULE.Entity;
				if (((previousValue != value) 
							|| (this._STATUS_SCHEDULE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STATUS_SCHEDULE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._STATUS_SCHEDULE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("STATUS_SCHEDULE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_APPLY_XSLT", Storage="_TASK_APPLY_XSLT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_APPLY_XSLT TASK_APPLY_XSLT
		{
			get
			{
				return this._TASK_APPLY_XSLT.Entity;
			}
			set
			{
				TASK_APPLY_XSLT previousValue = this._TASK_APPLY_XSLT.Entity;
				if (((previousValue != value) 
							|| (this._TASK_APPLY_XSLT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_APPLY_XSLT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_APPLY_XSLT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_APPLY_XSLT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_COMPARE", Storage="_TASK_COMPARE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_COMPARE TASK_COMPARE
		{
			get
			{
				return this._TASK_COMPARE.Entity;
			}
			set
			{
				TASK_COMPARE previousValue = this._TASK_COMPARE.Entity;
				if (((previousValue != value) 
							|| (this._TASK_COMPARE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_COMPARE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_COMPARE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_COMPARE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_COMPRESS", Storage="_TASK_COMPRESS", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_COMPRESS TASK_COMPRESS
		{
			get
			{
				return this._TASK_COMPRESS.Entity;
			}
			set
			{
				TASK_COMPRESS previousValue = this._TASK_COMPRESS.Entity;
				if (((previousValue != value) 
							|| (this._TASK_COMPRESS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_COMPRESS.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_COMPRESS.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_COMPRESS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_COMPUTERIP", Storage="_TASK_COMPUTERIP", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_COMPUTERIP TASK_COMPUTERIP
		{
			get
			{
				return this._TASK_COMPUTERIP.Entity;
			}
			set
			{
				TASK_COMPUTERIP previousValue = this._TASK_COMPUTERIP.Entity;
				if (((previousValue != value) 
							|| (this._TASK_COMPUTERIP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_COMPUTERIP.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_COMPUTERIP.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_COMPUTERIP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_DIALUPNETWORKING", Storage="_TASK_DIALUPNETWORKING", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_DIALUPNETWORKING TASK_DIALUPNETWORKING
		{
			get
			{
				return this._TASK_DIALUPNETWORKING.Entity;
			}
			set
			{
				TASK_DIALUPNETWORKING previousValue = this._TASK_DIALUPNETWORKING.Entity;
				if (((previousValue != value) 
							|| (this._TASK_DIALUPNETWORKING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_DIALUPNETWORKING.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_DIALUPNETWORKING.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_DIALUPNETWORKING");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_DIALUPNETWORKINGSTATUS", Storage="_TASK_DIALUPNETWORKINGSTATUS", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_DIALUPNETWORKINGSTATUS TASK_DIALUPNETWORKINGSTATUS
		{
			get
			{
				return this._TASK_DIALUPNETWORKINGSTATUS.Entity;
			}
			set
			{
				TASK_DIALUPNETWORKINGSTATUS previousValue = this._TASK_DIALUPNETWORKINGSTATUS.Entity;
				if (((previousValue != value) 
							|| (this._TASK_DIALUPNETWORKINGSTATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_DIALUPNETWORKINGSTATUS.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_DIALUPNETWORKINGSTATUS.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_DIALUPNETWORKINGSTATUS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_DISCONNECTNETWORKPATH", Storage="_TASK_DISCONNECTNETWORKPATH", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_DISCONNECTNETWORKPATH TASK_DISCONNECTNETWORKPATH
		{
			get
			{
				return this._TASK_DISCONNECTNETWORKPATH.Entity;
			}
			set
			{
				TASK_DISCONNECTNETWORKPATH previousValue = this._TASK_DISCONNECTNETWORKPATH.Entity;
				if (((previousValue != value) 
							|| (this._TASK_DISCONNECTNETWORKPATH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_DISCONNECTNETWORKPATH.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_DISCONNECTNETWORKPATH.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_DISCONNECTNETWORKPATH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_EMAIL", Storage="_TASK_EMAIL", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_EMAIL TASK_EMAIL
		{
			get
			{
				return this._TASK_EMAIL.Entity;
			}
			set
			{
				TASK_EMAIL previousValue = this._TASK_EMAIL.Entity;
				if (((previousValue != value) 
							|| (this._TASK_EMAIL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_EMAIL.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_EMAIL.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_EMAIL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_ENDPROCESS", Storage="_TASK_ENDPROCESS", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_ENDPROCESS TASK_ENDPROCESS
		{
			get
			{
				return this._TASK_ENDPROCESS.Entity;
			}
			set
			{
				TASK_ENDPROCESS previousValue = this._TASK_ENDPROCESS.Entity;
				if (((previousValue != value) 
							|| (this._TASK_ENDPROCESS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_ENDPROCESS.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_ENDPROCESS.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_ENDPROCESS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_FILEMANAGEMENT", Storage="_TASK_FILEMANAGEMENT", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_FILEMANAGEMENT TASK_FILEMANAGEMENT
		{
			get
			{
				return this._TASK_FILEMANAGEMENT.Entity;
			}
			set
			{
				TASK_FILEMANAGEMENT previousValue = this._TASK_FILEMANAGEMENT.Entity;
				if (((previousValue != value) 
							|| (this._TASK_FILEMANAGEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_FILEMANAGEMENT.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_FILEMANAGEMENT.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_FILEMANAGEMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_FILEMANAGEMENTRENAME", Storage="_TASK_FILEMANAGEMENTRENAME", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<TASK_FILEMANAGEMENTRENAME> TASK_FILEMANAGEMENTRENAME
		{
			get
			{
				return this._TASK_FILEMANAGEMENTRENAME;
			}
			set
			{
				this._TASK_FILEMANAGEMENTRENAME.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_FORMATDATE", Storage="_TASK_FORMATDATE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_FORMATDATE TASK_FORMATDATE
		{
			get
			{
				return this._TASK_FORMATDATE.Entity;
			}
			set
			{
				TASK_FORMATDATE previousValue = this._TASK_FORMATDATE.Entity;
				if (((previousValue != value) 
							|| (this._TASK_FORMATDATE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_FORMATDATE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_FORMATDATE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_FORMATDATE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_GETDISKSPACESTATUS", Storage="_TASK_GETDISKSPACESTATUS", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_GETDISKSPACESTATUS TASK_GETDISKSPACESTATUS
		{
			get
			{
				return this._TASK_GETDISKSPACESTATUS.Entity;
			}
			set
			{
				TASK_GETDISKSPACESTATUS previousValue = this._TASK_GETDISKSPACESTATUS.Entity;
				if (((previousValue != value) 
							|| (this._TASK_GETDISKSPACESTATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_GETDISKSPACESTATUS.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_GETDISKSPACESTATUS.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_GETDISKSPACESTATUS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_INTERNETSTATUS", Storage="_TASK_INTERNETSTATUS", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_INTERNETSTATUS TASK_INTERNETSTATUS
		{
			get
			{
				return this._TASK_INTERNETSTATUS.Entity;
			}
			set
			{
				TASK_INTERNETSTATUS previousValue = this._TASK_INTERNETSTATUS.Entity;
				if (((previousValue != value) 
							|| (this._TASK_INTERNETSTATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_INTERNETSTATUS.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_INTERNETSTATUS.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_INTERNETSTATUS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_JUNCTION", Storage="_TASK_JUNCTION", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_JUNCTION TASK_JUNCTION
		{
			get
			{
				return this._TASK_JUNCTION.Entity;
			}
			set
			{
				TASK_JUNCTION previousValue = this._TASK_JUNCTION.Entity;
				if (((previousValue != value) 
							|| (this._TASK_JUNCTION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_JUNCTION.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_JUNCTION.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_JUNCTION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_MAPNETWORKPATH", Storage="_TASK_MAPNETWORKPATH", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_MAPNETWORKPATH TASK_MAPNETWORKPATH
		{
			get
			{
				return this._TASK_MAPNETWORKPATH.Entity;
			}
			set
			{
				TASK_MAPNETWORKPATH previousValue = this._TASK_MAPNETWORKPATH.Entity;
				if (((previousValue != value) 
							|| (this._TASK_MAPNETWORKPATH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_MAPNETWORKPATH.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_MAPNETWORKPATH.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_MAPNETWORKPATH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_MAPVALUES", Storage="_TASK_MAPVALUES", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_MAPVALUES TASK_MAPVALUES
		{
			get
			{
				return this._TASK_MAPVALUES.Entity;
			}
			set
			{
				TASK_MAPVALUES previousValue = this._TASK_MAPVALUES.Entity;
				if (((previousValue != value) 
							|| (this._TASK_MAPVALUES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_MAPVALUES.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_MAPVALUES.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_MAPVALUES");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_MESSAGEEVENTLOG", Storage="_TASK_MESSAGEEVENTLOG", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_MESSAGEEVENTLOG TASK_MESSAGEEVENTLOG
		{
			get
			{
				return this._TASK_MESSAGEEVENTLOG.Entity;
			}
			set
			{
				TASK_MESSAGEEVENTLOG previousValue = this._TASK_MESSAGEEVENTLOG.Entity;
				if (((previousValue != value) 
							|| (this._TASK_MESSAGEEVENTLOG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_MESSAGEEVENTLOG.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_MESSAGEEVENTLOG.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_MESSAGEEVENTLOG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_PROCESSSTATUS", Storage="_TASK_PROCESSSTATUS", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_PROCESSSTATUS TASK_PROCESSSTATUS
		{
			get
			{
				return this._TASK_PROCESSSTATUS.Entity;
			}
			set
			{
				TASK_PROCESSSTATUS previousValue = this._TASK_PROCESSSTATUS.Entity;
				if (((previousValue != value) 
							|| (this._TASK_PROCESSSTATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_PROCESSSTATUS.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_PROCESSSTATUS.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_PROCESSSTATUS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_QUERY_XML", Storage="_TASK_QUERY_XML", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_QUERY_XML TASK_QUERY_XML
		{
			get
			{
				return this._TASK_QUERY_XML.Entity;
			}
			set
			{
				TASK_QUERY_XML previousValue = this._TASK_QUERY_XML.Entity;
				if (((previousValue != value) 
							|| (this._TASK_QUERY_XML.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_QUERY_XML.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_QUERY_XML.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_QUERY_XML");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_QUERYDATABASE", Storage="_TASK_QUERYDATABASE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_QUERYDATABASE TASK_QUERYDATABASE
		{
			get
			{
				return this._TASK_QUERYDATABASE.Entity;
			}
			set
			{
				TASK_QUERYDATABASE previousValue = this._TASK_QUERYDATABASE.Entity;
				if (((previousValue != value) 
							|| (this._TASK_QUERYDATABASE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_QUERYDATABASE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_QUERYDATABASE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_QUERYDATABASE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_QUERYWMI", Storage="_TASK_QUERYWMI", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_QUERYWMI TASK_QUERYWMI
		{
			get
			{
				return this._TASK_QUERYWMI.Entity;
			}
			set
			{
				TASK_QUERYWMI previousValue = this._TASK_QUERYWMI.Entity;
				if (((previousValue != value) 
							|| (this._TASK_QUERYWMI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_QUERYWMI.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_QUERYWMI.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_QUERYWMI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_RANDOM_STRING", Storage="_TASK_RANDOM_STRING", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_RANDOM_STRING TASK_RANDOM_STRING
		{
			get
			{
				return this._TASK_RANDOM_STRING.Entity;
			}
			set
			{
				TASK_RANDOM_STRING previousValue = this._TASK_RANDOM_STRING.Entity;
				if (((previousValue != value) 
							|| (this._TASK_RANDOM_STRING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_RANDOM_STRING.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_RANDOM_STRING.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_RANDOM_STRING");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_READTEXTLOG", Storage="_TASK_READTEXTLOG", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_READTEXTLOG TASK_READTEXTLOG
		{
			get
			{
				return this._TASK_READTEXTLOG.Entity;
			}
			set
			{
				TASK_READTEXTLOG previousValue = this._TASK_READTEXTLOG.Entity;
				if (((previousValue != value) 
							|| (this._TASK_READTEXTLOG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_READTEXTLOG.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_READTEXTLOG.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_READTEXTLOG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_RUNPROGRAM", Storage="_TASK_RUNPROGRAM", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_RUNPROGRAM TASK_RUNPROGRAM
		{
			get
			{
				return this._TASK_RUNPROGRAM.Entity;
			}
			set
			{
				TASK_RUNPROGRAM previousValue = this._TASK_RUNPROGRAM.Entity;
				if (((previousValue != value) 
							|| (this._TASK_RUNPROGRAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_RUNPROGRAM.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_RUNPROGRAM.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_RUNPROGRAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_SAVEEVENTLOGENTRIES", Storage="_TASK_SAVEEVENTLOGENTRIES", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_SAVEEVENTLOGENTRIES TASK_SAVEEVENTLOGENTRIES
		{
			get
			{
				return this._TASK_SAVEEVENTLOGENTRIES.Entity;
			}
			set
			{
				TASK_SAVEEVENTLOGENTRIES previousValue = this._TASK_SAVEEVENTLOGENTRIES.Entity;
				if (((previousValue != value) 
							|| (this._TASK_SAVEEVENTLOGENTRIES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_SAVEEVENTLOGENTRIES.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_SAVEEVENTLOGENTRIES.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_SAVEEVENTLOGENTRIES");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_SERVICESTATUS", Storage="_TASK_SERVICESTATUS", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_SERVICESTATUS TASK_SERVICESTATUS
		{
			get
			{
				return this._TASK_SERVICESTATUS.Entity;
			}
			set
			{
				TASK_SERVICESTATUS previousValue = this._TASK_SERVICESTATUS.Entity;
				if (((previousValue != value) 
							|| (this._TASK_SERVICESTATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_SERVICESTATUS.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_SERVICESTATUS.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_SERVICESTATUS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_SNMPGETVARIABLE", Storage="_TASK_SNMPGETVARIABLE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_SNMPGETVARIABLE TASK_SNMPGETVARIABLE
		{
			get
			{
				return this._TASK_SNMPGETVARIABLE.Entity;
			}
			set
			{
				TASK_SNMPGETVARIABLE previousValue = this._TASK_SNMPGETVARIABLE.Entity;
				if (((previousValue != value) 
							|| (this._TASK_SNMPGETVARIABLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_SNMPGETVARIABLE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_SNMPGETVARIABLE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_SNMPGETVARIABLE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_SNMPSENDTRAP", Storage="_TASK_SNMPSENDTRAP", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_SNMPSENDTRAP TASK_SNMPSENDTRAP
		{
			get
			{
				return this._TASK_SNMPSENDTRAP.Entity;
			}
			set
			{
				TASK_SNMPSENDTRAP previousValue = this._TASK_SNMPSENDTRAP.Entity;
				if (((previousValue != value) 
							|| (this._TASK_SNMPSENDTRAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_SNMPSENDTRAP.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_SNMPSENDTRAP.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_SNMPSENDTRAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_SNMPSETVARIABLE", Storage="_TASK_SNMPSETVARIABLE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_SNMPSETVARIABLE TASK_SNMPSETVARIABLE
		{
			get
			{
				return this._TASK_SNMPSETVARIABLE.Entity;
			}
			set
			{
				TASK_SNMPSETVARIABLE previousValue = this._TASK_SNMPSETVARIABLE.Entity;
				if (((previousValue != value) 
							|| (this._TASK_SNMPSETVARIABLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_SNMPSETVARIABLE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_SNMPSETVARIABLE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_SNMPSETVARIABLE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_STARTSTOPSERVICE", Storage="_TASK_STARTSTOPSERVICE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_STARTSTOPSERVICE TASK_STARTSTOPSERVICE
		{
			get
			{
				return this._TASK_STARTSTOPSERVICE.Entity;
			}
			set
			{
				TASK_STARTSTOPSERVICE previousValue = this._TASK_STARTSTOPSERVICE.Entity;
				if (((previousValue != value) 
							|| (this._TASK_STARTSTOPSERVICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_STARTSTOPSERVICE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_STARTSTOPSERVICE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_STARTSTOPSERVICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_SYSLOG", Storage="_TASK_SYSLOG", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_SYSLOG TASK_SYSLOG
		{
			get
			{
				return this._TASK_SYSLOG.Entity;
			}
			set
			{
				TASK_SYSLOG previousValue = this._TASK_SYSLOG.Entity;
				if (((previousValue != value) 
							|| (this._TASK_SYSLOG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_SYSLOG.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_SYSLOG.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_SYSLOG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_SYSTEMRESTART", Storage="_TASK_SYSTEMRESTART", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_SYSTEMRESTART TASK_SYSTEMRESTART
		{
			get
			{
				return this._TASK_SYSTEMRESTART.Entity;
			}
			set
			{
				TASK_SYSTEMRESTART previousValue = this._TASK_SYSTEMRESTART.Entity;
				if (((previousValue != value) 
							|| (this._TASK_SYSTEMRESTART.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_SYSTEMRESTART.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_SYSTEMRESTART.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_SYSTEMRESTART");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_TELEPHONYDIAL", Storage="_TASK_TELEPHONYDIAL", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_TELEPHONYDIAL TASK_TELEPHONYDIAL
		{
			get
			{
				return this._TASK_TELEPHONYDIAL.Entity;
			}
			set
			{
				TASK_TELEPHONYDIAL previousValue = this._TASK_TELEPHONYDIAL.Entity;
				if (((previousValue != value) 
							|| (this._TASK_TELEPHONYDIAL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_TELEPHONYDIAL.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_TELEPHONYDIAL.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_TELEPHONYDIAL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_TELEPHONYEND", Storage="_TASK_TELEPHONYEND", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_TELEPHONYEND TASK_TELEPHONYEND
		{
			get
			{
				return this._TASK_TELEPHONYEND.Entity;
			}
			set
			{
				TASK_TELEPHONYEND previousValue = this._TASK_TELEPHONYEND.Entity;
				if (((previousValue != value) 
							|| (this._TASK_TELEPHONYEND.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_TELEPHONYEND.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_TELEPHONYEND.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_TELEPHONYEND");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_TELEPHONYPROCESS", Storage="_TASK_TELEPHONYPROCESS", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_TELEPHONYPROCESS TASK_TELEPHONYPROCESS
		{
			get
			{
				return this._TASK_TELEPHONYPROCESS.Entity;
			}
			set
			{
				TASK_TELEPHONYPROCESS previousValue = this._TASK_TELEPHONYPROCESS.Entity;
				if (((previousValue != value) 
							|| (this._TASK_TELEPHONYPROCESS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_TELEPHONYPROCESS.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_TELEPHONYPROCESS.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_TELEPHONYPROCESS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_WEBPAGE", Storage="_TASK_WEBPAGE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_WEBPAGE TASK_WEBPAGE
		{
			get
			{
				return this._TASK_WEBPAGE.Entity;
			}
			set
			{
				TASK_WEBPAGE previousValue = this._TASK_WEBPAGE.Entity;
				if (((previousValue != value) 
							|| (this._TASK_WEBPAGE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_WEBPAGE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_WEBPAGE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_WEBPAGE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_WRITETODATABASE", Storage="_TASK_WRITETODATABASE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public TASK_WRITETODATABASE TASK_WRITETODATABASE
		{
			get
			{
				return this._TASK_WRITETODATABASE.Entity;
			}
			set
			{
				TASK_WRITETODATABASE previousValue = this._TASK_WRITETODATABASE.Entity;
				if (((previousValue != value) 
							|| (this._TASK_WRITETODATABASE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_WRITETODATABASE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._TASK_WRITETODATABASE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("TASK_WRITETODATABASE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_WRITETODATABASE_DATA", Storage="_TASK_WRITETODATABASE_DATA", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<TASK_WRITETODATABASE_DATA> TASK_WRITETODATABASE_DATA
		{
			get
			{
				return this._TASK_WRITETODATABASE_DATA;
			}
			set
			{
				this._TASK_WRITETODATABASE_DATA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TELEPHONY_SELECTEDLINES", Storage="_TELEPHONY_SELECTEDLINES", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<TELEPHONY_SELECTEDLINES> TELEPHONY_SELECTEDLINES
		{
			get
			{
				return this._TELEPHONY_SELECTEDLINES;
			}
			set
			{
				this._TELEPHONY_SELECTEDLINES.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_WS_INVOKE", Storage="_WS_INVOKE", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=false)]
		public WS_INVOKE WS_INVOKE
		{
			get
			{
				return this._WS_INVOKE.Entity;
			}
			set
			{
				WS_INVOKE previousValue = this._WS_INVOKE.Entity;
				if (((previousValue != value) 
							|| (this._WS_INVOKE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WS_INVOKE.Entity = null;
						previousValue.OBJECTS = null;
					}
					this._WS_INVOKE.Entity = value;
					if ((value != null))
					{
						value.OBJECTS = this;
					}
					this.SendPropertyChanged("WS_INVOKE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTTYPES_OBJECTS", Storage="_OBJECTTYPES", ThisKey="ObjectType", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTTYPES OBJECTTYPES
		{
			get
			{
				return this._OBJECTTYPES.Entity;
			}
			set
			{
				OBJECTTYPES previousValue = this._OBJECTTYPES.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTTYPES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTTYPES.Entity = null;
						previousValue.OBJECTS.Remove(this);
					}
					this._OBJECTTYPES.Entity = value;
					if ((value != null))
					{
						value.OBJECTS.Add(this);
						this._ObjectType = value.UniqueID;
					}
					else
					{
						this._ObjectType = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTTYPES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMAIL_ATTACHMENTS(EMAIL_ATTACHMENTS entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = this;
		}
		
		private void detach_EMAIL_ATTACHMENTS(EMAIL_ATTACHMENTS entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = null;
		}
		
		private void attach_EMAIL_RECIPIENTS(EMAIL_RECIPIENTS entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = this;
		}
		
		private void detach_EMAIL_RECIPIENTS(EMAIL_RECIPIENTS entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = null;
		}
		
		private void attach_EVENT_DISKSPACE_DRIVEINFO(EVENT_DISKSPACE_DRIVEINFO entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = this;
		}
		
		private void detach_EVENT_DISKSPACE_DRIVEINFO(EVENT_DISKSPACE_DRIVEINFO entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = null;
		}
		
		private void attach_EVENT_EVENTLOGFILTER(EVENT_EVENTLOGFILTER entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = this;
		}
		
		private void detach_EVENT_EVENTLOGFILTER(EVENT_EVENTLOGFILTER entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = null;
		}
		
		private void attach_INTERNETSTATUS_CLOSE(INTERNETSTATUS_CLOSE entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = this;
		}
		
		private void detach_INTERNETSTATUS_CLOSE(INTERNETSTATUS_CLOSE entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = null;
		}
		
		private void attach_INTERNETSTATUS_OPENPORT(INTERNETSTATUS_OPENPORT entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = this;
		}
		
		private void detach_INTERNETSTATUS_OPENPORT(INTERNETSTATUS_OPENPORT entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = null;
		}
		
		private void attach_INTERNETSTATUS_RECEIVE(INTERNETSTATUS_RECEIVE entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = this;
		}
		
		private void detach_INTERNETSTATUS_RECEIVE(INTERNETSTATUS_RECEIVE entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = null;
		}
		
		private void attach_INTERNETSTATUS_SEND(INTERNETSTATUS_SEND entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = this;
		}
		
		private void detach_INTERNETSTATUS_SEND(INTERNETSTATUS_SEND entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = null;
		}
		
		private void attach_OBJECTINSTANCES(OBJECTINSTANCES entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = this;
		}
		
		private void detach_OBJECTINSTANCES(OBJECTINSTANCES entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = null;
		}
		
		private void attach_TASK_FILEMANAGEMENTRENAME(TASK_FILEMANAGEMENTRENAME entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = this;
		}
		
		private void detach_TASK_FILEMANAGEMENTRENAME(TASK_FILEMANAGEMENTRENAME entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = null;
		}
		
		private void attach_TASK_WRITETODATABASE_DATA(TASK_WRITETODATABASE_DATA entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = this;
		}
		
		private void detach_TASK_WRITETODATABASE_DATA(TASK_WRITETODATABASE_DATA entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = null;
		}
		
		private void attach_TELEPHONY_SELECTEDLINES(TELEPHONY_SELECTEDLINES entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = this;
		}
		
		private void detach_TELEPHONY_SELECTEDLINES(TELEPHONY_SELECTEDLINES entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OBJECTTYPES")]
	public partial class OBJECTTYPES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Name;
		
		private string _Description;
		
		private string _PrimaryDataTable;
		
		private string _SecondaryDataTables;
		
		private string _DefaultSecurity;
		
		private EntitySet<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPrimaryDataTableChanging(string value);
    partial void OnPrimaryDataTableChanged();
    partial void OnSecondaryDataTablesChanging(string value);
    partial void OnSecondaryDataTablesChanged();
    partial void OnDefaultSecurityChanging(string value);
    partial void OnDefaultSecurityChanged();
    #endregion
		
		public OBJECTTYPES()
		{
			this._OBJECTS = new EntitySet<OBJECTS>(new Action<OBJECTS>(this.attach_OBJECTS), new Action<OBJECTS>(this.detach_OBJECTS));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryDataTable", DbType="NVarChar(200)")]
		public string PrimaryDataTable
		{
			get
			{
				return this._PrimaryDataTable;
			}
			set
			{
				if ((this._PrimaryDataTable != value))
				{
					this.OnPrimaryDataTableChanging(value);
					this.SendPropertyChanging();
					this._PrimaryDataTable = value;
					this.SendPropertyChanged("PrimaryDataTable");
					this.OnPrimaryDataTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryDataTables", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SecondaryDataTables
		{
			get
			{
				return this._SecondaryDataTables;
			}
			set
			{
				if ((this._SecondaryDataTables != value))
				{
					this.OnSecondaryDataTablesChanging(value);
					this.SendPropertyChanging();
					this._SecondaryDataTables = value;
					this.SendPropertyChanged("SecondaryDataTables");
					this.OnSecondaryDataTablesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultSecurity", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string DefaultSecurity
		{
			get
			{
				return this._DefaultSecurity;
			}
			set
			{
				if ((this._DefaultSecurity != value))
				{
					this.OnDefaultSecurityChanging(value);
					this.SendPropertyChanging();
					this._DefaultSecurity = value;
					this.SendPropertyChanged("DefaultSecurity");
					this.OnDefaultSecurityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTTYPES_OBJECTS", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="ObjectType")]
		public EntitySet<OBJECTS> OBJECTS
		{
			get
			{
				return this._OBJECTS;
			}
			set
			{
				this._OBJECTS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OBJECTS(OBJECTS entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTTYPES = this;
		}
		
		private void detach_OBJECTS(OBJECTS entity)
		{
			this.SendPropertyChanging();
			entity.OBJECTTYPES = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OE_DELIVERY_DESTINATIONS")]
	public partial class OE_DELIVERY_DESTINATIONS
	{
		
		private int _RuleOrderNum;
		
		private string _Destination;
		
		public OE_DELIVERY_DESTINATIONS()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RuleOrderNum", DbType="Int NOT NULL")]
		public int RuleOrderNum
		{
			get
			{
				return this._RuleOrderNum;
			}
			set
			{
				if ((this._RuleOrderNum != value))
				{
					this._RuleOrderNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this._Destination = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OE_DELIVERY_RULES")]
	public partial class OE_DELIVERY_RULES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderNum;
		
		private string _Pattern;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    partial void OnPatternChanging(string value);
    partial void OnPatternChanged();
    #endregion
		
		public OE_DELIVERY_RULES()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pattern", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Pattern
		{
			get
			{
				return this._Pattern;
			}
			set
			{
				if ((this._Pattern != value))
				{
					this.OnPatternChanging(value);
					this.SendPropertyChanging();
					this._Pattern = value;
					this.SendPropertyChanged("Pattern");
					this.OnPatternChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OIS_SNMP_TRAP_CONFIG")]
	public partial class OIS_SNMP_TRAP_CONFIG
	{
		
		private string _DestinationIPAddress;
		
		private string _Port;
		
		private string _Version;
		
		private string _Community;
		
		public OIS_SNMP_TRAP_CONFIG()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationIPAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DestinationIPAddress
		{
			get
			{
				return this._DestinationIPAddress;
			}
			set
			{
				if ((this._DestinationIPAddress != value))
				{
					this._DestinationIPAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this._Port = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Community", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Community
		{
			get
			{
				return this._Community;
			}
			set
			{
				if ((this._Community != value))
				{
					this._Community = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Internal].[Parties]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Internal___Parties_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_> @__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_;
		
		private EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_> @__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public _Microsoft_SystemCenter_Orchestrator_Internal___Parties_()
		{
			this.@__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_ = new EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_>(new Action<_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_>(this.attach__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_), new Action<_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_>(this.detach__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_));
			this.@__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_ = new EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_>(new Action<_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_>(this.attach__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_), new Action<_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_>(this.detach__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Microsoft_SystemCenter_Orchestrator_Internal___Parties___Microsoft_SystemCenter_" +
			"Orchestrator_Internal___Permissions_", Storage="__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_", ThisKey="Id", OtherKey="PartyId")]
		public EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_> _Microsoft_SystemCenter_Orchestrator_Internal___Permissions_
		{
			get
			{
				return this.@__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_;
			}
			set
			{
				this.@__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Microsoft_SystemCenter_Orchestrator_Internal___Parties___Microsoft_SystemCenter_" +
			"Orchestrator_Internal___SecurityTokenParties_", Storage="__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_", ThisKey="Id", OtherKey="PartyId")]
		public EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_> _Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_
		{
			get
			{
				return this.@__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_;
			}
			set
			{
				this.@__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_(_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_ entity)
		{
			this.SendPropertyChanging();
			entity._Microsoft_SystemCenter_Orchestrator_Internal___Parties_ = this;
		}
		
		private void detach__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_(_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_ entity)
		{
			this.SendPropertyChanging();
			entity._Microsoft_SystemCenter_Orchestrator_Internal___Parties_ = null;
		}
		
		private void attach__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_(_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_ entity)
		{
			this.SendPropertyChanging();
			entity._Microsoft_SystemCenter_Orchestrator_Internal___Parties_ = this;
		}
		
		private void detach__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_(_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_ entity)
		{
			this.SendPropertyChanging();
			entity._Microsoft_SystemCenter_Orchestrator_Internal___Parties_ = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Internal].[Permissions]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Internal___Permissions_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ResourceId;
		
		private long _PartyId;
		
		private long _RightId;
		
		private bool _AccessType;
		
		private int _InheritanceFlags;
		
		private int _PropagationFlags;
		
		private System.Nullable<System.Guid> _ResourceType;
		
		private EntityRef<_Microsoft_SystemCenter_Orchestrator_Internal___Parties_> @__Microsoft_SystemCenter_Orchestrator_Internal___Parties_;
		
		private EntityRef<_Microsoft_SystemCenter_Orchestrator_Internal___Resources_> @__Microsoft_SystemCenter_Orchestrator_Internal___Resources_;
		
		private EntityRef<_Microsoft_SystemCenter_Orchestrator_Internal___Rights_> @__Microsoft_SystemCenter_Orchestrator_Internal___Rights_;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnResourceIdChanging(long value);
    partial void OnResourceIdChanged();
    partial void OnPartyIdChanging(long value);
    partial void OnPartyIdChanged();
    partial void OnRightIdChanging(long value);
    partial void OnRightIdChanged();
    partial void OnAccessTypeChanging(bool value);
    partial void OnAccessTypeChanged();
    partial void OnInheritanceFlagsChanging(int value);
    partial void OnInheritanceFlagsChanged();
    partial void OnPropagationFlagsChanging(int value);
    partial void OnPropagationFlagsChanged();
    partial void OnResourceTypeChanging(System.Nullable<System.Guid> value);
    partial void OnResourceTypeChanged();
    #endregion
		
		public _Microsoft_SystemCenter_Orchestrator_Internal___Permissions_()
		{
			this.@__Microsoft_SystemCenter_Orchestrator_Internal___Parties_ = default(EntityRef<_Microsoft_SystemCenter_Orchestrator_Internal___Parties_>);
			this.@__Microsoft_SystemCenter_Orchestrator_Internal___Resources_ = default(EntityRef<_Microsoft_SystemCenter_Orchestrator_Internal___Resources_>);
			this.@__Microsoft_SystemCenter_Orchestrator_Internal___Rights_ = default(EntityRef<_Microsoft_SystemCenter_Orchestrator_Internal___Rights_>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceId", DbType="BigInt NOT NULL")]
		public long ResourceId
		{
			get
			{
				return this._ResourceId;
			}
			set
			{
				if ((this._ResourceId != value))
				{
					if (this.@__Microsoft_SystemCenter_Orchestrator_Internal___Resources_.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceId = value;
					this.SendPropertyChanged("ResourceId");
					this.OnResourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyId", DbType="BigInt NOT NULL")]
		public long PartyId
		{
			get
			{
				return this._PartyId;
			}
			set
			{
				if ((this._PartyId != value))
				{
					if (this.@__Microsoft_SystemCenter_Orchestrator_Internal___Parties_.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartyIdChanging(value);
					this.SendPropertyChanging();
					this._PartyId = value;
					this.SendPropertyChanged("PartyId");
					this.OnPartyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightId", DbType="BigInt NOT NULL")]
		public long RightId
		{
			get
			{
				return this._RightId;
			}
			set
			{
				if ((this._RightId != value))
				{
					if (this.@__Microsoft_SystemCenter_Orchestrator_Internal___Rights_.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRightIdChanging(value);
					this.SendPropertyChanging();
					this._RightId = value;
					this.SendPropertyChanged("RightId");
					this.OnRightIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessType", DbType="Bit NOT NULL")]
		public bool AccessType
		{
			get
			{
				return this._AccessType;
			}
			set
			{
				if ((this._AccessType != value))
				{
					this.OnAccessTypeChanging(value);
					this.SendPropertyChanging();
					this._AccessType = value;
					this.SendPropertyChanged("AccessType");
					this.OnAccessTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InheritanceFlags", DbType="Int NOT NULL")]
		public int InheritanceFlags
		{
			get
			{
				return this._InheritanceFlags;
			}
			set
			{
				if ((this._InheritanceFlags != value))
				{
					this.OnInheritanceFlagsChanging(value);
					this.SendPropertyChanging();
					this._InheritanceFlags = value;
					this.SendPropertyChanged("InheritanceFlags");
					this.OnInheritanceFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropagationFlags", DbType="Int NOT NULL")]
		public int PropagationFlags
		{
			get
			{
				return this._PropagationFlags;
			}
			set
			{
				if ((this._PropagationFlags != value))
				{
					this.OnPropagationFlagsChanging(value);
					this.SendPropertyChanging();
					this._PropagationFlags = value;
					this.SendPropertyChanged("PropagationFlags");
					this.OnPropagationFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceType", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ResourceType
		{
			get
			{
				return this._ResourceType;
			}
			set
			{
				if ((this._ResourceType != value))
				{
					this.OnResourceTypeChanging(value);
					this.SendPropertyChanging();
					this._ResourceType = value;
					this.SendPropertyChanged("ResourceType");
					this.OnResourceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Microsoft_SystemCenter_Orchestrator_Internal___Parties___Microsoft_SystemCenter_" +
			"Orchestrator_Internal___Permissions_", Storage="__Microsoft_SystemCenter_Orchestrator_Internal___Parties_", ThisKey="PartyId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public _Microsoft_SystemCenter_Orchestrator_Internal___Parties_ _Microsoft_SystemCenter_Orchestrator_Internal___Parties_
		{
			get
			{
				return this.@__Microsoft_SystemCenter_Orchestrator_Internal___Parties_.Entity;
			}
			set
			{
				_Microsoft_SystemCenter_Orchestrator_Internal___Parties_ previousValue = this.@__Microsoft_SystemCenter_Orchestrator_Internal___Parties_.Entity;
				if (((previousValue != value) 
							|| (this.@__Microsoft_SystemCenter_Orchestrator_Internal___Parties_.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__Microsoft_SystemCenter_Orchestrator_Internal___Parties_.Entity = null;
						previousValue._Microsoft_SystemCenter_Orchestrator_Internal___Permissions_.Remove(this);
					}
					this.@__Microsoft_SystemCenter_Orchestrator_Internal___Parties_.Entity = value;
					if ((value != null))
					{
						value._Microsoft_SystemCenter_Orchestrator_Internal___Permissions_.Add(this);
						this._PartyId = value.Id;
					}
					else
					{
						this._PartyId = default(long);
					}
					this.SendPropertyChanged("_Microsoft_SystemCenter_Orchestrator_Internal___Parties_");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Microsoft_SystemCenter_Orchestrator_Internal___Resources___Microsoft_SystemCente" +
			"r_Orchestrator_Internal___Permissions_", Storage="__Microsoft_SystemCenter_Orchestrator_Internal___Resources_", ThisKey="ResourceId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public _Microsoft_SystemCenter_Orchestrator_Internal___Resources_ _Microsoft_SystemCenter_Orchestrator_Internal___Resources_
		{
			get
			{
				return this.@__Microsoft_SystemCenter_Orchestrator_Internal___Resources_.Entity;
			}
			set
			{
				_Microsoft_SystemCenter_Orchestrator_Internal___Resources_ previousValue = this.@__Microsoft_SystemCenter_Orchestrator_Internal___Resources_.Entity;
				if (((previousValue != value) 
							|| (this.@__Microsoft_SystemCenter_Orchestrator_Internal___Resources_.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__Microsoft_SystemCenter_Orchestrator_Internal___Resources_.Entity = null;
						previousValue._Microsoft_SystemCenter_Orchestrator_Internal___Permissions_.Remove(this);
					}
					this.@__Microsoft_SystemCenter_Orchestrator_Internal___Resources_.Entity = value;
					if ((value != null))
					{
						value._Microsoft_SystemCenter_Orchestrator_Internal___Permissions_.Add(this);
						this._ResourceId = value.Id;
					}
					else
					{
						this._ResourceId = default(long);
					}
					this.SendPropertyChanged("_Microsoft_SystemCenter_Orchestrator_Internal___Resources_");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Microsoft_SystemCenter_Orchestrator_Internal___Rights___Microsoft_SystemCenter_O" +
			"rchestrator_Internal___Permissions_", Storage="__Microsoft_SystemCenter_Orchestrator_Internal___Rights_", ThisKey="RightId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public _Microsoft_SystemCenter_Orchestrator_Internal___Rights_ _Microsoft_SystemCenter_Orchestrator_Internal___Rights_
		{
			get
			{
				return this.@__Microsoft_SystemCenter_Orchestrator_Internal___Rights_.Entity;
			}
			set
			{
				_Microsoft_SystemCenter_Orchestrator_Internal___Rights_ previousValue = this.@__Microsoft_SystemCenter_Orchestrator_Internal___Rights_.Entity;
				if (((previousValue != value) 
							|| (this.@__Microsoft_SystemCenter_Orchestrator_Internal___Rights_.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__Microsoft_SystemCenter_Orchestrator_Internal___Rights_.Entity = null;
						previousValue._Microsoft_SystemCenter_Orchestrator_Internal___Permissions_.Remove(this);
					}
					this.@__Microsoft_SystemCenter_Orchestrator_Internal___Rights_.Entity = value;
					if ((value != null))
					{
						value._Microsoft_SystemCenter_Orchestrator_Internal___Permissions_.Add(this);
						this._RightId = value.Id;
					}
					else
					{
						this._RightId = default(long);
					}
					this.SendPropertyChanged("_Microsoft_SystemCenter_Orchestrator_Internal___Rights_");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERMISSIONS")]
	public partial class PERMISSIONS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Security;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnSecurityChanging(string value);
    partial void OnSecurityChanged();
    #endregion
		
		public PERMISSIONS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Security", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Security
		{
			get
			{
				return this._Security;
			}
			set
			{
				if ((this._Security != value))
				{
					this.OnSecurityChanging(value);
					this.SendPropertyChanging();
					this._Security = value;
					this.SendPropertyChanged("Security");
					this.OnSecurityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.POLICIES")]
	public partial class POLICIES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Name;
		
		private System.Guid _ParentID;
		
		private System.DateTime _CreationTime;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _LastModified;
		
		private string _LastModifiedBy;
		
		private bool _Enabled;
		
		private System.Nullable<int> _Flags;
		
		private System.Nullable<bool> _ASC_UseServiceSecurity;
		
		private System.Nullable<bool> _ASC_ThisAccount;
		
		private string _ASC_Username;
		
		private string _ASC_Password;
		
		private System.Nullable<bool> _HasExtenders;
		
		private System.Nullable<System.Guid> _Type;
		
		private string _CheckOutUser;
		
		private System.Nullable<System.DateTime> _CheckOutTime;
		
		private string _CheckOutLocation;
		
		private string _Schedule;
		
		private bool _Deleted;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<decimal> _CostDollar;
		
		private System.Nullable<decimal> _SavingsDollar;
		
		private System.Nullable<int> _CostTime;
		
		private System.Nullable<int> _SavingsTime;
		
		private bool _Published;
		
		private System.Nullable<System.DateTime> _PublishingTime;
		
		private string _ActionServer;
		
		private System.Nullable<bool> _UsePreferredServers;
		
		private System.Nullable<bool> _LogCommonData;
		
		private System.Nullable<bool> _LogSpecificData;
		
		private string _Description;
		
		private System.Nullable<int> _PolicyTimeout;
		
		private System.Nullable<bool> _NotifyOnFail;
		
		private int _MaxParallelRequests;
		
		private int _Version;
		
		private bool _RunInPipelineMode;
		
		private string _ReturnDataDefinition;
		
		private EntitySet<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_> @__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_;
		
		private EntitySet<POLICY_PUBLISH_QUEUE> _POLICY_PUBLISH_QUEUE;
		
		private EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_> @__Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentIDChanging(System.Guid value);
    partial void OnParentIDChanged();
    partial void OnCreationTimeChanging(System.DateTime value);
    partial void OnCreationTimeChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnLastModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedChanged();
    partial void OnLastModifiedByChanging(string value);
    partial void OnLastModifiedByChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnFlagsChanging(System.Nullable<int> value);
    partial void OnFlagsChanged();
    partial void OnASC_UseServiceSecurityChanging(System.Nullable<bool> value);
    partial void OnASC_UseServiceSecurityChanged();
    partial void OnASC_ThisAccountChanging(System.Nullable<bool> value);
    partial void OnASC_ThisAccountChanged();
    partial void OnASC_UsernameChanging(string value);
    partial void OnASC_UsernameChanged();
    partial void OnASC_PasswordChanging(string value);
    partial void OnASC_PasswordChanged();
    partial void OnHasExtendersChanging(System.Nullable<bool> value);
    partial void OnHasExtendersChanged();
    partial void OnTypeChanging(System.Nullable<System.Guid> value);
    partial void OnTypeChanged();
    partial void OnCheckOutUserChanging(string value);
    partial void OnCheckOutUserChanged();
    partial void OnCheckOutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckOutTimeChanged();
    partial void OnCheckOutLocationChanging(string value);
    partial void OnCheckOutLocationChanged();
    partial void OnScheduleChanging(string value);
    partial void OnScheduleChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnCostDollarChanging(System.Nullable<decimal> value);
    partial void OnCostDollarChanged();
    partial void OnSavingsDollarChanging(System.Nullable<decimal> value);
    partial void OnSavingsDollarChanged();
    partial void OnCostTimeChanging(System.Nullable<int> value);
    partial void OnCostTimeChanged();
    partial void OnSavingsTimeChanging(System.Nullable<int> value);
    partial void OnSavingsTimeChanged();
    partial void OnPublishedChanging(bool value);
    partial void OnPublishedChanged();
    partial void OnPublishingTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishingTimeChanged();
    partial void OnActionServerChanging(string value);
    partial void OnActionServerChanged();
    partial void OnUsePreferredServersChanging(System.Nullable<bool> value);
    partial void OnUsePreferredServersChanged();
    partial void OnLogCommonDataChanging(System.Nullable<bool> value);
    partial void OnLogCommonDataChanged();
    partial void OnLogSpecificDataChanging(System.Nullable<bool> value);
    partial void OnLogSpecificDataChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPolicyTimeoutChanging(System.Nullable<int> value);
    partial void OnPolicyTimeoutChanged();
    partial void OnNotifyOnFailChanging(System.Nullable<bool> value);
    partial void OnNotifyOnFailChanged();
    partial void OnMaxParallelRequestsChanging(int value);
    partial void OnMaxParallelRequestsChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnRunInPipelineModeChanging(bool value);
    partial void OnRunInPipelineModeChanged();
    partial void OnReturnDataDefinitionChanging(string value);
    partial void OnReturnDataDefinitionChanged();
    #endregion
		
		public POLICIES()
		{
			this.@__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_ = new EntitySet<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_>(new Action<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_>(this.attach__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_), new Action<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_>(this.detach__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_));
			this._POLICY_PUBLISH_QUEUE = new EntitySet<POLICY_PUBLISH_QUEUE>(new Action<POLICY_PUBLISH_QUEUE>(this.attach_POLICY_PUBLISH_QUEUE), new Action<POLICY_PUBLISH_QUEUE>(this.detach_POLICY_PUBLISH_QUEUE));
			this.@__Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_ = new EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_>(new Action<_Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_>(this.attach__Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_), new Action<_Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_>(this.detach__Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="NVarChar(50)")]
		public string LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int")]
		public System.Nullable<int> Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASC_UseServiceSecurity", DbType="Bit")]
		public System.Nullable<bool> ASC_UseServiceSecurity
		{
			get
			{
				return this._ASC_UseServiceSecurity;
			}
			set
			{
				if ((this._ASC_UseServiceSecurity != value))
				{
					this.OnASC_UseServiceSecurityChanging(value);
					this.SendPropertyChanging();
					this._ASC_UseServiceSecurity = value;
					this.SendPropertyChanged("ASC_UseServiceSecurity");
					this.OnASC_UseServiceSecurityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASC_ThisAccount", DbType="Bit")]
		public System.Nullable<bool> ASC_ThisAccount
		{
			get
			{
				return this._ASC_ThisAccount;
			}
			set
			{
				if ((this._ASC_ThisAccount != value))
				{
					this.OnASC_ThisAccountChanging(value);
					this.SendPropertyChanging();
					this._ASC_ThisAccount = value;
					this.SendPropertyChanged("ASC_ThisAccount");
					this.OnASC_ThisAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASC_Username", DbType="NVarChar(200)")]
		public string ASC_Username
		{
			get
			{
				return this._ASC_Username;
			}
			set
			{
				if ((this._ASC_Username != value))
				{
					this.OnASC_UsernameChanging(value);
					this.SendPropertyChanging();
					this._ASC_Username = value;
					this.SendPropertyChanged("ASC_Username");
					this.OnASC_UsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASC_Password", DbType="NVarChar(100)")]
		public string ASC_Password
		{
			get
			{
				return this._ASC_Password;
			}
			set
			{
				if ((this._ASC_Password != value))
				{
					this.OnASC_PasswordChanging(value);
					this.SendPropertyChanging();
					this._ASC_Password = value;
					this.SendPropertyChanged("ASC_Password");
					this.OnASC_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasExtenders", DbType="Bit")]
		public System.Nullable<bool> HasExtenders
		{
			get
			{
				return this._HasExtenders;
			}
			set
			{
				if ((this._HasExtenders != value))
				{
					this.OnHasExtendersChanging(value);
					this.SendPropertyChanging();
					this._HasExtenders = value;
					this.SendPropertyChanged("HasExtenders");
					this.OnHasExtendersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOutUser", DbType="NVarChar(50)")]
		public string CheckOutUser
		{
			get
			{
				return this._CheckOutUser;
			}
			set
			{
				if ((this._CheckOutUser != value))
				{
					this.OnCheckOutUserChanging(value);
					this.SendPropertyChanging();
					this._CheckOutUser = value;
					this.SendPropertyChanged("CheckOutUser");
					this.OnCheckOutUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckOutTime
		{
			get
			{
				return this._CheckOutTime;
			}
			set
			{
				if ((this._CheckOutTime != value))
				{
					this.OnCheckOutTimeChanging(value);
					this.SendPropertyChanging();
					this._CheckOutTime = value;
					this.SendPropertyChanged("CheckOutTime");
					this.OnCheckOutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOutLocation", DbType="NVarChar(50)")]
		public string CheckOutLocation
		{
			get
			{
				return this._CheckOutLocation;
			}
			set
			{
				if ((this._CheckOutLocation != value))
				{
					this.OnCheckOutLocationChanging(value);
					this.SendPropertyChanging();
					this._CheckOutLocation = value;
					this.SendPropertyChanged("CheckOutLocation");
					this.OnCheckOutLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schedule", DbType="NVarChar(2000)")]
		public string Schedule
		{
			get
			{
				return this._Schedule;
			}
			set
			{
				if ((this._Schedule != value))
				{
					this.OnScheduleChanging(value);
					this.SendPropertyChanging();
					this._Schedule = value;
					this.SendPropertyChanged("Schedule");
					this.OnScheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostDollar", DbType="Money")]
		public System.Nullable<decimal> CostDollar
		{
			get
			{
				return this._CostDollar;
			}
			set
			{
				if ((this._CostDollar != value))
				{
					this.OnCostDollarChanging(value);
					this.SendPropertyChanging();
					this._CostDollar = value;
					this.SendPropertyChanged("CostDollar");
					this.OnCostDollarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsDollar", DbType="Money")]
		public System.Nullable<decimal> SavingsDollar
		{
			get
			{
				return this._SavingsDollar;
			}
			set
			{
				if ((this._SavingsDollar != value))
				{
					this.OnSavingsDollarChanging(value);
					this.SendPropertyChanging();
					this._SavingsDollar = value;
					this.SendPropertyChanged("SavingsDollar");
					this.OnSavingsDollarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostTime", DbType="Int")]
		public System.Nullable<int> CostTime
		{
			get
			{
				return this._CostTime;
			}
			set
			{
				if ((this._CostTime != value))
				{
					this.OnCostTimeChanging(value);
					this.SendPropertyChanging();
					this._CostTime = value;
					this.SendPropertyChanged("CostTime");
					this.OnCostTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsTime", DbType="Int")]
		public System.Nullable<int> SavingsTime
		{
			get
			{
				return this._SavingsTime;
			}
			set
			{
				if ((this._SavingsTime != value))
				{
					this.OnSavingsTimeChanging(value);
					this.SendPropertyChanging();
					this._SavingsTime = value;
					this.SendPropertyChanged("SavingsTime");
					this.OnSavingsTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Published", DbType="Bit NOT NULL")]
		public bool Published
		{
			get
			{
				return this._Published;
			}
			set
			{
				if ((this._Published != value))
				{
					this.OnPublishedChanging(value);
					this.SendPropertyChanging();
					this._Published = value;
					this.SendPropertyChanged("Published");
					this.OnPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishingTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishingTime
		{
			get
			{
				return this._PublishingTime;
			}
			set
			{
				if ((this._PublishingTime != value))
				{
					this.OnPublishingTimeChanging(value);
					this.SendPropertyChanging();
					this._PublishingTime = value;
					this.SendPropertyChanged("PublishingTime");
					this.OnPublishingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionServer", DbType="NVarChar(200)")]
		public string ActionServer
		{
			get
			{
				return this._ActionServer;
			}
			set
			{
				if ((this._ActionServer != value))
				{
					this.OnActionServerChanging(value);
					this.SendPropertyChanging();
					this._ActionServer = value;
					this.SendPropertyChanged("ActionServer");
					this.OnActionServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsePreferredServers", DbType="Bit")]
		public System.Nullable<bool> UsePreferredServers
		{
			get
			{
				return this._UsePreferredServers;
			}
			set
			{
				if ((this._UsePreferredServers != value))
				{
					this.OnUsePreferredServersChanging(value);
					this.SendPropertyChanging();
					this._UsePreferredServers = value;
					this.SendPropertyChanged("UsePreferredServers");
					this.OnUsePreferredServersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogCommonData", DbType="Bit")]
		public System.Nullable<bool> LogCommonData
		{
			get
			{
				return this._LogCommonData;
			}
			set
			{
				if ((this._LogCommonData != value))
				{
					this.OnLogCommonDataChanging(value);
					this.SendPropertyChanging();
					this._LogCommonData = value;
					this.SendPropertyChanged("LogCommonData");
					this.OnLogCommonDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogSpecificData", DbType="Bit")]
		public System.Nullable<bool> LogSpecificData
		{
			get
			{
				return this._LogSpecificData;
			}
			set
			{
				if ((this._LogSpecificData != value))
				{
					this.OnLogSpecificDataChanging(value);
					this.SendPropertyChanging();
					this._LogSpecificData = value;
					this.SendPropertyChanged("LogSpecificData");
					this.OnLogSpecificDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolicyTimeout", DbType="Int")]
		public System.Nullable<int> PolicyTimeout
		{
			get
			{
				return this._PolicyTimeout;
			}
			set
			{
				if ((this._PolicyTimeout != value))
				{
					this.OnPolicyTimeoutChanging(value);
					this.SendPropertyChanging();
					this._PolicyTimeout = value;
					this.SendPropertyChanged("PolicyTimeout");
					this.OnPolicyTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyOnFail", DbType="Bit")]
		public System.Nullable<bool> NotifyOnFail
		{
			get
			{
				return this._NotifyOnFail;
			}
			set
			{
				if ((this._NotifyOnFail != value))
				{
					this.OnNotifyOnFailChanging(value);
					this.SendPropertyChanging();
					this._NotifyOnFail = value;
					this.SendPropertyChanged("NotifyOnFail");
					this.OnNotifyOnFailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxParallelRequests", DbType="Int NOT NULL")]
		public int MaxParallelRequests
		{
			get
			{
				return this._MaxParallelRequests;
			}
			set
			{
				if ((this._MaxParallelRequests != value))
				{
					this.OnMaxParallelRequestsChanging(value);
					this.SendPropertyChanging();
					this._MaxParallelRequests = value;
					this.SendPropertyChanged("MaxParallelRequests");
					this.OnMaxParallelRequestsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunInPipelineMode", DbType="Bit NOT NULL")]
		public bool RunInPipelineMode
		{
			get
			{
				return this._RunInPipelineMode;
			}
			set
			{
				if ((this._RunInPipelineMode != value))
				{
					this.OnRunInPipelineModeChanging(value);
					this.SendPropertyChanging();
					this._RunInPipelineMode = value;
					this.SendPropertyChanged("RunInPipelineMode");
					this.OnRunInPipelineModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDataDefinition", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ReturnDataDefinition
		{
			get
			{
				return this._ReturnDataDefinition;
			}
			set
			{
				if ((this._ReturnDataDefinition != value))
				{
					this.OnReturnDataDefinitionChanging(value);
					this.SendPropertyChanging();
					this._ReturnDataDefinition = value;
					this.SendPropertyChanged("ReturnDataDefinition");
					this.OnReturnDataDefinitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="POLICIES__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_", Storage="__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_", ThisKey="UniqueID", OtherKey="RunbookId")]
		public EntitySet<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_> _Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_
		{
			get
			{
				return this.@__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_;
			}
			set
			{
				this.@__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="POLICIES_POLICY_PUBLISH_QUEUE", Storage="_POLICY_PUBLISH_QUEUE", ThisKey="UniqueID", OtherKey="PolicyID")]
		public EntitySet<POLICY_PUBLISH_QUEUE> POLICY_PUBLISH_QUEUE
		{
			get
			{
				return this._POLICY_PUBLISH_QUEUE;
			}
			set
			{
				this._POLICY_PUBLISH_QUEUE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="POLICIES__Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_" +
			"", Storage="__Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_", ThisKey="UniqueID", OtherKey="RunbookId")]
		public EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_> _Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_
		{
			get
			{
				return this.@__Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_;
			}
			set
			{
				this.@__Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_(_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_ entity)
		{
			this.SendPropertyChanging();
			entity.POLICIES = this;
		}
		
		private void detach__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_(_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___Jobs_ entity)
		{
			this.SendPropertyChanging();
			entity.POLICIES = null;
		}
		
		private void attach_POLICY_PUBLISH_QUEUE(POLICY_PUBLISH_QUEUE entity)
		{
			this.SendPropertyChanging();
			entity.POLICIES = this;
		}
		
		private void detach_POLICY_PUBLISH_QUEUE(POLICY_PUBLISH_QUEUE entity)
		{
			this.SendPropertyChanging();
			entity.POLICIES = null;
		}
		
		private void attach__Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_(_Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_ entity)
		{
			this.SendPropertyChanging();
			entity.POLICIES = this;
		}
		
		private void detach__Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_(_Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_ entity)
		{
			this.SendPropertyChanging();
			entity.POLICIES = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.POLICIES_VIEW")]
	public partial class POLICIES_VIEW
	{
		
		private System.Guid _UniqueID;
		
		private string _Name;
		
		private System.Guid _ParentID;
		
		private System.DateTime _CreationTime;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _LastModified;
		
		private string _LastModifiedBy;
		
		private bool _Enabled;
		
		private System.Nullable<int> _Flags;
		
		private System.Nullable<bool> _ASC_UseServiceSecurity;
		
		private System.Nullable<bool> _ASC_ThisAccount;
		
		private string _ASC_Username;
		
		private string _ASC_Password;
		
		private System.Nullable<bool> _HasExtenders;
		
		private System.Nullable<System.Guid> _Type;
		
		private string _CheckOutUser;
		
		private System.Nullable<System.DateTime> _CheckOutTime;
		
		private string _CheckOutLocation;
		
		private string _Schedule;
		
		private bool _Deleted;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<decimal> _CostDollar;
		
		private System.Nullable<decimal> _SavingsDollar;
		
		private System.Nullable<int> _CostTime;
		
		private System.Nullable<int> _SavingsTime;
		
		private bool _Published;
		
		private System.Nullable<System.DateTime> _PublishingTime;
		
		private string _ActionServer;
		
		private System.Nullable<bool> _UsePreferredServers;
		
		private System.Nullable<bool> _LogCommonData;
		
		private System.Nullable<bool> _LogSpecificData;
		
		private string _Description;
		
		private System.Nullable<int> _PolicyTimeout;
		
		private System.Nullable<bool> _NotifyOnFail;
		
		private int _MaxParallelRequests;
		
		private int _Version;
		
		private int _CustomStart;
		
		private System.Nullable<int> _QueuedRequests;
		
		private System.Nullable<int> _RunningPolicyInstances;
		
		private int _EnableMultipleRequests;
		
		private System.Nullable<int> _PolicyPositionX;
		
		private System.Nullable<int> _PolicyPositionY;
		
		public POLICIES_VIEW()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this._UniqueID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this._CreationTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this._LastModified = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="NVarChar(50)")]
		public string LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this._LastModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this._Enabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int")]
		public System.Nullable<int> Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this._Flags = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASC_UseServiceSecurity", DbType="Bit")]
		public System.Nullable<bool> ASC_UseServiceSecurity
		{
			get
			{
				return this._ASC_UseServiceSecurity;
			}
			set
			{
				if ((this._ASC_UseServiceSecurity != value))
				{
					this._ASC_UseServiceSecurity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASC_ThisAccount", DbType="Bit")]
		public System.Nullable<bool> ASC_ThisAccount
		{
			get
			{
				return this._ASC_ThisAccount;
			}
			set
			{
				if ((this._ASC_ThisAccount != value))
				{
					this._ASC_ThisAccount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASC_Username", DbType="NVarChar(200)")]
		public string ASC_Username
		{
			get
			{
				return this._ASC_Username;
			}
			set
			{
				if ((this._ASC_Username != value))
				{
					this._ASC_Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASC_Password", DbType="NVarChar(100)")]
		public string ASC_Password
		{
			get
			{
				return this._ASC_Password;
			}
			set
			{
				if ((this._ASC_Password != value))
				{
					this._ASC_Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasExtenders", DbType="Bit")]
		public System.Nullable<bool> HasExtenders
		{
			get
			{
				return this._HasExtenders;
			}
			set
			{
				if ((this._HasExtenders != value))
				{
					this._HasExtenders = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOutUser", DbType="NVarChar(50)")]
		public string CheckOutUser
		{
			get
			{
				return this._CheckOutUser;
			}
			set
			{
				if ((this._CheckOutUser != value))
				{
					this._CheckOutUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckOutTime
		{
			get
			{
				return this._CheckOutTime;
			}
			set
			{
				if ((this._CheckOutTime != value))
				{
					this._CheckOutTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOutLocation", DbType="NVarChar(50)")]
		public string CheckOutLocation
		{
			get
			{
				return this._CheckOutLocation;
			}
			set
			{
				if ((this._CheckOutLocation != value))
				{
					this._CheckOutLocation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schedule", DbType="NVarChar(2000)")]
		public string Schedule
		{
			get
			{
				return this._Schedule;
			}
			set
			{
				if ((this._Schedule != value))
				{
					this._Schedule = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this._Deleted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this._Priority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostDollar", DbType="Money")]
		public System.Nullable<decimal> CostDollar
		{
			get
			{
				return this._CostDollar;
			}
			set
			{
				if ((this._CostDollar != value))
				{
					this._CostDollar = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsDollar", DbType="Money")]
		public System.Nullable<decimal> SavingsDollar
		{
			get
			{
				return this._SavingsDollar;
			}
			set
			{
				if ((this._SavingsDollar != value))
				{
					this._SavingsDollar = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostTime", DbType="Int")]
		public System.Nullable<int> CostTime
		{
			get
			{
				return this._CostTime;
			}
			set
			{
				if ((this._CostTime != value))
				{
					this._CostTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsTime", DbType="Int")]
		public System.Nullable<int> SavingsTime
		{
			get
			{
				return this._SavingsTime;
			}
			set
			{
				if ((this._SavingsTime != value))
				{
					this._SavingsTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Published", DbType="Bit NOT NULL")]
		public bool Published
		{
			get
			{
				return this._Published;
			}
			set
			{
				if ((this._Published != value))
				{
					this._Published = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishingTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishingTime
		{
			get
			{
				return this._PublishingTime;
			}
			set
			{
				if ((this._PublishingTime != value))
				{
					this._PublishingTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionServer", DbType="NVarChar(200)")]
		public string ActionServer
		{
			get
			{
				return this._ActionServer;
			}
			set
			{
				if ((this._ActionServer != value))
				{
					this._ActionServer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsePreferredServers", DbType="Bit")]
		public System.Nullable<bool> UsePreferredServers
		{
			get
			{
				return this._UsePreferredServers;
			}
			set
			{
				if ((this._UsePreferredServers != value))
				{
					this._UsePreferredServers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogCommonData", DbType="Bit")]
		public System.Nullable<bool> LogCommonData
		{
			get
			{
				return this._LogCommonData;
			}
			set
			{
				if ((this._LogCommonData != value))
				{
					this._LogCommonData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogSpecificData", DbType="Bit")]
		public System.Nullable<bool> LogSpecificData
		{
			get
			{
				return this._LogSpecificData;
			}
			set
			{
				if ((this._LogSpecificData != value))
				{
					this._LogSpecificData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolicyTimeout", DbType="Int")]
		public System.Nullable<int> PolicyTimeout
		{
			get
			{
				return this._PolicyTimeout;
			}
			set
			{
				if ((this._PolicyTimeout != value))
				{
					this._PolicyTimeout = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyOnFail", DbType="Bit")]
		public System.Nullable<bool> NotifyOnFail
		{
			get
			{
				return this._NotifyOnFail;
			}
			set
			{
				if ((this._NotifyOnFail != value))
				{
					this._NotifyOnFail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxParallelRequests", DbType="Int NOT NULL")]
		public int MaxParallelRequests
		{
			get
			{
				return this._MaxParallelRequests;
			}
			set
			{
				if ((this._MaxParallelRequests != value))
				{
					this._MaxParallelRequests = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomStart", DbType="Int NOT NULL")]
		public int CustomStart
		{
			get
			{
				return this._CustomStart;
			}
			set
			{
				if ((this._CustomStart != value))
				{
					this._CustomStart = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueuedRequests", DbType="Int")]
		public System.Nullable<int> QueuedRequests
		{
			get
			{
				return this._QueuedRequests;
			}
			set
			{
				if ((this._QueuedRequests != value))
				{
					this._QueuedRequests = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunningPolicyInstances", DbType="Int")]
		public System.Nullable<int> RunningPolicyInstances
		{
			get
			{
				return this._RunningPolicyInstances;
			}
			set
			{
				if ((this._RunningPolicyInstances != value))
				{
					this._RunningPolicyInstances = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableMultipleRequests", DbType="Int NOT NULL")]
		public int EnableMultipleRequests
		{
			get
			{
				return this._EnableMultipleRequests;
			}
			set
			{
				if ((this._EnableMultipleRequests != value))
				{
					this._EnableMultipleRequests = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolicyPositionX", DbType="Int")]
		public System.Nullable<int> PolicyPositionX
		{
			get
			{
				return this._PolicyPositionX;
			}
			set
			{
				if ((this._PolicyPositionX != value))
				{
					this._PolicyPositionX = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolicyPositionY", DbType="Int")]
		public System.Nullable<int> PolicyPositionY
		{
			get
			{
				return this._PolicyPositionY;
			}
			set
			{
				if ((this._PolicyPositionY != value))
				{
					this._PolicyPositionY = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.POLICY_IMAGES")]
	public partial class POLICY_IMAGES
	{
		
		private System.Guid _PolicyID;
		
		private System.Data.Linq.Binary _Diagram;
		
		private System.Data.Linq.Binary _Thumbnail;
		
		private string _ContentType;
		
		public POLICY_IMAGES()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolicyID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PolicyID
		{
			get
			{
				return this._PolicyID;
			}
			set
			{
				if ((this._PolicyID != value))
				{
					this._PolicyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagram", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Diagram
		{
			get
			{
				return this._Diagram;
			}
			set
			{
				if ((this._Diagram != value))
				{
					this._Diagram = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thumbnail", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Thumbnail
		{
			get
			{
				return this._Thumbnail;
			}
			set
			{
				if ((this._Thumbnail != value))
				{
					this._Thumbnail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentType", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this._ContentType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.POLICY_PUBLISH_QUEUE")]
	public partial class POLICY_PUBLISH_QUEUE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PolicyID;
		
		private string _Data;
		
		private long _SeqNumber;
		
		private System.Nullable<System.Guid> _AssignedActionServer;
		
		private int _AssignedStamp;
		
		private bool _StopRequested;
		
		private System.Nullable<System.DateTime> _Heartbeat;
		
		private string _TargetActionServers;
		
		private string _Username;
		
		private string _Password;
		
		private bool _IsConstructed;
		
		private System.Nullable<long> _ParentSeqNumber;
		
		private bool _ParentIsWaiting;
		
		private EntityRef<ACTIONSERVERS> _ACTIONSERVERS;
		
		private EntityRef<POLICIES> _POLICIES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPolicyIDChanging(System.Guid value);
    partial void OnPolicyIDChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnSeqNumberChanging(long value);
    partial void OnSeqNumberChanged();
    partial void OnAssignedActionServerChanging(System.Nullable<System.Guid> value);
    partial void OnAssignedActionServerChanged();
    partial void OnAssignedStampChanging(int value);
    partial void OnAssignedStampChanged();
    partial void OnStopRequestedChanging(bool value);
    partial void OnStopRequestedChanged();
    partial void OnHeartbeatChanging(System.Nullable<System.DateTime> value);
    partial void OnHeartbeatChanged();
    partial void OnTargetActionServersChanging(string value);
    partial void OnTargetActionServersChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsConstructedChanging(bool value);
    partial void OnIsConstructedChanged();
    partial void OnParentSeqNumberChanging(System.Nullable<long> value);
    partial void OnParentSeqNumberChanged();
    partial void OnParentIsWaitingChanging(bool value);
    partial void OnParentIsWaitingChanged();
    #endregion
		
		public POLICY_PUBLISH_QUEUE()
		{
			this._ACTIONSERVERS = default(EntityRef<ACTIONSERVERS>);
			this._POLICIES = default(EntityRef<POLICIES>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolicyID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PolicyID
		{
			get
			{
				return this._PolicyID;
			}
			set
			{
				if ((this._PolicyID != value))
				{
					if (this._POLICIES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPolicyIDChanging(value);
					this.SendPropertyChanging();
					this._PolicyID = value;
					this.SendPropertyChanged("PolicyID");
					this.OnPolicyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNumber", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long SeqNumber
		{
			get
			{
				return this._SeqNumber;
			}
			set
			{
				if ((this._SeqNumber != value))
				{
					this.OnSeqNumberChanging(value);
					this.SendPropertyChanging();
					this._SeqNumber = value;
					this.SendPropertyChanged("SeqNumber");
					this.OnSeqNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedActionServer", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AssignedActionServer
		{
			get
			{
				return this._AssignedActionServer;
			}
			set
			{
				if ((this._AssignedActionServer != value))
				{
					if (this._ACTIONSERVERS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssignedActionServerChanging(value);
					this.SendPropertyChanging();
					this._AssignedActionServer = value;
					this.SendPropertyChanged("AssignedActionServer");
					this.OnAssignedActionServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedStamp", DbType="Int NOT NULL")]
		public int AssignedStamp
		{
			get
			{
				return this._AssignedStamp;
			}
			set
			{
				if ((this._AssignedStamp != value))
				{
					this.OnAssignedStampChanging(value);
					this.SendPropertyChanging();
					this._AssignedStamp = value;
					this.SendPropertyChanged("AssignedStamp");
					this.OnAssignedStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopRequested", DbType="Bit NOT NULL")]
		public bool StopRequested
		{
			get
			{
				return this._StopRequested;
			}
			set
			{
				if ((this._StopRequested != value))
				{
					this.OnStopRequestedChanging(value);
					this.SendPropertyChanging();
					this._StopRequested = value;
					this.SendPropertyChanged("StopRequested");
					this.OnStopRequestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heartbeat", DbType="DateTime")]
		public System.Nullable<System.DateTime> Heartbeat
		{
			get
			{
				return this._Heartbeat;
			}
			set
			{
				if ((this._Heartbeat != value))
				{
					this.OnHeartbeatChanging(value);
					this.SendPropertyChanging();
					this._Heartbeat = value;
					this.SendPropertyChanged("Heartbeat");
					this.OnHeartbeatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetActionServers", DbType="NVarChar(2000)")]
		public string TargetActionServers
		{
			get
			{
				return this._TargetActionServers;
			}
			set
			{
				if ((this._TargetActionServers != value))
				{
					this.OnTargetActionServersChanging(value);
					this.SendPropertyChanging();
					this._TargetActionServers = value;
					this.SendPropertyChanged("TargetActionServers");
					this.OnTargetActionServersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(2000)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(2000)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConstructed", DbType="Bit NOT NULL")]
		public bool IsConstructed
		{
			get
			{
				return this._IsConstructed;
			}
			set
			{
				if ((this._IsConstructed != value))
				{
					this.OnIsConstructedChanging(value);
					this.SendPropertyChanging();
					this._IsConstructed = value;
					this.SendPropertyChanged("IsConstructed");
					this.OnIsConstructedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentSeqNumber", DbType="BigInt")]
		public System.Nullable<long> ParentSeqNumber
		{
			get
			{
				return this._ParentSeqNumber;
			}
			set
			{
				if ((this._ParentSeqNumber != value))
				{
					this.OnParentSeqNumberChanging(value);
					this.SendPropertyChanging();
					this._ParentSeqNumber = value;
					this.SendPropertyChanged("ParentSeqNumber");
					this.OnParentSeqNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentIsWaiting", DbType="Bit NOT NULL")]
		public bool ParentIsWaiting
		{
			get
			{
				return this._ParentIsWaiting;
			}
			set
			{
				if ((this._ParentIsWaiting != value))
				{
					this.OnParentIsWaitingChanging(value);
					this.SendPropertyChanging();
					this._ParentIsWaiting = value;
					this.SendPropertyChanged("ParentIsWaiting");
					this.OnParentIsWaitingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACTIONSERVERS_POLICY_PUBLISH_QUEUE", Storage="_ACTIONSERVERS", ThisKey="AssignedActionServer", OtherKey="UniqueID", IsForeignKey=true)]
		public ACTIONSERVERS ACTIONSERVERS
		{
			get
			{
				return this._ACTIONSERVERS.Entity;
			}
			set
			{
				ACTIONSERVERS previousValue = this._ACTIONSERVERS.Entity;
				if (((previousValue != value) 
							|| (this._ACTIONSERVERS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACTIONSERVERS.Entity = null;
						previousValue.POLICY_PUBLISH_QUEUE.Remove(this);
					}
					this._ACTIONSERVERS.Entity = value;
					if ((value != null))
					{
						value.POLICY_PUBLISH_QUEUE.Add(this);
						this._AssignedActionServer = value.UniqueID;
					}
					else
					{
						this._AssignedActionServer = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ACTIONSERVERS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="POLICIES_POLICY_PUBLISH_QUEUE", Storage="_POLICIES", ThisKey="PolicyID", OtherKey="UniqueID", IsForeignKey=true, DeleteOnNull=true)]
		public POLICIES POLICIES
		{
			get
			{
				return this._POLICIES.Entity;
			}
			set
			{
				POLICIES previousValue = this._POLICIES.Entity;
				if (((previousValue != value) 
							|| (this._POLICIES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POLICIES.Entity = null;
						previousValue.POLICY_PUBLISH_QUEUE.Remove(this);
					}
					this._POLICIES.Entity = value;
					if ((value != null))
					{
						value.POLICY_PUBLISH_QUEUE.Add(this);
						this._PolicyID = value.UniqueID;
					}
					else
					{
						this._PolicyID = default(System.Guid);
					}
					this.SendPropertyChanged("POLICIES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.POLICY_REQUEST_ACTION_SERVERS")]
	public partial class POLICY_REQUEST_ACTION_SERVERS
	{
		
		private long _SeqNumber;
		
		private string _ActionServerName;
		
		private int _Role;
		
		public POLICY_REQUEST_ACTION_SERVERS()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNumber", DbType="BigInt NOT NULL")]
		public long SeqNumber
		{
			get
			{
				return this._SeqNumber;
			}
			set
			{
				if ((this._SeqNumber != value))
				{
					this._SeqNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionServerName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ActionServerName
		{
			get
			{
				return this._ActionServerName;
			}
			set
			{
				if ((this._ActionServerName != value))
				{
					this._ActionServerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="Int NOT NULL")]
		public int Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this._Role = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.POLICY_REQUEST_HISTORY")]
	public partial class POLICY_REQUEST_HISTORY
	{
		
		private long _SeqNumber;
		
		private System.Guid _PolicyID;
		
		private System.Nullable<System.Guid> _AssignedActionServer;
		
		private System.DateTime _Created;
		
		private int _Active;
		
		private string _TargetActionServers;
		
		private System.Nullable<bool> _IsConstructed;
		
		private System.Nullable<System.DateTime> _Unpublished;
		
		private System.Nullable<long> _ParentSeqNumber;
		
		private bool _ParentIsWaiting;
		
		public POLICY_REQUEST_HISTORY()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNumber", DbType="BigInt NOT NULL")]
		public long SeqNumber
		{
			get
			{
				return this._SeqNumber;
			}
			set
			{
				if ((this._SeqNumber != value))
				{
					this._SeqNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolicyID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PolicyID
		{
			get
			{
				return this._PolicyID;
			}
			set
			{
				if ((this._PolicyID != value))
				{
					this._PolicyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedActionServer", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AssignedActionServer
		{
			get
			{
				return this._AssignedActionServer;
			}
			set
			{
				if ((this._AssignedActionServer != value))
				{
					this._AssignedActionServer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this._Created = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Int NOT NULL")]
		public int Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetActionServers", DbType="NVarChar(2000)")]
		public string TargetActionServers
		{
			get
			{
				return this._TargetActionServers;
			}
			set
			{
				if ((this._TargetActionServers != value))
				{
					this._TargetActionServers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConstructed", DbType="Bit")]
		public System.Nullable<bool> IsConstructed
		{
			get
			{
				return this._IsConstructed;
			}
			set
			{
				if ((this._IsConstructed != value))
				{
					this._IsConstructed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unpublished", DbType="DateTime")]
		public System.Nullable<System.DateTime> Unpublished
		{
			get
			{
				return this._Unpublished;
			}
			set
			{
				if ((this._Unpublished != value))
				{
					this._Unpublished = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentSeqNumber", DbType="BigInt")]
		public System.Nullable<long> ParentSeqNumber
		{
			get
			{
				return this._ParentSeqNumber;
			}
			set
			{
				if ((this._ParentSeqNumber != value))
				{
					this._ParentSeqNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentIsWaiting", DbType="Bit NOT NULL")]
		public bool ParentIsWaiting
		{
			get
			{
				return this._ParentIsWaiting;
			}
			set
			{
				if ((this._ParentIsWaiting != value))
				{
					this._ParentIsWaiting = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.POLICYINSTANCES")]
	public partial class POLICYINSTANCES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _PolicyID;
		
		private System.Nullable<System.Guid> _ActionServer;
		
		private string _State;
		
		private string _Status;
		
		private System.DateTime _TimeStarted;
		
		private System.Nullable<System.DateTime> _TimeEnded;
		
		private System.Nullable<int> _ProcessID;
		
		private System.Nullable<long> _SeqNumber;
		
		private System.Nullable<System.Guid> _JobId;
		
		private EntitySet<POLICYRETURNDATA> _POLICYRETURNDATA;
		
		private EntitySet<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_> @__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnPolicyIDChanging(System.Guid value);
    partial void OnPolicyIDChanged();
    partial void OnActionServerChanging(System.Nullable<System.Guid> value);
    partial void OnActionServerChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnTimeStartedChanging(System.DateTime value);
    partial void OnTimeStartedChanged();
    partial void OnTimeEndedChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeEndedChanged();
    partial void OnProcessIDChanging(System.Nullable<int> value);
    partial void OnProcessIDChanged();
    partial void OnSeqNumberChanging(System.Nullable<long> value);
    partial void OnSeqNumberChanged();
    partial void OnJobIdChanging(System.Nullable<System.Guid> value);
    partial void OnJobIdChanged();
    #endregion
		
		public POLICYINSTANCES()
		{
			this._POLICYRETURNDATA = new EntitySet<POLICYRETURNDATA>(new Action<POLICYRETURNDATA>(this.attach_POLICYRETURNDATA), new Action<POLICYRETURNDATA>(this.detach_POLICYRETURNDATA));
			this.@__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_ = new EntitySet<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_>(new Action<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_>(this.attach__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_), new Action<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_>(this.detach__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolicyID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PolicyID
		{
			get
			{
				return this._PolicyID;
			}
			set
			{
				if ((this._PolicyID != value))
				{
					this.OnPolicyIDChanging(value);
					this.SendPropertyChanging();
					this._PolicyID = value;
					this.SendPropertyChanged("PolicyID");
					this.OnPolicyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionServer", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ActionServer
		{
			get
			{
				return this._ActionServer;
			}
			set
			{
				if ((this._ActionServer != value))
				{
					this.OnActionServerChanging(value);
					this.SendPropertyChanging();
					this._ActionServer = value;
					this.SendPropertyChanged("ActionServer");
					this.OnActionServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(64)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(64)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStarted", DbType="DateTime NOT NULL")]
		public System.DateTime TimeStarted
		{
			get
			{
				return this._TimeStarted;
			}
			set
			{
				if ((this._TimeStarted != value))
				{
					this.OnTimeStartedChanging(value);
					this.SendPropertyChanging();
					this._TimeStarted = value;
					this.SendPropertyChanged("TimeStarted");
					this.OnTimeStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEnded", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeEnded
		{
			get
			{
				return this._TimeEnded;
			}
			set
			{
				if ((this._TimeEnded != value))
				{
					this.OnTimeEndedChanging(value);
					this.SendPropertyChanging();
					this._TimeEnded = value;
					this.SendPropertyChanged("TimeEnded");
					this.OnTimeEndedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessID", DbType="Int")]
		public System.Nullable<int> ProcessID
		{
			get
			{
				return this._ProcessID;
			}
			set
			{
				if ((this._ProcessID != value))
				{
					this.OnProcessIDChanging(value);
					this.SendPropertyChanging();
					this._ProcessID = value;
					this.SendPropertyChanged("ProcessID");
					this.OnProcessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNumber", DbType="BigInt")]
		public System.Nullable<long> SeqNumber
		{
			get
			{
				return this._SeqNumber;
			}
			set
			{
				if ((this._SeqNumber != value))
				{
					this.OnSeqNumberChanging(value);
					this.SendPropertyChanging();
					this._SeqNumber = value;
					this.SendPropertyChanged("SeqNumber");
					this.OnSeqNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._JobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="POLICYINSTANCES_POLICYRETURNDATA", Storage="_POLICYRETURNDATA", ThisKey="UniqueID", OtherKey="InstanceID")]
		public EntitySet<POLICYRETURNDATA> POLICYRETURNDATA
		{
			get
			{
				return this._POLICYRETURNDATA;
			}
			set
			{
				this._POLICYRETURNDATA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="POLICYINSTANCES__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookIn" +
			"stanceInputParameters_", Storage="__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputPara" +
			"meters_", ThisKey="UniqueID", OtherKey="RunbookInstanceId")]
		public EntitySet<_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_> _Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_
		{
			get
			{
				return this.@__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_;
			}
			set
			{
				this.@__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_POLICYRETURNDATA(POLICYRETURNDATA entity)
		{
			this.SendPropertyChanging();
			entity.POLICYINSTANCES = this;
		}
		
		private void detach_POLICYRETURNDATA(POLICYRETURNDATA entity)
		{
			this.SendPropertyChanging();
			entity.POLICYINSTANCES = null;
		}
		
		private void attach__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_(_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_ entity)
		{
			this.SendPropertyChanging();
			entity.POLICYINSTANCES = this;
		}
		
		private void detach__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_(_Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_ entity)
		{
			this.SendPropertyChanging();
			entity.POLICYINSTANCES = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.POLICYRETURNDATA")]
	public partial class POLICYRETURNDATA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UniqueID;
		
		private System.Guid _InstanceID;
		
		private System.Guid _ReturnDataId;
		
		private System.Nullable<System.Guid> _RunbookParameterId;
		
		private string _Code;
		
		private string _Value;
		
		private System.Nullable<int> _ObjectInstanceNumber;
		
		private EntityRef<POLICYINSTANCES> _POLICYINSTANCES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(long value);
    partial void OnUniqueIDChanged();
    partial void OnInstanceIDChanging(System.Guid value);
    partial void OnInstanceIDChanged();
    partial void OnReturnDataIdChanging(System.Guid value);
    partial void OnReturnDataIdChanged();
    partial void OnRunbookParameterIdChanging(System.Nullable<System.Guid> value);
    partial void OnRunbookParameterIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnObjectInstanceNumberChanging(System.Nullable<int> value);
    partial void OnObjectInstanceNumberChanged();
    #endregion
		
		public POLICYRETURNDATA()
		{
			this._POLICYINSTANCES = default(EntityRef<POLICYINSTANCES>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstanceID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid InstanceID
		{
			get
			{
				return this._InstanceID;
			}
			set
			{
				if ((this._InstanceID != value))
				{
					if (this._POLICYINSTANCES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._InstanceID = value;
					this.SendPropertyChanged("InstanceID");
					this.OnInstanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDataId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ReturnDataId
		{
			get
			{
				return this._ReturnDataId;
			}
			set
			{
				if ((this._ReturnDataId != value))
				{
					this.OnReturnDataIdChanging(value);
					this.SendPropertyChanging();
					this._ReturnDataId = value;
					this.SendPropertyChanged("ReturnDataId");
					this.OnReturnDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookParameterId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RunbookParameterId
		{
			get
			{
				return this._RunbookParameterId;
			}
			set
			{
				if ((this._RunbookParameterId != value))
				{
					this.OnRunbookParameterIdChanging(value);
					this.SendPropertyChanging();
					this._RunbookParameterId = value;
					this.SendPropertyChanged("RunbookParameterId");
					this.OnRunbookParameterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectInstanceNumber", DbType="Int")]
		public System.Nullable<int> ObjectInstanceNumber
		{
			get
			{
				return this._ObjectInstanceNumber;
			}
			set
			{
				if ((this._ObjectInstanceNumber != value))
				{
					this.OnObjectInstanceNumberChanging(value);
					this.SendPropertyChanging();
					this._ObjectInstanceNumber = value;
					this.SendPropertyChanged("ObjectInstanceNumber");
					this.OnObjectInstanceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="POLICYINSTANCES_POLICYRETURNDATA", Storage="_POLICYINSTANCES", ThisKey="InstanceID", OtherKey="UniqueID", IsForeignKey=true, DeleteOnNull=true)]
		public POLICYINSTANCES POLICYINSTANCES
		{
			get
			{
				return this._POLICYINSTANCES.Entity;
			}
			set
			{
				POLICYINSTANCES previousValue = this._POLICYINSTANCES.Entity;
				if (((previousValue != value) 
							|| (this._POLICYINSTANCES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POLICYINSTANCES.Entity = null;
						previousValue.POLICYRETURNDATA.Remove(this);
					}
					this._POLICYINSTANCES.Entity = value;
					if ((value != null))
					{
						value.POLICYRETURNDATA.Add(this);
						this._InstanceID = value.UniqueID;
					}
					else
					{
						this._InstanceID = default(System.Guid);
					}
					this.SendPropertyChanged("POLICYINSTANCES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCTINFO")]
	public partial class PRODUCTINFO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _ProductKey;
		
		private string _ExpirationDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnProductKeyChanging(string value);
    partial void OnProductKeyChanged();
    partial void OnExpirationDateChanging(string value);
    partial void OnExpirationDateChanged();
    #endregion
		
		public PRODUCTINFO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductKey", DbType="NVarChar(2000)")]
		public string ProductKey
		{
			get
			{
				return this._ProductKey;
			}
			set
			{
				if ((this._ProductKey != value))
				{
					this.OnProductKeyChanging(value);
					this.SendPropertyChanging();
					this._ProductKey = value;
					this.SendPropertyChanged("ProductKey");
					this.OnProductKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationDate", DbType="NVarChar(2000)")]
		public string ExpirationDate
		{
			get
			{
				return this._ExpirationDate;
			}
			set
			{
				if ((this._ExpirationDate != value))
				{
					this.OnExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._ExpirationDate = value;
					this.SendPropertyChanged("ExpirationDate");
					this.OnExpirationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PUBLISH_POLICY_DATA")]
	public partial class PUBLISH_POLICY_DATA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ParentID;
		
		private string _Key;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnParentIDChanging(System.Guid value);
    partial void OnParentIDChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public PUBLISH_POLICY_DATA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Key", DbType="NVarChar(200)")]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QIKOBJECT")]
	public partial class QIKOBJECT
	{
		
		private System.Guid _UniqueID;
		
		private string _Configuration;
		
		private string _Properties;
		
		private string _Filters;
		
		private string _ExecutionData;
		
		public QIKOBJECT()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this._UniqueID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Configuration", DbType="NVarChar(300)")]
		public string Configuration
		{
			get
			{
				return this._Configuration;
			}
			set
			{
				if ((this._Configuration != value))
				{
					this._Configuration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this._Properties = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filters", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Filters
		{
			get
			{
				return this._Filters;
			}
			set
			{
				if ((this._Filters != value))
				{
					this._Filters = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this._ExecutionData = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.REPORTING")]
	public partial class REPORTING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Computer;
		
		private string _ReportServer;
		
		private string _URL;
		
		private System.Nullable<bool> _NTAuthentication;
		
		private System.Nullable<bool> _SQLAuthentication;
		
		private string _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnComputerChanging(string value);
    partial void OnComputerChanged();
    partial void OnReportServerChanging(string value);
    partial void OnReportServerChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnNTAuthenticationChanging(System.Nullable<bool> value);
    partial void OnNTAuthenticationChanged();
    partial void OnSQLAuthenticationChanging(System.Nullable<bool> value);
    partial void OnSQLAuthenticationChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    #endregion
		
		public REPORTING()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Computer", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Computer
		{
			get
			{
				return this._Computer;
			}
			set
			{
				if ((this._Computer != value))
				{
					this.OnComputerChanging(value);
					this.SendPropertyChanging();
					this._Computer = value;
					this.SendPropertyChanged("Computer");
					this.OnComputerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportServer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ReportServer
		{
			get
			{
				return this._ReportServer;
			}
			set
			{
				if ((this._ReportServer != value))
				{
					this.OnReportServerChanging(value);
					this.SendPropertyChanging();
					this._ReportServer = value;
					this.SendPropertyChanged("ReportServer");
					this.OnReportServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NTAuthentication", DbType="Bit")]
		public System.Nullable<bool> NTAuthentication
		{
			get
			{
				return this._NTAuthentication;
			}
			set
			{
				if ((this._NTAuthentication != value))
				{
					this.OnNTAuthenticationChanging(value);
					this.SendPropertyChanging();
					this._NTAuthentication = value;
					this.SendPropertyChanged("NTAuthentication");
					this.OnNTAuthenticationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SQLAuthentication", DbType="Bit")]
		public System.Nullable<bool> SQLAuthentication
		{
			get
			{
				return this._SQLAuthentication;
			}
			set
			{
				if ((this._SQLAuthentication != value))
				{
					this.OnSQLAuthenticationChanging(value);
					this.SendPropertyChanging();
					this._SQLAuthentication = value;
					this.SendPropertyChanged("SQLAuthentication");
					this.OnSQLAuthenticationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Internal].[Resources]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Internal___Resources_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Guid _UniqueId;
		
		private System.Nullable<long> _ParentId;
		
		private string _Name;
		
		private bool _IsContainer;
		
		private System.Data.Linq.Binary _BinaryPath;
		
		private string _Path;
		
		private string _PathFragment;
		
		private EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_> @__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_;
		
		private EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___Resources_> _Resources_ParentResource;
		
		private EntityRef<_Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_> @__Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_;
		
		private EntityRef<_Microsoft_SystemCenter_Orchestrator_Internal___Resources_> _Parent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUniqueIdChanging(System.Guid value);
    partial void OnUniqueIdChanged();
    partial void OnParentIdChanging(System.Nullable<long> value);
    partial void OnParentIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsContainerChanging(bool value);
    partial void OnIsContainerChanged();
    partial void OnBinaryPathChanging(System.Data.Linq.Binary value);
    partial void OnBinaryPathChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnPathFragmentChanging(string value);
    partial void OnPathFragmentChanged();
    #endregion
		
		public _Microsoft_SystemCenter_Orchestrator_Internal___Resources_()
		{
			this.@__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_ = new EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_>(new Action<_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_>(this.attach__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_), new Action<_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_>(this.detach__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_));
			this._Resources_ParentResource = new EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___Resources_>(new Action<_Microsoft_SystemCenter_Orchestrator_Internal___Resources_>(this.attach_Resources_ParentResource), new Action<_Microsoft_SystemCenter_Orchestrator_Internal___Resources_>(this.detach_Resources_ParentResource));
			this.@__Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_ = default(EntityRef<_Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_>);
			this._Parent = default(EntityRef<_Microsoft_SystemCenter_Orchestrator_Internal___Resources_>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueId
		{
			get
			{
				return this._UniqueId;
			}
			set
			{
				if ((this._UniqueId != value))
				{
					this.OnUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._UniqueId = value;
					this.SendPropertyChanged("UniqueId");
					this.OnUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="BigInt")]
		public System.Nullable<long> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._Parent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsContainer", DbType="Bit NOT NULL")]
		public bool IsContainer
		{
			get
			{
				return this._IsContainer;
			}
			set
			{
				if ((this._IsContainer != value))
				{
					this.OnIsContainerChanging(value);
					this.SendPropertyChanging();
					this._IsContainer = value;
					this.SendPropertyChanged("IsContainer");
					this.OnIsContainerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BinaryPath", DbType="VarBinary(400) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary BinaryPath
		{
			get
			{
				return this._BinaryPath;
			}
			set
			{
				if ((this._BinaryPath != value))
				{
					this.OnBinaryPathChanging(value);
					this.SendPropertyChanging();
					this._BinaryPath = value;
					this.SendPropertyChanged("BinaryPath");
					this.OnBinaryPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathFragment", AutoSync=AutoSync.Always, DbType="NVarChar(450)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never, Expression="(substring([Path],(0),(450)))")]
		public string PathFragment
		{
			get
			{
				return this._PathFragment;
			}
			set
			{
				if ((this._PathFragment != value))
				{
					this.OnPathFragmentChanging(value);
					this.SendPropertyChanging();
					this._PathFragment = value;
					this.SendPropertyChanged("PathFragment");
					this.OnPathFragmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Microsoft_SystemCenter_Orchestrator_Internal___Resources___Microsoft_SystemCente" +
			"r_Orchestrator_Internal___Permissions_", Storage="__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_", ThisKey="Id", OtherKey="ResourceId")]
		public EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_> _Microsoft_SystemCenter_Orchestrator_Internal___Permissions_
		{
			get
			{
				return this.@__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_;
			}
			set
			{
				this.@__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Microsoft_SystemCenter_Orchestrator_Internal___Resources___Microsoft_SystemCente" +
			"r_Orchestrator_Internal___Resources_", Storage="_Resources_ParentResource", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___Resources_> Resources_ParentResource
		{
			get
			{
				return this._Resources_ParentResource;
			}
			set
			{
				this._Resources_ParentResource.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Microsoft_SystemCenter_Orchestrator_Internal___Resources___Microsoft_SystemCente" +
			"r_Orchestrator_Internal___ResourceSettings_", Storage="__Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_", ThisKey="Id", OtherKey="ResourceId", IsUnique=true, IsForeignKey=false)]
		public _Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_ _Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_
		{
			get
			{
				return this.@__Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_.Entity;
			}
			set
			{
				_Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_ previousValue = this.@__Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_.Entity;
				if (((previousValue != value) 
							|| (this.@__Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_.Entity = null;
						previousValue._Microsoft_SystemCenter_Orchestrator_Internal___Resources_ = null;
					}
					this.@__Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_.Entity = value;
					if ((value != null))
					{
						value._Microsoft_SystemCenter_Orchestrator_Internal___Resources_ = this;
					}
					this.SendPropertyChanged("_Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Microsoft_SystemCenter_Orchestrator_Internal___Resources___Microsoft_SystemCente" +
			"r_Orchestrator_Internal___Resources_", Storage="_Parent", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public _Microsoft_SystemCenter_Orchestrator_Internal___Resources_ Parent
		{
			get
			{
				return this._Parent.Entity;
			}
			set
			{
				_Microsoft_SystemCenter_Orchestrator_Internal___Resources_ previousValue = this._Parent.Entity;
				if (((previousValue != value) 
							|| (this._Parent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parent.Entity = null;
						previousValue.Resources_ParentResource.Remove(this);
					}
					this._Parent.Entity = value;
					if ((value != null))
					{
						value.Resources_ParentResource.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Parent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_(_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_ entity)
		{
			this.SendPropertyChanging();
			entity._Microsoft_SystemCenter_Orchestrator_Internal___Resources_ = this;
		}
		
		private void detach__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_(_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_ entity)
		{
			this.SendPropertyChanging();
			entity._Microsoft_SystemCenter_Orchestrator_Internal___Resources_ = null;
		}
		
		private void attach_Resources_ParentResource(_Microsoft_SystemCenter_Orchestrator_Internal___Resources_ entity)
		{
			this.SendPropertyChanging();
			entity.Parent = this;
		}
		
		private void detach_Resources_ParentResource(_Microsoft_SystemCenter_Orchestrator_Internal___Resources_ entity)
		{
			this.SendPropertyChanging();
			entity.Parent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator].[Resources]")]
	public partial class _Microsoft_SystemCenter_Orchestrator___Resources_
	{
		
		private long _Id;
		
		private System.Guid _UniqueId;
		
		private System.Nullable<long> _ParentId;
		
		private string _Name;
		
		private System.Data.Linq.Binary _BinaryPath;
		
		private string _Path;
		
		public _Microsoft_SystemCenter_Orchestrator___Resources_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL IDENTITY")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueId
		{
			get
			{
				return this._UniqueId;
			}
			set
			{
				if ((this._UniqueId != value))
				{
					this._UniqueId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="BigInt")]
		public System.Nullable<long> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BinaryPath", DbType="VarBinary(400) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary BinaryPath
		{
			get
			{
				return this._BinaryPath;
			}
			set
			{
				if ((this._BinaryPath != value))
				{
					this._BinaryPath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this._Path = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Internal].[ResourceSettings]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ResourceId;
		
		private bool _IsProtected;
		
		private EntityRef<_Microsoft_SystemCenter_Orchestrator_Internal___Resources_> @__Microsoft_SystemCenter_Orchestrator_Internal___Resources_;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIdChanging(long value);
    partial void OnResourceIdChanged();
    partial void OnIsProtectedChanging(bool value);
    partial void OnIsProtectedChanged();
    #endregion
		
		public _Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_()
		{
			this.@__Microsoft_SystemCenter_Orchestrator_Internal___Resources_ = default(EntityRef<_Microsoft_SystemCenter_Orchestrator_Internal___Resources_>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ResourceId
		{
			get
			{
				return this._ResourceId;
			}
			set
			{
				if ((this._ResourceId != value))
				{
					if (this.@__Microsoft_SystemCenter_Orchestrator_Internal___Resources_.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceId = value;
					this.SendPropertyChanged("ResourceId");
					this.OnResourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProtected", DbType="Bit NOT NULL")]
		public bool IsProtected
		{
			get
			{
				return this._IsProtected;
			}
			set
			{
				if ((this._IsProtected != value))
				{
					this.OnIsProtectedChanging(value);
					this.SendPropertyChanging();
					this._IsProtected = value;
					this.SendPropertyChanged("IsProtected");
					this.OnIsProtectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Microsoft_SystemCenter_Orchestrator_Internal___Resources___Microsoft_SystemCente" +
			"r_Orchestrator_Internal___ResourceSettings_", Storage="__Microsoft_SystemCenter_Orchestrator_Internal___Resources_", ThisKey="ResourceId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public _Microsoft_SystemCenter_Orchestrator_Internal___Resources_ _Microsoft_SystemCenter_Orchestrator_Internal___Resources_
		{
			get
			{
				return this.@__Microsoft_SystemCenter_Orchestrator_Internal___Resources_.Entity;
			}
			set
			{
				_Microsoft_SystemCenter_Orchestrator_Internal___Resources_ previousValue = this.@__Microsoft_SystemCenter_Orchestrator_Internal___Resources_.Entity;
				if (((previousValue != value) 
							|| (this.@__Microsoft_SystemCenter_Orchestrator_Internal___Resources_.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__Microsoft_SystemCenter_Orchestrator_Internal___Resources_.Entity = null;
						previousValue._Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_ = null;
					}
					this.@__Microsoft_SystemCenter_Orchestrator_Internal___Resources_.Entity = value;
					if ((value != null))
					{
						value._Microsoft_SystemCenter_Orchestrator_Internal___ResourceSettings_ = this;
						this._ResourceId = value.Id;
					}
					else
					{
						this._ResourceId = default(long);
					}
					this.SendPropertyChanged("_Microsoft_SystemCenter_Orchestrator_Internal___Resources_");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Internal].[Rights]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Internal___Rights_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private long _Value;
		
		private EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_> @__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(long value);
    partial void OnValueChanged();
    #endregion
		
		public _Microsoft_SystemCenter_Orchestrator_Internal___Rights_()
		{
			this.@__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_ = new EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_>(new Action<_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_>(this.attach__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_), new Action<_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_>(this.detach__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="BigInt NOT NULL")]
		public long Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Microsoft_SystemCenter_Orchestrator_Internal___Rights___Microsoft_SystemCenter_O" +
			"rchestrator_Internal___Permissions_", Storage="__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_", ThisKey="Id", OtherKey="RightId")]
		public EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_> _Microsoft_SystemCenter_Orchestrator_Internal___Permissions_
		{
			get
			{
				return this.@__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_;
			}
			set
			{
				this.@__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_(_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_ entity)
		{
			this.SendPropertyChanging();
			entity._Microsoft_SystemCenter_Orchestrator_Internal___Rights_ = this;
		}
		
		private void detach__Microsoft_SystemCenter_Orchestrator_Internal___Permissions_(_Microsoft_SystemCenter_Orchestrator_Internal___Permissions_ entity)
		{
			this.SendPropertyChanging();
			entity._Microsoft_SystemCenter_Orchestrator_Internal___Rights_ = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator].[RunbookDiagrams]")]
	public partial class _Microsoft_SystemCenter_Orchestrator___RunbookDiagrams_
	{
		
		private System.Guid _RunbookId;
		
		private System.Data.Linq.Binary _Diagram;
		
		private string _ContentType;
		
		private System.Nullable<System.DateTime> _LastModifiedTime;
		
		public _Microsoft_SystemCenter_Orchestrator___RunbookDiagrams_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RunbookId
		{
			get
			{
				return this._RunbookId;
			}
			set
			{
				if ((this._RunbookId != value))
				{
					this._RunbookId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagram", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Diagram
		{
			get
			{
				return this._Diagram;
			}
			set
			{
				if ((this._Diagram != value))
				{
					this._Diagram = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentType", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this._ContentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedTime
		{
			get
			{
				return this._LastModifiedTime;
			}
			set
			{
				if ((this._LastModifiedTime != value))
				{
					this._LastModifiedTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Runtime.Internal].[RunbookInstanceInputParam" +
		"eters]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _RunbookInstanceId;
		
		private System.Guid _RunbookParameterId;
		
		private string _Value;
		
		private EntityRef<POLICYINSTANCES> _POLICYINSTANCES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRunbookInstanceIdChanging(System.Guid value);
    partial void OnRunbookInstanceIdChanged();
    partial void OnRunbookParameterIdChanging(System.Guid value);
    partial void OnRunbookParameterIdChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public _Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_()
		{
			this._POLICYINSTANCES = default(EntityRef<POLICYINSTANCES>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookInstanceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RunbookInstanceId
		{
			get
			{
				return this._RunbookInstanceId;
			}
			set
			{
				if ((this._RunbookInstanceId != value))
				{
					if (this._POLICYINSTANCES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRunbookInstanceIdChanging(value);
					this.SendPropertyChanging();
					this._RunbookInstanceId = value;
					this.SendPropertyChanged("RunbookInstanceId");
					this.OnRunbookInstanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookParameterId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RunbookParameterId
		{
			get
			{
				return this._RunbookParameterId;
			}
			set
			{
				if ((this._RunbookParameterId != value))
				{
					this.OnRunbookParameterIdChanging(value);
					this.SendPropertyChanging();
					this._RunbookParameterId = value;
					this.SendPropertyChanged("RunbookParameterId");
					this.OnRunbookParameterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="POLICYINSTANCES__Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookIn" +
			"stanceInputParameters_", Storage="_POLICYINSTANCES", ThisKey="RunbookInstanceId", OtherKey="UniqueID", IsForeignKey=true, DeleteOnNull=true)]
		public POLICYINSTANCES POLICYINSTANCES
		{
			get
			{
				return this._POLICYINSTANCES.Entity;
			}
			set
			{
				POLICYINSTANCES previousValue = this._POLICYINSTANCES.Entity;
				if (((previousValue != value) 
							|| (this._POLICYINSTANCES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POLICYINSTANCES.Entity = null;
						previousValue._Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_.Remove(this);
					}
					this._POLICYINSTANCES.Entity = value;
					if ((value != null))
					{
						value._Microsoft_SystemCenter_Orchestrator_Runtime_Internal___RunbookInstanceInputParameters_.Add(this);
						this._RunbookInstanceId = value.UniqueID;
					}
					else
					{
						this._RunbookInstanceId = default(System.Guid);
					}
					this.SendPropertyChanged("POLICYINSTANCES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Runtime].[RunbookInstanceParameters]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Runtime___RunbookInstanceParameters_
	{
		
		private System.Guid _Id;
		
		private System.Guid _RunbookInstanceId;
		
		private System.Nullable<System.Guid> _RunbookParameterId;
		
		private string _Name;
		
		private string _Value;
		
		private System.Nullable<int> _GroupId;
		
		private string _Direction;
		
		public _Microsoft_SystemCenter_Orchestrator_Runtime___RunbookInstanceParameters_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookInstanceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RunbookInstanceId
		{
			get
			{
				return this._RunbookInstanceId;
			}
			set
			{
				if ((this._RunbookInstanceId != value))
				{
					this._RunbookInstanceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookParameterId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RunbookParameterId
		{
			get
			{
				return this._RunbookParameterId;
			}
			set
			{
				if ((this._RunbookParameterId != value))
				{
					this._RunbookParameterId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this._GroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="NVarChar(10)")]
		public string Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this._Direction = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Runtime].[RunbookInstances]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Runtime___RunbookInstances_
	{
		
		private System.Guid _Id;
		
		private System.Guid _RunbookId;
		
		private System.Nullable<System.Guid> _JobId;
		
		private System.Nullable<System.Guid> _RunbookServerId;
		
		private string _Status;
		
		private System.DateTime _CreationTime;
		
		private System.Nullable<System.DateTime> _CompletionTime;
		
		public _Microsoft_SystemCenter_Orchestrator_Runtime___RunbookInstances_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RunbookId
		{
			get
			{
				return this._RunbookId;
			}
			set
			{
				if ((this._RunbookId != value))
				{
					this._RunbookId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					this._JobId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookServerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RunbookServerId
		{
			get
			{
				return this._RunbookServerId;
			}
			set
			{
				if ((this._RunbookServerId != value))
				{
					this._RunbookServerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this._CreationTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletionTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompletionTime
		{
			get
			{
				return this._CompletionTime;
			}
			set
			{
				if ((this._CompletionTime != value))
				{
					this._CompletionTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Internal].[RunbookOutputParameters]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _RunbookId;
		
		private string _Code;
		
		private string _Name;
		
		private string _Type;
		
		private string _Description;
		
		private System.Nullable<bool> _Deleted;
		
		private EntityRef<POLICIES> _POLICIES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRunbookIdChanging(System.Guid value);
    partial void OnRunbookIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    #endregion
		
		public _Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_()
		{
			this._POLICIES = default(EntityRef<POLICIES>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RunbookId
		{
			get
			{
				return this._RunbookId;
			}
			set
			{
				if ((this._RunbookId != value))
				{
					if (this._POLICIES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRunbookIdChanging(value);
					this.SendPropertyChanging();
					this._RunbookId = value;
					this.SendPropertyChanged("RunbookId");
					this.OnRunbookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="POLICIES__Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_" +
			"", Storage="_POLICIES", ThisKey="RunbookId", OtherKey="UniqueID", IsForeignKey=true, DeleteOnNull=true)]
		public POLICIES POLICIES
		{
			get
			{
				return this._POLICIES.Entity;
			}
			set
			{
				POLICIES previousValue = this._POLICIES.Entity;
				if (((previousValue != value) 
							|| (this._POLICIES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POLICIES.Entity = null;
						previousValue._Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_.Remove(this);
					}
					this._POLICIES.Entity = value;
					if ((value != null))
					{
						value._Microsoft_SystemCenter_Orchestrator_Internal___RunbookOutputParameters_.Add(this);
						this._RunbookId = value.UniqueID;
					}
					else
					{
						this._RunbookId = default(System.Guid);
					}
					this.SendPropertyChanged("POLICIES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator].[RunbookParameters]")]
	public partial class _Microsoft_SystemCenter_Orchestrator___RunbookParameters_
	{
		
		private System.Guid _Id;
		
		private System.Guid _RunbookId;
		
		private string _Name;
		
		private string _Type;
		
		private string _Description;
		
		private string _Direction;
		
		public _Microsoft_SystemCenter_Orchestrator___RunbookParameters_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RunbookId
		{
			get
			{
				return this._RunbookId;
			}
			set
			{
				if ((this._RunbookId != value))
				{
					this._RunbookId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="NVarChar(10)")]
		public string Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this._Direction = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator].[Runbooks]")]
	public partial class _Microsoft_SystemCenter_Orchestrator___Runbooks_
	{
		
		private System.Guid _Id;
		
		private System.Guid _FolderId;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _CreationTime;
		
		private string _CreatedBy;
		
		private System.DateTime _LastModifiedTime;
		
		private string _LastModifiedBy;
		
		private System.Nullable<bool> _IsMonitor;
		
		private string _Path;
		
		private string _CheckedOutBy;
		
		private System.Nullable<System.DateTime> _CheckedOutTime;
		
		public _Microsoft_SystemCenter_Orchestrator___Runbooks_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FolderId
		{
			get
			{
				return this._FolderId;
			}
			set
			{
				if ((this._FolderId != value))
				{
					this._FolderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this._CreationTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedTime
		{
			get
			{
				return this._LastModifiedTime;
			}
			set
			{
				if ((this._LastModifiedTime != value))
				{
					this._LastModifiedTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this._LastModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMonitor", DbType="Bit")]
		public System.Nullable<bool> IsMonitor
		{
			get
			{
				return this._IsMonitor;
			}
			set
			{
				if ((this._IsMonitor != value))
				{
					this._IsMonitor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this._Path = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedOutBy", DbType="NVarChar(50)")]
		public string CheckedOutBy
		{
			get
			{
				return this._CheckedOutBy;
			}
			set
			{
				if ((this._CheckedOutBy != value))
				{
					this._CheckedOutBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedOutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckedOutTime
		{
			get
			{
				return this._CheckedOutTime;
			}
			set
			{
				if ((this._CheckedOutTime != value))
				{
					this._CheckedOutTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Runtime].[RunbookServers]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Runtime___RunbookServers_
	{
		
		private System.Guid _Id;
		
		private string _Name;
		
		public _Microsoft_SystemCenter_Orchestrator_Runtime___RunbookServers_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RUNDOTNETSCRIPT")]
	public partial class RUNDOTNETSCRIPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _ScriptType;
		
		private string _ScriptBody;
		
		private string _Dependencies;
		
		private string _Namespaces;
		
		private string _ExecutionData;
		
		private string _PublishedData;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnScriptTypeChanging(string value);
    partial void OnScriptTypeChanged();
    partial void OnScriptBodyChanging(string value);
    partial void OnScriptBodyChanged();
    partial void OnDependenciesChanging(string value);
    partial void OnDependenciesChanged();
    partial void OnNamespacesChanging(string value);
    partial void OnNamespacesChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnPublishedDataChanging(string value);
    partial void OnPublishedDataChanged();
    #endregion
		
		public RUNDOTNETSCRIPT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScriptType", DbType="NVarChar(500)")]
		public string ScriptType
		{
			get
			{
				return this._ScriptType;
			}
			set
			{
				if ((this._ScriptType != value))
				{
					this.OnScriptTypeChanging(value);
					this.SendPropertyChanging();
					this._ScriptType = value;
					this.SendPropertyChanged("ScriptType");
					this.OnScriptTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScriptBody", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ScriptBody
		{
			get
			{
				return this._ScriptBody;
			}
			set
			{
				if ((this._ScriptBody != value))
				{
					this.OnScriptBodyChanging(value);
					this.SendPropertyChanging();
					this._ScriptBody = value;
					this.SendPropertyChanged("ScriptBody");
					this.OnScriptBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dependencies", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Dependencies
		{
			get
			{
				return this._Dependencies;
			}
			set
			{
				if ((this._Dependencies != value))
				{
					this.OnDependenciesChanging(value);
					this.SendPropertyChanging();
					this._Dependencies = value;
					this.SendPropertyChanged("Dependencies");
					this.OnDependenciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Namespaces", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Namespaces
		{
			get
			{
				return this._Namespaces;
			}
			set
			{
				if ((this._Namespaces != value))
				{
					this.OnNamespacesChanging(value);
					this.SendPropertyChanging();
					this._Namespaces = value;
					this.SendPropertyChanged("Namespaces");
					this.OnNamespacesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedData", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string PublishedData
		{
			get
			{
				return this._PublishedData;
			}
			set
			{
				if ((this._PublishedData != value))
				{
					this.OnPublishedDataChanging(value);
					this.SendPropertyChanging();
					this._PublishedData = value;
					this.SendPropertyChanged("PublishedData");
					this.OnPublishedDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_RUNDOTNETSCRIPT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.RUNDOTNETSCRIPT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.RUNDOTNETSCRIPT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SATELLITES")]
	public partial class SATELLITES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public SATELLITES()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2007_ADDCOMPUTER")]
	public partial class SCCM2007_ADDCOMPUTER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private string _Type;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public SCCM2007_ADDCOMPUTER()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(2000)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_ADDCOMPUTER", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2007_ADDCOMPUTER = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2007_ADDCOMPUTER = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2007_ADVERTISETASK")]
	public partial class SCCM2007_ADVERTISETASK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private string _Schedules;
		
		private string _SlowLinks;
		
		private string _RunIndependent;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    partial void OnSchedulesChanging(string value);
    partial void OnSchedulesChanged();
    partial void OnSlowLinksChanging(string value);
    partial void OnSlowLinksChanged();
    partial void OnRunIndependentChanging(string value);
    partial void OnRunIndependentChanged();
    #endregion
		
		public SCCM2007_ADVERTISETASK()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schedules", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				if ((this._Schedules != value))
				{
					this.OnSchedulesChanging(value);
					this.SendPropertyChanging();
					this._Schedules = value;
					this.SendPropertyChanged("Schedules");
					this.OnSchedulesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlowLinks", DbType="NVarChar(2000)")]
		public string SlowLinks
		{
			get
			{
				return this._SlowLinks;
			}
			set
			{
				if ((this._SlowLinks != value))
				{
					this.OnSlowLinksChanging(value);
					this.SendPropertyChanging();
					this._SlowLinks = value;
					this.SendPropertyChanged("SlowLinks");
					this.OnSlowLinksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunIndependent", DbType="NVarChar(2000)")]
		public string RunIndependent
		{
			get
			{
				return this._RunIndependent;
			}
			set
			{
				if ((this._RunIndependent != value))
				{
					this.OnRunIndependentChanging(value);
					this.SendPropertyChanging();
					this._RunIndependent = value;
					this.SendPropertyChanged("RunIndependent");
					this.OnRunIndependentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_ADVERTISETASK", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2007_ADVERTISETASK = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2007_ADVERTISETASK = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2007_CREATEADVERTISEMENT")]
	public partial class SCCM2007_CREATEADVERTISEMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private string _Schedules;
		
		private string _SlowLinks;
		
		private string _RunIndependent;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    partial void OnSchedulesChanging(string value);
    partial void OnSchedulesChanged();
    partial void OnSlowLinksChanging(string value);
    partial void OnSlowLinksChanged();
    partial void OnRunIndependentChanging(string value);
    partial void OnRunIndependentChanged();
    #endregion
		
		public SCCM2007_CREATEADVERTISEMENT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schedules", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				if ((this._Schedules != value))
				{
					this.OnSchedulesChanging(value);
					this.SendPropertyChanging();
					this._Schedules = value;
					this.SendPropertyChanged("Schedules");
					this.OnSchedulesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlowLinks", DbType="NVarChar(2000)")]
		public string SlowLinks
		{
			get
			{
				return this._SlowLinks;
			}
			set
			{
				if ((this._SlowLinks != value))
				{
					this.OnSlowLinksChanging(value);
					this.SendPropertyChanging();
					this._SlowLinks = value;
					this.SendPropertyChanged("SlowLinks");
					this.OnSlowLinksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunIndependent", DbType="NVarChar(2000)")]
		public string RunIndependent
		{
			get
			{
				return this._RunIndependent;
			}
			set
			{
				if ((this._RunIndependent != value))
				{
					this.OnRunIndependentChanging(value);
					this.SendPropertyChanging();
					this._RunIndependent = value;
					this.SendPropertyChanged("RunIndependent");
					this.OnRunIndependentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_CREATEADVERTISEMENT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2007_CREATEADVERTISEMENT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2007_CREATEADVERTISEMENT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2007_CREATECOLLECTION")]
	public partial class SCCM2007_CREATECOLLECTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private string _Type;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public SCCM2007_CREATECOLLECTION()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(2000)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_CREATECOLLECTION", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2007_CREATECOLLECTION = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2007_CREATECOLLECTION = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2007_DEL_COLLECTION")]
	public partial class SCCM2007_DEL_COLLECTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private string _HasAdvertisements;
		
		private string _HasBaselines;
		
		private string _HasDeployments;
		
		private string _HasMembershipRules;
		
		private string _HasQueries;
		
		private string _HasSubCollections;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    partial void OnHasAdvertisementsChanging(string value);
    partial void OnHasAdvertisementsChanged();
    partial void OnHasBaselinesChanging(string value);
    partial void OnHasBaselinesChanged();
    partial void OnHasDeploymentsChanging(string value);
    partial void OnHasDeploymentsChanged();
    partial void OnHasMembershipRulesChanging(string value);
    partial void OnHasMembershipRulesChanged();
    partial void OnHasQueriesChanging(string value);
    partial void OnHasQueriesChanged();
    partial void OnHasSubCollectionsChanging(string value);
    partial void OnHasSubCollectionsChanged();
    #endregion
		
		public SCCM2007_DEL_COLLECTION()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAdvertisements", DbType="NVarChar(2000)")]
		public string HasAdvertisements
		{
			get
			{
				return this._HasAdvertisements;
			}
			set
			{
				if ((this._HasAdvertisements != value))
				{
					this.OnHasAdvertisementsChanging(value);
					this.SendPropertyChanging();
					this._HasAdvertisements = value;
					this.SendPropertyChanged("HasAdvertisements");
					this.OnHasAdvertisementsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBaselines", DbType="NVarChar(2000)")]
		public string HasBaselines
		{
			get
			{
				return this._HasBaselines;
			}
			set
			{
				if ((this._HasBaselines != value))
				{
					this.OnHasBaselinesChanging(value);
					this.SendPropertyChanging();
					this._HasBaselines = value;
					this.SendPropertyChanged("HasBaselines");
					this.OnHasBaselinesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDeployments", DbType="NVarChar(2000)")]
		public string HasDeployments
		{
			get
			{
				return this._HasDeployments;
			}
			set
			{
				if ((this._HasDeployments != value))
				{
					this.OnHasDeploymentsChanging(value);
					this.SendPropertyChanging();
					this._HasDeployments = value;
					this.SendPropertyChanged("HasDeployments");
					this.OnHasDeploymentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasMembershipRules", DbType="NVarChar(2000)")]
		public string HasMembershipRules
		{
			get
			{
				return this._HasMembershipRules;
			}
			set
			{
				if ((this._HasMembershipRules != value))
				{
					this.OnHasMembershipRulesChanging(value);
					this.SendPropertyChanging();
					this._HasMembershipRules = value;
					this.SendPropertyChanged("HasMembershipRules");
					this.OnHasMembershipRulesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasQueries", DbType="NVarChar(2000)")]
		public string HasQueries
		{
			get
			{
				return this._HasQueries;
			}
			set
			{
				if ((this._HasQueries != value))
				{
					this.OnHasQueriesChanging(value);
					this.SendPropertyChanging();
					this._HasQueries = value;
					this.SendPropertyChanged("HasQueries");
					this.OnHasQueriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasSubCollections", DbType="NVarChar(2000)")]
		public string HasSubCollections
		{
			get
			{
				return this._HasSubCollections;
			}
			set
			{
				if ((this._HasSubCollections != value))
				{
					this.OnHasSubCollectionsChanging(value);
					this.SendPropertyChanging();
					this._HasSubCollections = value;
					this.SendPropertyChanged("HasSubCollections");
					this.OnHasSubCollectionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_DEL_COLLECTION", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2007_DEL_COLLECTION = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2007_DEL_COLLECTION = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2007_DEPLOYSOFTWAREUPDATE")]
	public partial class SCCM2007_DEPLOYSOFTWAREUPDATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private string _Type;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public SCCM2007_DEPLOYSOFTWAREUPDATE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(2000)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_DEPLOYSOFTWAREUPDATE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2007_DEPLOYSOFTWAREUPDATE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2007_DEPLOYSOFTWAREUPDATE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2007_GETADVSTATUS")]
	public partial class SCCM2007_GETADVSTATUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    #endregion
		
		public SCCM2007_GETADVSTATUS()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_GETADVSTATUS", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2007_GETADVSTATUS = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2007_GETADVSTATUS = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2007_GETCOLLECTION")]
	public partial class SCCM2007_GETCOLLECTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private string _Type;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public SCCM2007_GETCOLLECTION()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(2000)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_GETCOLLECTION", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2007_GETCOLLECTION = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2007_GETCOLLECTION = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2007_GETSUCOMPLIANCE")]
	public partial class SCCM2007_GETSUCOMPLIANCE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Filters;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private string _Type;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnFiltersChanging(string value);
    partial void OnFiltersChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public SCCM2007_GETSUCOMPLIANCE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filters", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Filters
		{
			get
			{
				return this._Filters;
			}
			set
			{
				if ((this._Filters != value))
				{
					this.OnFiltersChanging(value);
					this.SendPropertyChanging();
					this._Filters = value;
					this.SendPropertyChanged("Filters");
					this.OnFiltersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(2000)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_GETSUCOMPLIANCE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2007_GETSUCOMPLIANCE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2007_GETSUCOMPLIANCE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2007_REFRESHCLIENT")]
	public partial class SCCM2007_REFRESHCLIENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _Fields;
		
		private string _ExecutionData;
		
		private string _GeneralPublishedData;
		
		private string _ConnectionPublishedData;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnFieldsChanging(string value);
    partial void OnFieldsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnGeneralPublishedDataChanging(string value);
    partial void OnGeneralPublishedDataChanged();
    partial void OnConnectionPublishedDataChanging(string value);
    partial void OnConnectionPublishedDataChanged();
    #endregion
		
		public SCCM2007_REFRESHCLIENT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fields", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Fields
		{
			get
			{
				return this._Fields;
			}
			set
			{
				if ((this._Fields != value))
				{
					this.OnFieldsChanging(value);
					this.SendPropertyChanging();
					this._Fields = value;
					this.SendPropertyChanged("Fields");
					this.OnFieldsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneralPublishedData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string GeneralPublishedData
		{
			get
			{
				return this._GeneralPublishedData;
			}
			set
			{
				if ((this._GeneralPublishedData != value))
				{
					this.OnGeneralPublishedDataChanging(value);
					this.SendPropertyChanging();
					this._GeneralPublishedData = value;
					this.SendPropertyChanged("GeneralPublishedData");
					this.OnGeneralPublishedDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionPublishedData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ConnectionPublishedData
		{
			get
			{
				return this._ConnectionPublishedData;
			}
			set
			{
				if ((this._ConnectionPublishedData != value))
				{
					this.OnConnectionPublishedDataChanging(value);
					this.SendPropertyChanging();
					this._ConnectionPublishedData = value;
					this.SendPropertyChanged("ConnectionPublishedData");
					this.OnConnectionPublishedDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_REFRESHCLIENT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2007_REFRESHCLIENT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2007_REFRESHCLIENT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2007_REFRESHCOLLECTION")]
	public partial class SCCM2007_REFRESHCOLLECTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private string _Type;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public SCCM2007_REFRESHCOLLECTION()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(2000)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2007_REFRESHCOLLECTION", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2007_REFRESHCOLLECTION = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2007_REFRESHCOLLECTION = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2012_ADDCOLLECTIONRULE")]
	public partial class SCCM2012_ADDCOLLECTIONRULE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private string _Type;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public SCCM2012_ADDCOLLECTIONRULE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(2000)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_ADDCOLLECTIONRULE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2012_ADDCOLLECTIONRULE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2012_ADDCOLLECTIONRULE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2012_CREATECOLLECTION")]
	public partial class SCCM2012_CREATECOLLECTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private string _Type;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public SCCM2012_CREATECOLLECTION()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(2000)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_CREATECOLLECTION", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2012_CREATECOLLECTION = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2012_CREATECOLLECTION = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2012_DELCOLLECTION")]
	public partial class SCCM2012_DELCOLLECTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private string _Advanced;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    partial void OnAdvancedChanging(string value);
    partial void OnAdvancedChanged();
    #endregion
		
		public SCCM2012_DELCOLLECTION()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Advanced", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Advanced
		{
			get
			{
				return this._Advanced;
			}
			set
			{
				if ((this._Advanced != value))
				{
					this.OnAdvancedChanging(value);
					this.SendPropertyChanging();
					this._Advanced = value;
					this.SendPropertyChanged("Advanced");
					this.OnAdvancedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_DELCOLLECTION", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2012_DELCOLLECTION = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2012_DELCOLLECTION = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2012_DELCOLLECTIONRULE")]
	public partial class SCCM2012_DELCOLLECTIONRULE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private string _Type;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public SCCM2012_DELCOLLECTIONRULE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(2000)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_DELCOLLECTIONRULE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2012_DELCOLLECTIONRULE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2012_DELCOLLECTIONRULE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2012_DEPLOYAPPLICATION")]
	public partial class SCCM2012_DEPLOYAPPLICATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    #endregion
		
		public SCCM2012_DEPLOYAPPLICATION()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_DEPLOYAPPLICATION", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2012_DEPLOYAPPLICATION = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2012_DEPLOYAPPLICATION = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2012_DEPLOYPROGRAM")]
	public partial class SCCM2012_DEPLOYPROGRAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private string _Schedules;
		
		private string _ScheduleWhenAvailable;
		
		private string _PresentTime;
		
		private string _StartTimeIsGMT;
		
		private string _ScheduleWhenExpires;
		
		private string _ExpirationTime;
		
		private string _ExpirationTimeIsGMT;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    partial void OnSchedulesChanging(string value);
    partial void OnSchedulesChanged();
    partial void OnScheduleWhenAvailableChanging(string value);
    partial void OnScheduleWhenAvailableChanged();
    partial void OnPresentTimeChanging(string value);
    partial void OnPresentTimeChanged();
    partial void OnStartTimeIsGMTChanging(string value);
    partial void OnStartTimeIsGMTChanged();
    partial void OnScheduleWhenExpiresChanging(string value);
    partial void OnScheduleWhenExpiresChanged();
    partial void OnExpirationTimeChanging(string value);
    partial void OnExpirationTimeChanged();
    partial void OnExpirationTimeIsGMTChanging(string value);
    partial void OnExpirationTimeIsGMTChanged();
    #endregion
		
		public SCCM2012_DEPLOYPROGRAM()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schedules", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				if ((this._Schedules != value))
				{
					this.OnSchedulesChanging(value);
					this.SendPropertyChanging();
					this._Schedules = value;
					this.SendPropertyChanged("Schedules");
					this.OnSchedulesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleWhenAvailable", DbType="NVarChar(2000)")]
		public string ScheduleWhenAvailable
		{
			get
			{
				return this._ScheduleWhenAvailable;
			}
			set
			{
				if ((this._ScheduleWhenAvailable != value))
				{
					this.OnScheduleWhenAvailableChanging(value);
					this.SendPropertyChanging();
					this._ScheduleWhenAvailable = value;
					this.SendPropertyChanged("ScheduleWhenAvailable");
					this.OnScheduleWhenAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentTime", DbType="NVarChar(2000)")]
		public string PresentTime
		{
			get
			{
				return this._PresentTime;
			}
			set
			{
				if ((this._PresentTime != value))
				{
					this.OnPresentTimeChanging(value);
					this.SendPropertyChanging();
					this._PresentTime = value;
					this.SendPropertyChanged("PresentTime");
					this.OnPresentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTimeIsGMT", DbType="NVarChar(2000)")]
		public string StartTimeIsGMT
		{
			get
			{
				return this._StartTimeIsGMT;
			}
			set
			{
				if ((this._StartTimeIsGMT != value))
				{
					this.OnStartTimeIsGMTChanging(value);
					this.SendPropertyChanging();
					this._StartTimeIsGMT = value;
					this.SendPropertyChanged("StartTimeIsGMT");
					this.OnStartTimeIsGMTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleWhenExpires", DbType="NVarChar(2000)")]
		public string ScheduleWhenExpires
		{
			get
			{
				return this._ScheduleWhenExpires;
			}
			set
			{
				if ((this._ScheduleWhenExpires != value))
				{
					this.OnScheduleWhenExpiresChanging(value);
					this.SendPropertyChanging();
					this._ScheduleWhenExpires = value;
					this.SendPropertyChanged("ScheduleWhenExpires");
					this.OnScheduleWhenExpiresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationTime", DbType="NVarChar(2000)")]
		public string ExpirationTime
		{
			get
			{
				return this._ExpirationTime;
			}
			set
			{
				if ((this._ExpirationTime != value))
				{
					this.OnExpirationTimeChanging(value);
					this.SendPropertyChanging();
					this._ExpirationTime = value;
					this.SendPropertyChanged("ExpirationTime");
					this.OnExpirationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationTimeIsGMT", DbType="NVarChar(2000)")]
		public string ExpirationTimeIsGMT
		{
			get
			{
				return this._ExpirationTimeIsGMT;
			}
			set
			{
				if ((this._ExpirationTimeIsGMT != value))
				{
					this.OnExpirationTimeIsGMTChanging(value);
					this.SendPropertyChanging();
					this._ExpirationTimeIsGMT = value;
					this.SendPropertyChanged("ExpirationTimeIsGMT");
					this.OnExpirationTimeIsGMTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_DEPLOYPROGRAM", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2012_DEPLOYPROGRAM = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2012_DEPLOYPROGRAM = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2012_DEPLOYSOFTWAREUPDATE")]
	public partial class SCCM2012_DEPLOYSOFTWAREUPDATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private string _TimeBasedOn;
		
		private string _Availability;
		
		private string _AvailabilitySpecificTime;
		
		private string _Deadline;
		
		private string _DeadlineSpecificTime;
		
		private string _GenerateAlerts;
		
		private string _ComplianceThreshold;
		
		private string _AlertOffsetValue;
		
		private string _AlertOffsetUnit;
		
		private string _DisableAlertsDuringInstall;
		
		private string _CreateAlertsOnFailure;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    partial void OnTimeBasedOnChanging(string value);
    partial void OnTimeBasedOnChanged();
    partial void OnAvailabilityChanging(string value);
    partial void OnAvailabilityChanged();
    partial void OnAvailabilitySpecificTimeChanging(string value);
    partial void OnAvailabilitySpecificTimeChanged();
    partial void OnDeadlineChanging(string value);
    partial void OnDeadlineChanged();
    partial void OnDeadlineSpecificTimeChanging(string value);
    partial void OnDeadlineSpecificTimeChanged();
    partial void OnGenerateAlertsChanging(string value);
    partial void OnGenerateAlertsChanged();
    partial void OnComplianceThresholdChanging(string value);
    partial void OnComplianceThresholdChanged();
    partial void OnAlertOffsetValueChanging(string value);
    partial void OnAlertOffsetValueChanged();
    partial void OnAlertOffsetUnitChanging(string value);
    partial void OnAlertOffsetUnitChanged();
    partial void OnDisableAlertsDuringInstallChanging(string value);
    partial void OnDisableAlertsDuringInstallChanged();
    partial void OnCreateAlertsOnFailureChanging(string value);
    partial void OnCreateAlertsOnFailureChanged();
    #endregion
		
		public SCCM2012_DEPLOYSOFTWAREUPDATE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeBasedOn", DbType="NVarChar(2000)")]
		public string TimeBasedOn
		{
			get
			{
				return this._TimeBasedOn;
			}
			set
			{
				if ((this._TimeBasedOn != value))
				{
					this.OnTimeBasedOnChanging(value);
					this.SendPropertyChanging();
					this._TimeBasedOn = value;
					this.SendPropertyChanged("TimeBasedOn");
					this.OnTimeBasedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Availability", DbType="NVarChar(2000)")]
		public string Availability
		{
			get
			{
				return this._Availability;
			}
			set
			{
				if ((this._Availability != value))
				{
					this.OnAvailabilityChanging(value);
					this.SendPropertyChanging();
					this._Availability = value;
					this.SendPropertyChanged("Availability");
					this.OnAvailabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailabilitySpecificTime", DbType="NVarChar(2000)")]
		public string AvailabilitySpecificTime
		{
			get
			{
				return this._AvailabilitySpecificTime;
			}
			set
			{
				if ((this._AvailabilitySpecificTime != value))
				{
					this.OnAvailabilitySpecificTimeChanging(value);
					this.SendPropertyChanging();
					this._AvailabilitySpecificTime = value;
					this.SendPropertyChanged("AvailabilitySpecificTime");
					this.OnAvailabilitySpecificTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deadline", DbType="NVarChar(2000)")]
		public string Deadline
		{
			get
			{
				return this._Deadline;
			}
			set
			{
				if ((this._Deadline != value))
				{
					this.OnDeadlineChanging(value);
					this.SendPropertyChanging();
					this._Deadline = value;
					this.SendPropertyChanged("Deadline");
					this.OnDeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeadlineSpecificTime", DbType="NVarChar(2000)")]
		public string DeadlineSpecificTime
		{
			get
			{
				return this._DeadlineSpecificTime;
			}
			set
			{
				if ((this._DeadlineSpecificTime != value))
				{
					this.OnDeadlineSpecificTimeChanging(value);
					this.SendPropertyChanging();
					this._DeadlineSpecificTime = value;
					this.SendPropertyChanged("DeadlineSpecificTime");
					this.OnDeadlineSpecificTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenerateAlerts", DbType="NVarChar(2000)")]
		public string GenerateAlerts
		{
			get
			{
				return this._GenerateAlerts;
			}
			set
			{
				if ((this._GenerateAlerts != value))
				{
					this.OnGenerateAlertsChanging(value);
					this.SendPropertyChanging();
					this._GenerateAlerts = value;
					this.SendPropertyChanged("GenerateAlerts");
					this.OnGenerateAlertsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplianceThreshold", DbType="NVarChar(2000)")]
		public string ComplianceThreshold
		{
			get
			{
				return this._ComplianceThreshold;
			}
			set
			{
				if ((this._ComplianceThreshold != value))
				{
					this.OnComplianceThresholdChanging(value);
					this.SendPropertyChanging();
					this._ComplianceThreshold = value;
					this.SendPropertyChanged("ComplianceThreshold");
					this.OnComplianceThresholdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertOffsetValue", DbType="NVarChar(2000)")]
		public string AlertOffsetValue
		{
			get
			{
				return this._AlertOffsetValue;
			}
			set
			{
				if ((this._AlertOffsetValue != value))
				{
					this.OnAlertOffsetValueChanging(value);
					this.SendPropertyChanging();
					this._AlertOffsetValue = value;
					this.SendPropertyChanged("AlertOffsetValue");
					this.OnAlertOffsetValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertOffsetUnit", DbType="NVarChar(2000)")]
		public string AlertOffsetUnit
		{
			get
			{
				return this._AlertOffsetUnit;
			}
			set
			{
				if ((this._AlertOffsetUnit != value))
				{
					this.OnAlertOffsetUnitChanging(value);
					this.SendPropertyChanging();
					this._AlertOffsetUnit = value;
					this.SendPropertyChanged("AlertOffsetUnit");
					this.OnAlertOffsetUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableAlertsDuringInstall", DbType="NVarChar(2000)")]
		public string DisableAlertsDuringInstall
		{
			get
			{
				return this._DisableAlertsDuringInstall;
			}
			set
			{
				if ((this._DisableAlertsDuringInstall != value))
				{
					this.OnDisableAlertsDuringInstallChanging(value);
					this.SendPropertyChanging();
					this._DisableAlertsDuringInstall = value;
					this.SendPropertyChanged("DisableAlertsDuringInstall");
					this.OnDisableAlertsDuringInstallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateAlertsOnFailure", DbType="NVarChar(2000)")]
		public string CreateAlertsOnFailure
		{
			get
			{
				return this._CreateAlertsOnFailure;
			}
			set
			{
				if ((this._CreateAlertsOnFailure != value))
				{
					this.OnCreateAlertsOnFailureChanging(value);
					this.SendPropertyChanging();
					this._CreateAlertsOnFailure = value;
					this.SendPropertyChanged("CreateAlertsOnFailure");
					this.OnCreateAlertsOnFailureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_DEPLOYSOFTWAREUPDATE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2012_DEPLOYSOFTWAREUPDATE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2012_DEPLOYSOFTWAREUPDATE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2012_DEPLOYTASKSEQUENCE")]
	public partial class SCCM2012_DEPLOYTASKSEQUENCE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private string _Schedules;
		
		private string _ScheduleWhenAvailable;
		
		private string _PresentTime;
		
		private string _StartTimeIsGMT;
		
		private string _ScheduleWhenExpires;
		
		private string _ExpirationTime;
		
		private string _ExpirationTimeIsGMT;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    partial void OnSchedulesChanging(string value);
    partial void OnSchedulesChanged();
    partial void OnScheduleWhenAvailableChanging(string value);
    partial void OnScheduleWhenAvailableChanged();
    partial void OnPresentTimeChanging(string value);
    partial void OnPresentTimeChanged();
    partial void OnStartTimeIsGMTChanging(string value);
    partial void OnStartTimeIsGMTChanged();
    partial void OnScheduleWhenExpiresChanging(string value);
    partial void OnScheduleWhenExpiresChanged();
    partial void OnExpirationTimeChanging(string value);
    partial void OnExpirationTimeChanged();
    partial void OnExpirationTimeIsGMTChanging(string value);
    partial void OnExpirationTimeIsGMTChanged();
    #endregion
		
		public SCCM2012_DEPLOYTASKSEQUENCE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schedules", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				if ((this._Schedules != value))
				{
					this.OnSchedulesChanging(value);
					this.SendPropertyChanging();
					this._Schedules = value;
					this.SendPropertyChanged("Schedules");
					this.OnSchedulesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleWhenAvailable", DbType="NVarChar(2000)")]
		public string ScheduleWhenAvailable
		{
			get
			{
				return this._ScheduleWhenAvailable;
			}
			set
			{
				if ((this._ScheduleWhenAvailable != value))
				{
					this.OnScheduleWhenAvailableChanging(value);
					this.SendPropertyChanging();
					this._ScheduleWhenAvailable = value;
					this.SendPropertyChanged("ScheduleWhenAvailable");
					this.OnScheduleWhenAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentTime", DbType="NVarChar(2000)")]
		public string PresentTime
		{
			get
			{
				return this._PresentTime;
			}
			set
			{
				if ((this._PresentTime != value))
				{
					this.OnPresentTimeChanging(value);
					this.SendPropertyChanging();
					this._PresentTime = value;
					this.SendPropertyChanged("PresentTime");
					this.OnPresentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTimeIsGMT", DbType="NVarChar(2000)")]
		public string StartTimeIsGMT
		{
			get
			{
				return this._StartTimeIsGMT;
			}
			set
			{
				if ((this._StartTimeIsGMT != value))
				{
					this.OnStartTimeIsGMTChanging(value);
					this.SendPropertyChanging();
					this._StartTimeIsGMT = value;
					this.SendPropertyChanged("StartTimeIsGMT");
					this.OnStartTimeIsGMTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleWhenExpires", DbType="NVarChar(2000)")]
		public string ScheduleWhenExpires
		{
			get
			{
				return this._ScheduleWhenExpires;
			}
			set
			{
				if ((this._ScheduleWhenExpires != value))
				{
					this.OnScheduleWhenExpiresChanging(value);
					this.SendPropertyChanging();
					this._ScheduleWhenExpires = value;
					this.SendPropertyChanged("ScheduleWhenExpires");
					this.OnScheduleWhenExpiresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationTime", DbType="NVarChar(2000)")]
		public string ExpirationTime
		{
			get
			{
				return this._ExpirationTime;
			}
			set
			{
				if ((this._ExpirationTime != value))
				{
					this.OnExpirationTimeChanging(value);
					this.SendPropertyChanging();
					this._ExpirationTime = value;
					this.SendPropertyChanged("ExpirationTime");
					this.OnExpirationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationTimeIsGMT", DbType="NVarChar(2000)")]
		public string ExpirationTimeIsGMT
		{
			get
			{
				return this._ExpirationTimeIsGMT;
			}
			set
			{
				if ((this._ExpirationTimeIsGMT != value))
				{
					this.OnExpirationTimeIsGMTChanging(value);
					this.SendPropertyChanging();
					this._ExpirationTimeIsGMT = value;
					this.SendPropertyChanged("ExpirationTimeIsGMT");
					this.OnExpirationTimeIsGMTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_DEPLOYTASKSEQUENCE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2012_DEPLOYTASKSEQUENCE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2012_DEPLOYTASKSEQUENCE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2012_GETCOLLECTIONMEMBER")]
	public partial class SCCM2012_GETCOLLECTIONMEMBER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private string _Type;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public SCCM2012_GETCOLLECTIONMEMBER()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(2000)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_GETCOLLECTIONMEMBER", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2012_GETCOLLECTIONMEMBER = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2012_GETCOLLECTIONMEMBER = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2012_GETDEPLOYMENTSTATUS")]
	public partial class SCCM2012_GETDEPLOYMENTSTATUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Filters;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private string _DeploymentType;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnFiltersChanging(string value);
    partial void OnFiltersChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    partial void OnDeploymentTypeChanging(string value);
    partial void OnDeploymentTypeChanged();
    #endregion
		
		public SCCM2012_GETDEPLOYMENTSTATUS()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filters", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Filters
		{
			get
			{
				return this._Filters;
			}
			set
			{
				if ((this._Filters != value))
				{
					this.OnFiltersChanging(value);
					this.SendPropertyChanging();
					this._Filters = value;
					this.SendPropertyChanged("Filters");
					this.OnFiltersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeploymentType", DbType="NVarChar(2000)")]
		public string DeploymentType
		{
			get
			{
				return this._DeploymentType;
			}
			set
			{
				if ((this._DeploymentType != value))
				{
					this.OnDeploymentTypeChanging(value);
					this.SendPropertyChanging();
					this._DeploymentType = value;
					this.SendPropertyChanged("DeploymentType");
					this.OnDeploymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_GETDEPLOYMENTSTATUS", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2012_GETDEPLOYMENTSTATUS = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2012_GETDEPLOYMENTSTATUS = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2012_PERFORMCLIENTACTION")]
	public partial class SCCM2012_PERFORMCLIENTACTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _Fields;
		
		private string _ExecutionData;
		
		private string _GeneralPublishedData;
		
		private string _ConnectionPublishedData;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnFieldsChanging(string value);
    partial void OnFieldsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnGeneralPublishedDataChanging(string value);
    partial void OnGeneralPublishedDataChanged();
    partial void OnConnectionPublishedDataChanging(string value);
    partial void OnConnectionPublishedDataChanged();
    #endregion
		
		public SCCM2012_PERFORMCLIENTACTION()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fields", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Fields
		{
			get
			{
				return this._Fields;
			}
			set
			{
				if ((this._Fields != value))
				{
					this.OnFieldsChanging(value);
					this.SendPropertyChanging();
					this._Fields = value;
					this.SendPropertyChanged("Fields");
					this.OnFieldsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneralPublishedData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string GeneralPublishedData
		{
			get
			{
				return this._GeneralPublishedData;
			}
			set
			{
				if ((this._GeneralPublishedData != value))
				{
					this.OnGeneralPublishedDataChanging(value);
					this.SendPropertyChanging();
					this._GeneralPublishedData = value;
					this.SendPropertyChanged("GeneralPublishedData");
					this.OnGeneralPublishedDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionPublishedData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ConnectionPublishedData
		{
			get
			{
				return this._ConnectionPublishedData;
			}
			set
			{
				if ((this._ConnectionPublishedData != value))
				{
					this.OnConnectionPublishedDataChanging(value);
					this.SendPropertyChanging();
					this._ConnectionPublishedData = value;
					this.SendPropertyChanged("ConnectionPublishedData");
					this.OnConnectionPublishedDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_PERFORMCLIENTACTION", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2012_PERFORMCLIENTACTION = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2012_PERFORMCLIENTACTION = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCCM2012_UPDCOLLECTIONMEMBERSHIP")]
	public partial class SCCM2012_UPDCOLLECTIONMEMBERSHIP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Arguments;
		
		private string _ExecutionData;
		
		private string _ConnectionName;
		
		private string _Type;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnConnectionNameChanging(string value);
    partial void OnConnectionNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public SCCM2012_UPDCOLLECTIONMEMBERSHIP()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionName", DbType="NVarChar(2000)")]
		public string ConnectionName
		{
			get
			{
				return this._ConnectionName;
			}
			set
			{
				if ((this._ConnectionName != value))
				{
					this.OnConnectionNameChanging(value);
					this.SendPropertyChanging();
					this._ConnectionName = value;
					this.SendPropertyChanged("ConnectionName");
					this.OnConnectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(2000)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCCM2012_UPDCOLLECTIONMEMBERSHIP", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCCM2012_UPDCOLLECTIONMEMBERSHIP = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCCM2012_UPDCOLLECTIONMEMBERSHIP = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCHEDULES")]
	public partial class SCHEDULES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Nullable<bool> _DaysOfWeek;
		
		private System.Nullable<bool> _DaysOfMonth;
		
		private System.Nullable<bool> _Monday;
		
		private System.Nullable<bool> _Tuesday;
		
		private System.Nullable<bool> _Wednesday;
		
		private System.Nullable<bool> _Thursday;
		
		private System.Nullable<bool> _Friday;
		
		private System.Nullable<bool> _Saturday;
		
		private System.Nullable<bool> _Sunday;
		
		private System.Nullable<bool> _First;
		
		private System.Nullable<bool> _Second;
		
		private System.Nullable<bool> _Third;
		
		private System.Nullable<bool> _Fourth;
		
		private System.Nullable<bool> _Last;
		
		private string _Days;
		
		private string _Hours;
		
		private string _Exceptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnDaysOfWeekChanging(System.Nullable<bool> value);
    partial void OnDaysOfWeekChanged();
    partial void OnDaysOfMonthChanging(System.Nullable<bool> value);
    partial void OnDaysOfMonthChanged();
    partial void OnMondayChanging(System.Nullable<bool> value);
    partial void OnMondayChanged();
    partial void OnTuesdayChanging(System.Nullable<bool> value);
    partial void OnTuesdayChanged();
    partial void OnWednesdayChanging(System.Nullable<bool> value);
    partial void OnWednesdayChanged();
    partial void OnThursdayChanging(System.Nullable<bool> value);
    partial void OnThursdayChanged();
    partial void OnFridayChanging(System.Nullable<bool> value);
    partial void OnFridayChanged();
    partial void OnSaturdayChanging(System.Nullable<bool> value);
    partial void OnSaturdayChanged();
    partial void OnSundayChanging(System.Nullable<bool> value);
    partial void OnSundayChanged();
    partial void OnFirstChanging(System.Nullable<bool> value);
    partial void OnFirstChanged();
    partial void OnSecondChanging(System.Nullable<bool> value);
    partial void OnSecondChanged();
    partial void OnThirdChanging(System.Nullable<bool> value);
    partial void OnThirdChanged();
    partial void OnFourthChanging(System.Nullable<bool> value);
    partial void OnFourthChanged();
    partial void OnLastChanging(System.Nullable<bool> value);
    partial void OnLastChanged();
    partial void OnDaysChanging(string value);
    partial void OnDaysChanged();
    partial void OnHoursChanging(string value);
    partial void OnHoursChanged();
    partial void OnExceptionsChanging(string value);
    partial void OnExceptionsChanged();
    #endregion
		
		public SCHEDULES()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysOfWeek", DbType="Bit")]
		public System.Nullable<bool> DaysOfWeek
		{
			get
			{
				return this._DaysOfWeek;
			}
			set
			{
				if ((this._DaysOfWeek != value))
				{
					this.OnDaysOfWeekChanging(value);
					this.SendPropertyChanging();
					this._DaysOfWeek = value;
					this.SendPropertyChanged("DaysOfWeek");
					this.OnDaysOfWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysOfMonth", DbType="Bit")]
		public System.Nullable<bool> DaysOfMonth
		{
			get
			{
				return this._DaysOfMonth;
			}
			set
			{
				if ((this._DaysOfMonth != value))
				{
					this.OnDaysOfMonthChanging(value);
					this.SendPropertyChanging();
					this._DaysOfMonth = value;
					this.SendPropertyChanged("DaysOfMonth");
					this.OnDaysOfMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Monday", DbType="Bit")]
		public System.Nullable<bool> Monday
		{
			get
			{
				return this._Monday;
			}
			set
			{
				if ((this._Monday != value))
				{
					this.OnMondayChanging(value);
					this.SendPropertyChanging();
					this._Monday = value;
					this.SendPropertyChanged("Monday");
					this.OnMondayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tuesday", DbType="Bit")]
		public System.Nullable<bool> Tuesday
		{
			get
			{
				return this._Tuesday;
			}
			set
			{
				if ((this._Tuesday != value))
				{
					this.OnTuesdayChanging(value);
					this.SendPropertyChanging();
					this._Tuesday = value;
					this.SendPropertyChanged("Tuesday");
					this.OnTuesdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wednesday", DbType="Bit")]
		public System.Nullable<bool> Wednesday
		{
			get
			{
				return this._Wednesday;
			}
			set
			{
				if ((this._Wednesday != value))
				{
					this.OnWednesdayChanging(value);
					this.SendPropertyChanging();
					this._Wednesday = value;
					this.SendPropertyChanged("Wednesday");
					this.OnWednesdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thursday", DbType="Bit")]
		public System.Nullable<bool> Thursday
		{
			get
			{
				return this._Thursday;
			}
			set
			{
				if ((this._Thursday != value))
				{
					this.OnThursdayChanging(value);
					this.SendPropertyChanging();
					this._Thursday = value;
					this.SendPropertyChanged("Thursday");
					this.OnThursdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Friday", DbType="Bit")]
		public System.Nullable<bool> Friday
		{
			get
			{
				return this._Friday;
			}
			set
			{
				if ((this._Friday != value))
				{
					this.OnFridayChanging(value);
					this.SendPropertyChanging();
					this._Friday = value;
					this.SendPropertyChanged("Friday");
					this.OnFridayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Saturday", DbType="Bit")]
		public System.Nullable<bool> Saturday
		{
			get
			{
				return this._Saturday;
			}
			set
			{
				if ((this._Saturday != value))
				{
					this.OnSaturdayChanging(value);
					this.SendPropertyChanging();
					this._Saturday = value;
					this.SendPropertyChanged("Saturday");
					this.OnSaturdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sunday", DbType="Bit")]
		public System.Nullable<bool> Sunday
		{
			get
			{
				return this._Sunday;
			}
			set
			{
				if ((this._Sunday != value))
				{
					this.OnSundayChanging(value);
					this.SendPropertyChanging();
					this._Sunday = value;
					this.SendPropertyChanged("Sunday");
					this.OnSundayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First", DbType="Bit")]
		public System.Nullable<bool> First
		{
			get
			{
				return this._First;
			}
			set
			{
				if ((this._First != value))
				{
					this.OnFirstChanging(value);
					this.SendPropertyChanging();
					this._First = value;
					this.SendPropertyChanged("First");
					this.OnFirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Second", DbType="Bit")]
		public System.Nullable<bool> Second
		{
			get
			{
				return this._Second;
			}
			set
			{
				if ((this._Second != value))
				{
					this.OnSecondChanging(value);
					this.SendPropertyChanging();
					this._Second = value;
					this.SendPropertyChanged("Second");
					this.OnSecondChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Third", DbType="Bit")]
		public System.Nullable<bool> Third
		{
			get
			{
				return this._Third;
			}
			set
			{
				if ((this._Third != value))
				{
					this.OnThirdChanging(value);
					this.SendPropertyChanging();
					this._Third = value;
					this.SendPropertyChanged("Third");
					this.OnThirdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fourth", DbType="Bit")]
		public System.Nullable<bool> Fourth
		{
			get
			{
				return this._Fourth;
			}
			set
			{
				if ((this._Fourth != value))
				{
					this.OnFourthChanging(value);
					this.SendPropertyChanging();
					this._Fourth = value;
					this.SendPropertyChanged("Fourth");
					this.OnFourthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last", DbType="Bit")]
		public System.Nullable<bool> Last
		{
			get
			{
				return this._Last;
			}
			set
			{
				if ((this._Last != value))
				{
					this.OnLastChanging(value);
					this.SendPropertyChanging();
					this._Last = value;
					this.SendPropertyChanged("Last");
					this.OnLastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Days", DbType="NVarChar(400)")]
		public string Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._Days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours", DbType="NVarChar(200)")]
		public string Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this.OnHoursChanging(value);
					this.SendPropertyChanging();
					this._Hours = value;
					this.SendPropertyChanged("Hours");
					this.OnHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exceptions", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Exceptions
		{
			get
			{
				return this._Exceptions;
			}
			set
			{
				if ((this._Exceptions != value))
				{
					this.OnExceptionsChanging(value);
					this.SendPropertyChanging();
					this._Exceptions = value;
					this.SendPropertyChanged("Exceptions");
					this.OnExceptionsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCOM2007_CREATEALERT")]
	public partial class SCOM2007_CREATEALERT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _Properties;
		
		private string _Comment;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnPropertiesChanging(string value);
    partial void OnPropertiesChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public SCOM2007_CREATEALERT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NVarChar(500)")]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this.OnPropertiesChanging(value);
					this.SendPropertyChanging();
					this._Properties = value;
					this.SendPropertyChanged("Properties");
					this.OnPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2007_CREATEALERT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCOM2007_CREATEALERT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCOM2007_CREATEALERT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCOM2007_GETALERTS")]
	public partial class SCOM2007_GETALERTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _Filters;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnFiltersChanging(string value);
    partial void OnFiltersChanged();
    #endregion
		
		public SCOM2007_GETALERTS()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NVarChar(500)")]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filters", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Filters
		{
			get
			{
				return this._Filters;
			}
			set
			{
				if ((this._Filters != value))
				{
					this.OnFiltersChanging(value);
					this.SendPropertyChanging();
					this._Filters = value;
					this.SendPropertyChanged("Filters");
					this.OnFiltersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2007_GETALERTS", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCOM2007_GETALERTS = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCOM2007_GETALERTS = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCOM2007_GETMONITORS")]
	public partial class SCOM2007_GETMONITORS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _Filters;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnFiltersChanging(string value);
    partial void OnFiltersChanged();
    #endregion
		
		public SCOM2007_GETMONITORS()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NVarChar(500)")]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filters", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Filters
		{
			get
			{
				return this._Filters;
			}
			set
			{
				if ((this._Filters != value))
				{
					this.OnFiltersChanging(value);
					this.SendPropertyChanging();
					this._Filters = value;
					this.SendPropertyChanged("Filters");
					this.OnFiltersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2007_GETMONITORS", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCOM2007_GETMONITORS = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCOM2007_GETMONITORS = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCOM2007_MONALERT")]
	public partial class SCOM2007_MONALERT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _TriggerNew;
		
		private string _MonitorId;
		
		private string _TriggerUpdated;
		
		private string _SCOM_MONALERT_FILT;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnTriggerNewChanging(string value);
    partial void OnTriggerNewChanged();
    partial void OnMonitorIdChanging(string value);
    partial void OnMonitorIdChanged();
    partial void OnTriggerUpdatedChanging(string value);
    partial void OnTriggerUpdatedChanged();
    partial void OnSCOM_MONALERT_FILTChanging(string value);
    partial void OnSCOM_MONALERT_FILTChanged();
    #endregion
		
		public SCOM2007_MONALERT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NVarChar(500)")]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerNew", DbType="NVarChar(30)")]
		public string TriggerNew
		{
			get
			{
				return this._TriggerNew;
			}
			set
			{
				if ((this._TriggerNew != value))
				{
					this.OnTriggerNewChanging(value);
					this.SendPropertyChanging();
					this._TriggerNew = value;
					this.SendPropertyChanged("TriggerNew");
					this.OnTriggerNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonitorId", DbType="NVarChar(50)")]
		public string MonitorId
		{
			get
			{
				return this._MonitorId;
			}
			set
			{
				if ((this._MonitorId != value))
				{
					this.OnMonitorIdChanging(value);
					this.SendPropertyChanging();
					this._MonitorId = value;
					this.SendPropertyChanged("MonitorId");
					this.OnMonitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerUpdated", DbType="NVarChar(30)")]
		public string TriggerUpdated
		{
			get
			{
				return this._TriggerUpdated;
			}
			set
			{
				if ((this._TriggerUpdated != value))
				{
					this.OnTriggerUpdatedChanging(value);
					this.SendPropertyChanging();
					this._TriggerUpdated = value;
					this.SendPropertyChanged("TriggerUpdated");
					this.OnTriggerUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCOM_MONALERT_FILT", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SCOM_MONALERT_FILT
		{
			get
			{
				return this._SCOM_MONALERT_FILT;
			}
			set
			{
				if ((this._SCOM_MONALERT_FILT != value))
				{
					this.OnSCOM_MONALERT_FILTChanging(value);
					this.SendPropertyChanging();
					this._SCOM_MONALERT_FILT = value;
					this.SendPropertyChanged("SCOM_MONALERT_FILT");
					this.OnSCOM_MONALERT_FILTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2007_MONALERT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCOM2007_MONALERT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCOM2007_MONALERT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCOM2007_MONHEALTH")]
	public partial class SCOM2007_MONHEALTH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _ObjectId;
		
		private string _Health;
		
		private string _MonitorId;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnObjectIdChanging(string value);
    partial void OnObjectIdChanged();
    partial void OnHealthChanging(string value);
    partial void OnHealthChanged();
    partial void OnMonitorIdChanging(string value);
    partial void OnMonitorIdChanged();
    #endregion
		
		public SCOM2007_MONHEALTH()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NVarChar(500)")]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="NVarChar(500)")]
		public string ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Health", DbType="NVarChar(30)")]
		public string Health
		{
			get
			{
				return this._Health;
			}
			set
			{
				if ((this._Health != value))
				{
					this.OnHealthChanging(value);
					this.SendPropertyChanging();
					this._Health = value;
					this.SendPropertyChanged("Health");
					this.OnHealthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonitorId", DbType="NVarChar(50)")]
		public string MonitorId
		{
			get
			{
				return this._MonitorId;
			}
			set
			{
				if ((this._MonitorId != value))
				{
					this.OnMonitorIdChanging(value);
					this.SendPropertyChanging();
					this._MonitorId = value;
					this.SendPropertyChanged("MonitorId");
					this.OnMonitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2007_MONHEALTH", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCOM2007_MONHEALTH = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCOM2007_MONHEALTH = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCOM2007_SCHEDMAINT")]
	public partial class SCOM2007_SCHEDMAINT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _ObjectId;
		
		private string _Duration;
		
		private string _Reason;
		
		private string _Comment;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnObjectIdChanging(string value);
    partial void OnObjectIdChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public SCOM2007_SCHEDMAINT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NVarChar(500)")]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="NVarChar(500)")]
		public string ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="NVarChar(500)")]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(500)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2007_SCHEDMAINT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCOM2007_SCHEDMAINT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCOM2007_SCHEDMAINT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCOM2007_STOPMAINT")]
	public partial class SCOM2007_STOPMAINT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _ObjectId;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnObjectIdChanging(string value);
    partial void OnObjectIdChanged();
    #endregion
		
		public SCOM2007_STOPMAINT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NVarChar(500)")]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="NVarChar(500)")]
		public string ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2007_STOPMAINT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCOM2007_STOPMAINT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCOM2007_STOPMAINT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCOM2007_UPDATEALERT")]
	public partial class SCOM2007_UPDATEALERT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _AlertId;
		
		private string _Properties;
		
		private string _Comment;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnAlertIdChanging(string value);
    partial void OnAlertIdChanged();
    partial void OnPropertiesChanging(string value);
    partial void OnPropertiesChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public SCOM2007_UPDATEALERT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NVarChar(500)")]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertId", DbType="NVarChar(500)")]
		public string AlertId
		{
			get
			{
				return this._AlertId;
			}
			set
			{
				if ((this._AlertId != value))
				{
					this.OnAlertIdChanging(value);
					this.SendPropertyChanging();
					this._AlertId = value;
					this.SendPropertyChanged("AlertId");
					this.OnAlertIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this.OnPropertiesChanging(value);
					this.SendPropertyChanging();
					this._Properties = value;
					this.SendPropertyChanged("Properties");
					this.OnPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2007_UPDATEALERT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCOM2007_UPDATEALERT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCOM2007_UPDATEALERT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCOM2012_CREATEALERT")]
	public partial class SCOM2012_CREATEALERT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _Properties;
		
		private string _Comment;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnPropertiesChanging(string value);
    partial void OnPropertiesChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public SCOM2012_CREATEALERT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NVarChar(500)")]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this.OnPropertiesChanging(value);
					this.SendPropertyChanging();
					this._Properties = value;
					this.SendPropertyChanged("Properties");
					this.OnPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2012_CREATEALERT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCOM2012_CREATEALERT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCOM2012_CREATEALERT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCOM2012_GETALERTS")]
	public partial class SCOM2012_GETALERTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _Filters;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnFiltersChanging(string value);
    partial void OnFiltersChanged();
    #endregion
		
		public SCOM2012_GETALERTS()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NVarChar(500)")]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filters", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Filters
		{
			get
			{
				return this._Filters;
			}
			set
			{
				if ((this._Filters != value))
				{
					this.OnFiltersChanging(value);
					this.SendPropertyChanging();
					this._Filters = value;
					this.SendPropertyChanged("Filters");
					this.OnFiltersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2012_GETALERTS", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCOM2012_GETALERTS = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCOM2012_GETALERTS = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCOM2012_GETMONITORS")]
	public partial class SCOM2012_GETMONITORS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _Filters;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnFiltersChanging(string value);
    partial void OnFiltersChanged();
    #endregion
		
		public SCOM2012_GETMONITORS()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NVarChar(500)")]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filters", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Filters
		{
			get
			{
				return this._Filters;
			}
			set
			{
				if ((this._Filters != value))
				{
					this.OnFiltersChanging(value);
					this.SendPropertyChanging();
					this._Filters = value;
					this.SendPropertyChanged("Filters");
					this.OnFiltersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2012_GETMONITORS", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCOM2012_GETMONITORS = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCOM2012_GETMONITORS = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCOM2012_MONALERT")]
	public partial class SCOM2012_MONALERT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _TriggerNew;
		
		private string _MonitorId;
		
		private string _TriggerUpdated;
		
		private string _SCOM_MONALERT_FILT;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnTriggerNewChanging(string value);
    partial void OnTriggerNewChanged();
    partial void OnMonitorIdChanging(string value);
    partial void OnMonitorIdChanged();
    partial void OnTriggerUpdatedChanging(string value);
    partial void OnTriggerUpdatedChanged();
    partial void OnSCOM_MONALERT_FILTChanging(string value);
    partial void OnSCOM_MONALERT_FILTChanged();
    #endregion
		
		public SCOM2012_MONALERT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NVarChar(500)")]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerNew", DbType="NVarChar(30)")]
		public string TriggerNew
		{
			get
			{
				return this._TriggerNew;
			}
			set
			{
				if ((this._TriggerNew != value))
				{
					this.OnTriggerNewChanging(value);
					this.SendPropertyChanging();
					this._TriggerNew = value;
					this.SendPropertyChanged("TriggerNew");
					this.OnTriggerNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonitorId", DbType="NVarChar(50)")]
		public string MonitorId
		{
			get
			{
				return this._MonitorId;
			}
			set
			{
				if ((this._MonitorId != value))
				{
					this.OnMonitorIdChanging(value);
					this.SendPropertyChanging();
					this._MonitorId = value;
					this.SendPropertyChanged("MonitorId");
					this.OnMonitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerUpdated", DbType="NVarChar(30)")]
		public string TriggerUpdated
		{
			get
			{
				return this._TriggerUpdated;
			}
			set
			{
				if ((this._TriggerUpdated != value))
				{
					this.OnTriggerUpdatedChanging(value);
					this.SendPropertyChanging();
					this._TriggerUpdated = value;
					this.SendPropertyChanged("TriggerUpdated");
					this.OnTriggerUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCOM_MONALERT_FILT", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SCOM_MONALERT_FILT
		{
			get
			{
				return this._SCOM_MONALERT_FILT;
			}
			set
			{
				if ((this._SCOM_MONALERT_FILT != value))
				{
					this.OnSCOM_MONALERT_FILTChanging(value);
					this.SendPropertyChanging();
					this._SCOM_MONALERT_FILT = value;
					this.SendPropertyChanged("SCOM_MONALERT_FILT");
					this.OnSCOM_MONALERT_FILTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2012_MONALERT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCOM2012_MONALERT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCOM2012_MONALERT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCOM2012_MONHEALTH")]
	public partial class SCOM2012_MONHEALTH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _ObjectId;
		
		private string _Health;
		
		private string _MonitorId;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnObjectIdChanging(string value);
    partial void OnObjectIdChanged();
    partial void OnHealthChanging(string value);
    partial void OnHealthChanged();
    partial void OnMonitorIdChanging(string value);
    partial void OnMonitorIdChanged();
    #endregion
		
		public SCOM2012_MONHEALTH()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NVarChar(500)")]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="NVarChar(500)")]
		public string ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Health", DbType="NVarChar(30)")]
		public string Health
		{
			get
			{
				return this._Health;
			}
			set
			{
				if ((this._Health != value))
				{
					this.OnHealthChanging(value);
					this.SendPropertyChanging();
					this._Health = value;
					this.SendPropertyChanged("Health");
					this.OnHealthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonitorId", DbType="NVarChar(50)")]
		public string MonitorId
		{
			get
			{
				return this._MonitorId;
			}
			set
			{
				if ((this._MonitorId != value))
				{
					this.OnMonitorIdChanging(value);
					this.SendPropertyChanging();
					this._MonitorId = value;
					this.SendPropertyChanged("MonitorId");
					this.OnMonitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2012_MONHEALTH", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCOM2012_MONHEALTH = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCOM2012_MONHEALTH = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCOM2012_SCHEDMAINT")]
	public partial class SCOM2012_SCHEDMAINT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _ObjectId;
		
		private string _Duration;
		
		private string _Reason;
		
		private string _Comment;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnObjectIdChanging(string value);
    partial void OnObjectIdChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public SCOM2012_SCHEDMAINT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NVarChar(500)")]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="NVarChar(500)")]
		public string ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="NVarChar(500)")]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(500)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2012_SCHEDMAINT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCOM2012_SCHEDMAINT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCOM2012_SCHEDMAINT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCOM2012_STOPMAINT")]
	public partial class SCOM2012_STOPMAINT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _ObjectId;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnObjectIdChanging(string value);
    partial void OnObjectIdChanged();
    #endregion
		
		public SCOM2012_STOPMAINT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NVarChar(500)")]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="NVarChar(500)")]
		public string ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2012_STOPMAINT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCOM2012_STOPMAINT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCOM2012_STOPMAINT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCOM2012_UPDATEALERT")]
	public partial class SCOM2012_UPDATEALERT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _AlertId;
		
		private string _Properties;
		
		private string _Comment;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnAlertIdChanging(string value);
    partial void OnAlertIdChanged();
    partial void OnPropertiesChanging(string value);
    partial void OnPropertiesChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public SCOM2012_UPDATEALERT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NVarChar(500)")]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertId", DbType="NVarChar(500)")]
		public string AlertId
		{
			get
			{
				return this._AlertId;
			}
			set
			{
				if ((this._AlertId != value))
				{
					this.OnAlertIdChanging(value);
					this.SendPropertyChanging();
					this._AlertId = value;
					this.SendPropertyChanged("AlertId");
					this.OnAlertIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this.OnPropertiesChanging(value);
					this.SendPropertyChanging();
					this._Properties = value;
					this.SendPropertyChanged("Properties");
					this.OnPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCOM2012_UPDATEALERT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCOM2012_UPDATEALERT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCOM2012_UPDATEALERT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCSM2012_CREATEOBJECT")]
	public partial class SCSM2012_CREATEOBJECT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _Class;
		
		private string _ClassDisplay;
		
		private string _Properties;
		
		private string _CachedProps;
		
		private string _ExecutionData;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnClassDisplayChanging(string value);
    partial void OnClassDisplayChanged();
    partial void OnPropertiesChanging(string value);
    partial void OnPropertiesChanged();
    partial void OnCachedPropsChanging(string value);
    partial void OnCachedPropsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    #endregion
		
		public SCSM2012_CREATEOBJECT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassDisplay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ClassDisplay
		{
			get
			{
				return this._ClassDisplay;
			}
			set
			{
				if ((this._ClassDisplay != value))
				{
					this.OnClassDisplayChanging(value);
					this.SendPropertyChanging();
					this._ClassDisplay = value;
					this.SendPropertyChanged("ClassDisplay");
					this.OnClassDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this.OnPropertiesChanging(value);
					this.SendPropertyChanging();
					this._Properties = value;
					this.SendPropertyChanged("Properties");
					this.OnPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CachedProps", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CachedProps
		{
			get
			{
				return this._CachedProps;
			}
			set
			{
				if ((this._CachedProps != value))
				{
					this.OnCachedPropsChanging(value);
					this.SendPropertyChanging();
					this._CachedProps = value;
					this.SendPropertyChanged("CachedProps");
					this.OnCachedPropsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_CREATEOBJECT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCSM2012_CREATEOBJECT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCSM2012_CREATEOBJECT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCSM2012_CREATEREL")]
	public partial class SCSM2012_CREATEREL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _Source;
		
		private string _SourceDisplay;
		
		private string _Target;
		
		private string _TargetDisplay;
		
		private string _Relation;
		
		private string _RelationDisplay;
		
		private string _SourceObjectGuid;
		
		private string _TargetObjectGuid;
		
		private string _Properties;
		
		private string _CachedProps;
		
		private string _ExecutionData;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnSourceDisplayChanging(string value);
    partial void OnSourceDisplayChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    partial void OnTargetDisplayChanging(string value);
    partial void OnTargetDisplayChanged();
    partial void OnRelationChanging(string value);
    partial void OnRelationChanged();
    partial void OnRelationDisplayChanging(string value);
    partial void OnRelationDisplayChanged();
    partial void OnSourceObjectGuidChanging(string value);
    partial void OnSourceObjectGuidChanged();
    partial void OnTargetObjectGuidChanging(string value);
    partial void OnTargetObjectGuidChanged();
    partial void OnPropertiesChanging(string value);
    partial void OnPropertiesChanged();
    partial void OnCachedPropsChanging(string value);
    partial void OnCachedPropsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    #endregion
		
		public SCSM2012_CREATEREL()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceDisplay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SourceDisplay
		{
			get
			{
				return this._SourceDisplay;
			}
			set
			{
				if ((this._SourceDisplay != value))
				{
					this.OnSourceDisplayChanging(value);
					this.SendPropertyChanging();
					this._SourceDisplay = value;
					this.SendPropertyChanged("SourceDisplay");
					this.OnSourceDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDisplay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string TargetDisplay
		{
			get
			{
				return this._TargetDisplay;
			}
			set
			{
				if ((this._TargetDisplay != value))
				{
					this.OnTargetDisplayChanging(value);
					this.SendPropertyChanging();
					this._TargetDisplay = value;
					this.SendPropertyChanged("TargetDisplay");
					this.OnTargetDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relation", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Relation
		{
			get
			{
				return this._Relation;
			}
			set
			{
				if ((this._Relation != value))
				{
					this.OnRelationChanging(value);
					this.SendPropertyChanging();
					this._Relation = value;
					this.SendPropertyChanged("Relation");
					this.OnRelationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationDisplay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string RelationDisplay
		{
			get
			{
				return this._RelationDisplay;
			}
			set
			{
				if ((this._RelationDisplay != value))
				{
					this.OnRelationDisplayChanging(value);
					this.SendPropertyChanging();
					this._RelationDisplay = value;
					this.SendPropertyChanged("RelationDisplay");
					this.OnRelationDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceObjectGuid", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SourceObjectGuid
		{
			get
			{
				return this._SourceObjectGuid;
			}
			set
			{
				if ((this._SourceObjectGuid != value))
				{
					this.OnSourceObjectGuidChanging(value);
					this.SendPropertyChanging();
					this._SourceObjectGuid = value;
					this.SendPropertyChanged("SourceObjectGuid");
					this.OnSourceObjectGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetObjectGuid", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string TargetObjectGuid
		{
			get
			{
				return this._TargetObjectGuid;
			}
			set
			{
				if ((this._TargetObjectGuid != value))
				{
					this.OnTargetObjectGuidChanging(value);
					this.SendPropertyChanging();
					this._TargetObjectGuid = value;
					this.SendPropertyChanged("TargetObjectGuid");
					this.OnTargetObjectGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this.OnPropertiesChanging(value);
					this.SendPropertyChanging();
					this._Properties = value;
					this.SendPropertyChanged("Properties");
					this.OnPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CachedProps", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CachedProps
		{
			get
			{
				return this._CachedProps;
			}
			set
			{
				if ((this._CachedProps != value))
				{
					this.OnCachedPropsChanging(value);
					this.SendPropertyChanging();
					this._CachedProps = value;
					this.SendPropertyChanged("CachedProps");
					this.OnCachedPropsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_CREATEREL", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCSM2012_CREATEREL = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCSM2012_CREATEREL = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCSM2012_CREATERELOBJ")]
	public partial class SCSM2012_CREATERELOBJ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _Source;
		
		private string _SourceDisplay;
		
		private string _Target;
		
		private string _TargetDisplay;
		
		private string _Relation;
		
		private string _RelationDisplay;
		
		private string _SourceObjectGuid;
		
		private string _TargetObjectGuid;
		
		private string _Properties;
		
		private string _CachedProps;
		
		private string _ExecutionData;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnSourceDisplayChanging(string value);
    partial void OnSourceDisplayChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    partial void OnTargetDisplayChanging(string value);
    partial void OnTargetDisplayChanged();
    partial void OnRelationChanging(string value);
    partial void OnRelationChanged();
    partial void OnRelationDisplayChanging(string value);
    partial void OnRelationDisplayChanged();
    partial void OnSourceObjectGuidChanging(string value);
    partial void OnSourceObjectGuidChanged();
    partial void OnTargetObjectGuidChanging(string value);
    partial void OnTargetObjectGuidChanged();
    partial void OnPropertiesChanging(string value);
    partial void OnPropertiesChanged();
    partial void OnCachedPropsChanging(string value);
    partial void OnCachedPropsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    #endregion
		
		public SCSM2012_CREATERELOBJ()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceDisplay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SourceDisplay
		{
			get
			{
				return this._SourceDisplay;
			}
			set
			{
				if ((this._SourceDisplay != value))
				{
					this.OnSourceDisplayChanging(value);
					this.SendPropertyChanging();
					this._SourceDisplay = value;
					this.SendPropertyChanged("SourceDisplay");
					this.OnSourceDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDisplay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string TargetDisplay
		{
			get
			{
				return this._TargetDisplay;
			}
			set
			{
				if ((this._TargetDisplay != value))
				{
					this.OnTargetDisplayChanging(value);
					this.SendPropertyChanging();
					this._TargetDisplay = value;
					this.SendPropertyChanged("TargetDisplay");
					this.OnTargetDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relation", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Relation
		{
			get
			{
				return this._Relation;
			}
			set
			{
				if ((this._Relation != value))
				{
					this.OnRelationChanging(value);
					this.SendPropertyChanging();
					this._Relation = value;
					this.SendPropertyChanged("Relation");
					this.OnRelationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationDisplay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string RelationDisplay
		{
			get
			{
				return this._RelationDisplay;
			}
			set
			{
				if ((this._RelationDisplay != value))
				{
					this.OnRelationDisplayChanging(value);
					this.SendPropertyChanging();
					this._RelationDisplay = value;
					this.SendPropertyChanged("RelationDisplay");
					this.OnRelationDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceObjectGuid", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SourceObjectGuid
		{
			get
			{
				return this._SourceObjectGuid;
			}
			set
			{
				if ((this._SourceObjectGuid != value))
				{
					this.OnSourceObjectGuidChanging(value);
					this.SendPropertyChanging();
					this._SourceObjectGuid = value;
					this.SendPropertyChanged("SourceObjectGuid");
					this.OnSourceObjectGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetObjectGuid", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string TargetObjectGuid
		{
			get
			{
				return this._TargetObjectGuid;
			}
			set
			{
				if ((this._TargetObjectGuid != value))
				{
					this.OnTargetObjectGuidChanging(value);
					this.SendPropertyChanging();
					this._TargetObjectGuid = value;
					this.SendPropertyChanged("TargetObjectGuid");
					this.OnTargetObjectGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this.OnPropertiesChanging(value);
					this.SendPropertyChanging();
					this._Properties = value;
					this.SendPropertyChanged("Properties");
					this.OnPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CachedProps", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CachedProps
		{
			get
			{
				return this._CachedProps;
			}
			set
			{
				if ((this._CachedProps != value))
				{
					this.OnCachedPropsChanging(value);
					this.SendPropertyChanging();
					this._CachedProps = value;
					this.SendPropertyChanged("CachedProps");
					this.OnCachedPropsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_CREATERELOBJ", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCSM2012_CREATERELOBJ = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCSM2012_CREATERELOBJ = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCSM2012_CRTCHGTMP")]
	public partial class SCSM2012_CRTCHGTMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _Class;
		
		private string _ClassDisplay;
		
		private string _Template;
		
		private string _TemplateDisplay;
		
		private string _Properties;
		
		private string _CachedProps;
		
		private string _ExecutionData;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnClassDisplayChanging(string value);
    partial void OnClassDisplayChanged();
    partial void OnTemplateChanging(string value);
    partial void OnTemplateChanged();
    partial void OnTemplateDisplayChanging(string value);
    partial void OnTemplateDisplayChanged();
    partial void OnPropertiesChanging(string value);
    partial void OnPropertiesChanged();
    partial void OnCachedPropsChanging(string value);
    partial void OnCachedPropsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    #endregion
		
		public SCSM2012_CRTCHGTMP()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassDisplay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ClassDisplay
		{
			get
			{
				return this._ClassDisplay;
			}
			set
			{
				if ((this._ClassDisplay != value))
				{
					this.OnClassDisplayChanging(value);
					this.SendPropertyChanging();
					this._ClassDisplay = value;
					this.SendPropertyChanged("ClassDisplay");
					this.OnClassDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this.OnTemplateChanging(value);
					this.SendPropertyChanging();
					this._Template = value;
					this.SendPropertyChanged("Template");
					this.OnTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateDisplay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string TemplateDisplay
		{
			get
			{
				return this._TemplateDisplay;
			}
			set
			{
				if ((this._TemplateDisplay != value))
				{
					this.OnTemplateDisplayChanging(value);
					this.SendPropertyChanging();
					this._TemplateDisplay = value;
					this.SendPropertyChanged("TemplateDisplay");
					this.OnTemplateDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this.OnPropertiesChanging(value);
					this.SendPropertyChanging();
					this._Properties = value;
					this.SendPropertyChanged("Properties");
					this.OnPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CachedProps", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CachedProps
		{
			get
			{
				return this._CachedProps;
			}
			set
			{
				if ((this._CachedProps != value))
				{
					this.OnCachedPropsChanging(value);
					this.SendPropertyChanging();
					this._CachedProps = value;
					this.SendPropertyChanged("CachedProps");
					this.OnCachedPropsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_CRTCHGTMP", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCSM2012_CRTCHGTMP = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCSM2012_CRTCHGTMP = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCSM2012_CRTINCTMP")]
	public partial class SCSM2012_CRTINCTMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _Class;
		
		private string _ClassDisplay;
		
		private string _Template;
		
		private string _TemplateDisplay;
		
		private string _Properties;
		
		private string _CachedProps;
		
		private string _ExecutionData;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnClassDisplayChanging(string value);
    partial void OnClassDisplayChanged();
    partial void OnTemplateChanging(string value);
    partial void OnTemplateChanged();
    partial void OnTemplateDisplayChanging(string value);
    partial void OnTemplateDisplayChanged();
    partial void OnPropertiesChanging(string value);
    partial void OnPropertiesChanged();
    partial void OnCachedPropsChanging(string value);
    partial void OnCachedPropsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    #endregion
		
		public SCSM2012_CRTINCTMP()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassDisplay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ClassDisplay
		{
			get
			{
				return this._ClassDisplay;
			}
			set
			{
				if ((this._ClassDisplay != value))
				{
					this.OnClassDisplayChanging(value);
					this.SendPropertyChanging();
					this._ClassDisplay = value;
					this.SendPropertyChanged("ClassDisplay");
					this.OnClassDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this.OnTemplateChanging(value);
					this.SendPropertyChanging();
					this._Template = value;
					this.SendPropertyChanged("Template");
					this.OnTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateDisplay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string TemplateDisplay
		{
			get
			{
				return this._TemplateDisplay;
			}
			set
			{
				if ((this._TemplateDisplay != value))
				{
					this.OnTemplateDisplayChanging(value);
					this.SendPropertyChanging();
					this._TemplateDisplay = value;
					this.SendPropertyChanged("TemplateDisplay");
					this.OnTemplateDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this.OnPropertiesChanging(value);
					this.SendPropertyChanging();
					this._Properties = value;
					this.SendPropertyChanged("Properties");
					this.OnPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CachedProps", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CachedProps
		{
			get
			{
				return this._CachedProps;
			}
			set
			{
				if ((this._CachedProps != value))
				{
					this.OnCachedPropsChanging(value);
					this.SendPropertyChanging();
					this._CachedProps = value;
					this.SendPropertyChanged("CachedProps");
					this.OnCachedPropsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_CRTINCTMP", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCSM2012_CRTINCTMP = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCSM2012_CRTINCTMP = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCSM2012_DELETEREL")]
	public partial class SCSM2012_DELETEREL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _SCObjectGuid;
		
		private string _ExecutionData;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnSCObjectGuidChanging(string value);
    partial void OnSCObjectGuidChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    #endregion
		
		public SCSM2012_DELETEREL()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCObjectGuid", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SCObjectGuid
		{
			get
			{
				return this._SCObjectGuid;
			}
			set
			{
				if ((this._SCObjectGuid != value))
				{
					this.OnSCObjectGuidChanging(value);
					this.SendPropertyChanging();
					this._SCObjectGuid = value;
					this.SendPropertyChanged("SCObjectGuid");
					this.OnSCObjectGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_DELETEREL", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCSM2012_DELETEREL = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCSM2012_DELETEREL = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCSM2012_GETACT")]
	public partial class SCSM2012_GETACT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _ExecutionData;
		
		private string _SCObjectGuid;
		
		private string _Class;
		
		private string _ClassDisplay;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnSCObjectGuidChanging(string value);
    partial void OnSCObjectGuidChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnClassDisplayChanging(string value);
    partial void OnClassDisplayChanged();
    #endregion
		
		public SCSM2012_GETACT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCObjectGuid", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SCObjectGuid
		{
			get
			{
				return this._SCObjectGuid;
			}
			set
			{
				if ((this._SCObjectGuid != value))
				{
					this.OnSCObjectGuidChanging(value);
					this.SendPropertyChanging();
					this._SCObjectGuid = value;
					this.SendPropertyChanged("SCObjectGuid");
					this.OnSCObjectGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassDisplay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ClassDisplay
		{
			get
			{
				return this._ClassDisplay;
			}
			set
			{
				if ((this._ClassDisplay != value))
				{
					this.OnClassDisplayChanging(value);
					this.SendPropertyChanging();
					this._ClassDisplay = value;
					this.SendPropertyChanged("ClassDisplay");
					this.OnClassDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_GETACT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCSM2012_GETACT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCSM2012_GETACT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCSM2012_GETOBJECT")]
	public partial class SCSM2012_GETOBJECT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _Class;
		
		private string _ClassDisplay;
		
		private string _Filters;
		
		private string _CachedProps;
		
		private string _ExecutionData;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnClassDisplayChanging(string value);
    partial void OnClassDisplayChanged();
    partial void OnFiltersChanging(string value);
    partial void OnFiltersChanged();
    partial void OnCachedPropsChanging(string value);
    partial void OnCachedPropsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    #endregion
		
		public SCSM2012_GETOBJECT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassDisplay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ClassDisplay
		{
			get
			{
				return this._ClassDisplay;
			}
			set
			{
				if ((this._ClassDisplay != value))
				{
					this.OnClassDisplayChanging(value);
					this.SendPropertyChanging();
					this._ClassDisplay = value;
					this.SendPropertyChanged("ClassDisplay");
					this.OnClassDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filters", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Filters
		{
			get
			{
				return this._Filters;
			}
			set
			{
				if ((this._Filters != value))
				{
					this.OnFiltersChanging(value);
					this.SendPropertyChanging();
					this._Filters = value;
					this.SendPropertyChanged("Filters");
					this.OnFiltersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CachedProps", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CachedProps
		{
			get
			{
				return this._CachedProps;
			}
			set
			{
				if ((this._CachedProps != value))
				{
					this.OnCachedPropsChanging(value);
					this.SendPropertyChanging();
					this._CachedProps = value;
					this.SendPropertyChanged("CachedProps");
					this.OnCachedPropsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_GETOBJECT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCSM2012_GETOBJECT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCSM2012_GETOBJECT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCSM2012_GETRELOBJ")]
	public partial class SCSM2012_GETRELOBJ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _Source;
		
		private string _SourceDisplay;
		
		private string _Target;
		
		private string _TargetDisplay;
		
		private string _SourceObjectGuid;
		
		private string _ExecutionData;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnSourceDisplayChanging(string value);
    partial void OnSourceDisplayChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    partial void OnTargetDisplayChanging(string value);
    partial void OnTargetDisplayChanged();
    partial void OnSourceObjectGuidChanging(string value);
    partial void OnSourceObjectGuidChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    #endregion
		
		public SCSM2012_GETRELOBJ()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceDisplay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SourceDisplay
		{
			get
			{
				return this._SourceDisplay;
			}
			set
			{
				if ((this._SourceDisplay != value))
				{
					this.OnSourceDisplayChanging(value);
					this.SendPropertyChanging();
					this._SourceDisplay = value;
					this.SendPropertyChanged("SourceDisplay");
					this.OnSourceDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDisplay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string TargetDisplay
		{
			get
			{
				return this._TargetDisplay;
			}
			set
			{
				if ((this._TargetDisplay != value))
				{
					this.OnTargetDisplayChanging(value);
					this.SendPropertyChanging();
					this._TargetDisplay = value;
					this.SendPropertyChanged("TargetDisplay");
					this.OnTargetDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceObjectGuid", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SourceObjectGuid
		{
			get
			{
				return this._SourceObjectGuid;
			}
			set
			{
				if ((this._SourceObjectGuid != value))
				{
					this.OnSourceObjectGuidChanging(value);
					this.SendPropertyChanging();
					this._SourceObjectGuid = value;
					this.SendPropertyChanged("SourceObjectGuid");
					this.OnSourceObjectGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_GETRELOBJ", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCSM2012_GETRELOBJ = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCSM2012_GETRELOBJ = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCSM2012_MONOBJECT")]
	public partial class SCSM2012_MONOBJECT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _Class;
		
		private string _ClassDisplay;
		
		private string _Filters;
		
		private string _CachedProps;
		
		private string _ExecutionData;
		
		private string _TriggerNew;
		
		private string _TriggerUpdated;
		
		private string _TriggerDeleted;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnClassDisplayChanging(string value);
    partial void OnClassDisplayChanged();
    partial void OnFiltersChanging(string value);
    partial void OnFiltersChanged();
    partial void OnCachedPropsChanging(string value);
    partial void OnCachedPropsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnTriggerNewChanging(string value);
    partial void OnTriggerNewChanged();
    partial void OnTriggerUpdatedChanging(string value);
    partial void OnTriggerUpdatedChanged();
    partial void OnTriggerDeletedChanging(string value);
    partial void OnTriggerDeletedChanged();
    #endregion
		
		public SCSM2012_MONOBJECT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassDisplay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ClassDisplay
		{
			get
			{
				return this._ClassDisplay;
			}
			set
			{
				if ((this._ClassDisplay != value))
				{
					this.OnClassDisplayChanging(value);
					this.SendPropertyChanging();
					this._ClassDisplay = value;
					this.SendPropertyChanged("ClassDisplay");
					this.OnClassDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filters", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Filters
		{
			get
			{
				return this._Filters;
			}
			set
			{
				if ((this._Filters != value))
				{
					this.OnFiltersChanging(value);
					this.SendPropertyChanging();
					this._Filters = value;
					this.SendPropertyChanged("Filters");
					this.OnFiltersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CachedProps", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CachedProps
		{
			get
			{
				return this._CachedProps;
			}
			set
			{
				if ((this._CachedProps != value))
				{
					this.OnCachedPropsChanging(value);
					this.SendPropertyChanging();
					this._CachedProps = value;
					this.SendPropertyChanged("CachedProps");
					this.OnCachedPropsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerNew", DbType="NVarChar(30)")]
		public string TriggerNew
		{
			get
			{
				return this._TriggerNew;
			}
			set
			{
				if ((this._TriggerNew != value))
				{
					this.OnTriggerNewChanging(value);
					this.SendPropertyChanging();
					this._TriggerNew = value;
					this.SendPropertyChanged("TriggerNew");
					this.OnTriggerNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerUpdated", DbType="NVarChar(30)")]
		public string TriggerUpdated
		{
			get
			{
				return this._TriggerUpdated;
			}
			set
			{
				if ((this._TriggerUpdated != value))
				{
					this.OnTriggerUpdatedChanging(value);
					this.SendPropertyChanging();
					this._TriggerUpdated = value;
					this.SendPropertyChanged("TriggerUpdated");
					this.OnTriggerUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerDeleted", DbType="NVarChar(30)")]
		public string TriggerDeleted
		{
			get
			{
				return this._TriggerDeleted;
			}
			set
			{
				if ((this._TriggerDeleted != value))
				{
					this.OnTriggerDeletedChanging(value);
					this.SendPropertyChanging();
					this._TriggerDeleted = value;
					this.SendPropertyChanged("TriggerDeleted");
					this.OnTriggerDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_MONOBJECT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCSM2012_MONOBJECT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCSM2012_MONOBJECT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCSM2012_UPDATEACT")]
	public partial class SCSM2012_UPDATEACT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _Properties;
		
		private string _ExecutionData;
		
		private string _Class;
		
		private string _ClassDisplay;
		
		private string _SCObjectGuid;
		
		private string _CachedProps;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnPropertiesChanging(string value);
    partial void OnPropertiesChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnClassDisplayChanging(string value);
    partial void OnClassDisplayChanged();
    partial void OnSCObjectGuidChanging(string value);
    partial void OnSCObjectGuidChanged();
    partial void OnCachedPropsChanging(string value);
    partial void OnCachedPropsChanged();
    #endregion
		
		public SCSM2012_UPDATEACT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this.OnPropertiesChanging(value);
					this.SendPropertyChanging();
					this._Properties = value;
					this.SendPropertyChanged("Properties");
					this.OnPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassDisplay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ClassDisplay
		{
			get
			{
				return this._ClassDisplay;
			}
			set
			{
				if ((this._ClassDisplay != value))
				{
					this.OnClassDisplayChanging(value);
					this.SendPropertyChanging();
					this._ClassDisplay = value;
					this.SendPropertyChanged("ClassDisplay");
					this.OnClassDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCObjectGuid", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SCObjectGuid
		{
			get
			{
				return this._SCObjectGuid;
			}
			set
			{
				if ((this._SCObjectGuid != value))
				{
					this.OnSCObjectGuidChanging(value);
					this.SendPropertyChanging();
					this._SCObjectGuid = value;
					this.SendPropertyChanged("SCObjectGuid");
					this.OnSCObjectGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CachedProps", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CachedProps
		{
			get
			{
				return this._CachedProps;
			}
			set
			{
				if ((this._CachedProps != value))
				{
					this.OnCachedPropsChanging(value);
					this.SendPropertyChanging();
					this._CachedProps = value;
					this.SendPropertyChanged("CachedProps");
					this.OnCachedPropsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_UPDATEACT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCSM2012_UPDATEACT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCSM2012_UPDATEACT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCSM2012_UPDATEATTACH")]
	public partial class SCSM2012_UPDATEATTACH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _Class;
		
		private string _ClassDisplay;
		
		private string _Properties;
		
		private string _CachedProps;
		
		private string _ExecutionData;
		
		private string _SCObjectGuid;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnClassDisplayChanging(string value);
    partial void OnClassDisplayChanged();
    partial void OnPropertiesChanging(string value);
    partial void OnPropertiesChanged();
    partial void OnCachedPropsChanging(string value);
    partial void OnCachedPropsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnSCObjectGuidChanging(string value);
    partial void OnSCObjectGuidChanged();
    #endregion
		
		public SCSM2012_UPDATEATTACH()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassDisplay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ClassDisplay
		{
			get
			{
				return this._ClassDisplay;
			}
			set
			{
				if ((this._ClassDisplay != value))
				{
					this.OnClassDisplayChanging(value);
					this.SendPropertyChanging();
					this._ClassDisplay = value;
					this.SendPropertyChanged("ClassDisplay");
					this.OnClassDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this.OnPropertiesChanging(value);
					this.SendPropertyChanging();
					this._Properties = value;
					this.SendPropertyChanged("Properties");
					this.OnPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CachedProps", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CachedProps
		{
			get
			{
				return this._CachedProps;
			}
			set
			{
				if ((this._CachedProps != value))
				{
					this.OnCachedPropsChanging(value);
					this.SendPropertyChanging();
					this._CachedProps = value;
					this.SendPropertyChanged("CachedProps");
					this.OnCachedPropsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCObjectGuid", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SCObjectGuid
		{
			get
			{
				return this._SCObjectGuid;
			}
			set
			{
				if ((this._SCObjectGuid != value))
				{
					this.OnSCObjectGuidChanging(value);
					this.SendPropertyChanging();
					this._SCObjectGuid = value;
					this.SendPropertyChanged("SCObjectGuid");
					this.OnSCObjectGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_UPDATEATTACH", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCSM2012_UPDATEATTACH = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCSM2012_UPDATEATTACH = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCSM2012_UPDATEOBJECT")]
	public partial class SCSM2012_UPDATEOBJECT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Connection;
		
		private string _Class;
		
		private string _ClassDisplay;
		
		private string _Properties;
		
		private string _CachedProps;
		
		private string _ExecutionData;
		
		private string _SCObjectGuid;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnClassDisplayChanging(string value);
    partial void OnClassDisplayChanged();
    partial void OnPropertiesChanging(string value);
    partial void OnPropertiesChanged();
    partial void OnCachedPropsChanging(string value);
    partial void OnCachedPropsChanged();
    partial void OnExecutionDataChanging(string value);
    partial void OnExecutionDataChanged();
    partial void OnSCObjectGuidChanging(string value);
    partial void OnSCObjectGuidChanged();
    #endregion
		
		public SCSM2012_UPDATEOBJECT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassDisplay", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ClassDisplay
		{
			get
			{
				return this._ClassDisplay;
			}
			set
			{
				if ((this._ClassDisplay != value))
				{
					this.OnClassDisplayChanging(value);
					this.SendPropertyChanging();
					this._ClassDisplay = value;
					this.SendPropertyChanged("ClassDisplay");
					this.OnClassDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this.OnPropertiesChanging(value);
					this.SendPropertyChanging();
					this._Properties = value;
					this.SendPropertyChanged("Properties");
					this.OnPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CachedProps", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CachedProps
		{
			get
			{
				return this._CachedProps;
			}
			set
			{
				if ((this._CachedProps != value))
				{
					this.OnCachedPropsChanging(value);
					this.SendPropertyChanging();
					this._CachedProps = value;
					this.SendPropertyChanged("CachedProps");
					this.OnCachedPropsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExecutionData
		{
			get
			{
				return this._ExecutionData;
			}
			set
			{
				if ((this._ExecutionData != value))
				{
					this.OnExecutionDataChanging(value);
					this.SendPropertyChanging();
					this._ExecutionData = value;
					this.SendPropertyChanged("ExecutionData");
					this.OnExecutionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCObjectGuid", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SCObjectGuid
		{
			get
			{
				return this._SCObjectGuid;
			}
			set
			{
				if ((this._SCObjectGuid != value))
				{
					this.OnSCObjectGuidChanging(value);
					this.SendPropertyChanging();
					this._SCObjectGuid = value;
					this.SendPropertyChanged("SCObjectGuid");
					this.OnSCObjectGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SCSM2012_UPDATEOBJECT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SCSM2012_UPDATEOBJECT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SCSM2012_UPDATEOBJECT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Internal].[SecurityTokenParties]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _TokenId;
		
		private long _PartyId;
		
		private EntityRef<_Microsoft_SystemCenter_Orchestrator_Internal___Parties_> @__Microsoft_SystemCenter_Orchestrator_Internal___Parties_;
		
		private EntityRef<_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_> @__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTokenIdChanging(long value);
    partial void OnTokenIdChanged();
    partial void OnPartyIdChanging(long value);
    partial void OnPartyIdChanged();
    #endregion
		
		public _Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_()
		{
			this.@__Microsoft_SystemCenter_Orchestrator_Internal___Parties_ = default(EntityRef<_Microsoft_SystemCenter_Orchestrator_Internal___Parties_>);
			this.@__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_ = default(EntityRef<_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TokenId", DbType="BigInt NOT NULL")]
		public long TokenId
		{
			get
			{
				return this._TokenId;
			}
			set
			{
				if ((this._TokenId != value))
				{
					if (this.@__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTokenIdChanging(value);
					this.SendPropertyChanging();
					this._TokenId = value;
					this.SendPropertyChanged("TokenId");
					this.OnTokenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyId", DbType="BigInt NOT NULL")]
		public long PartyId
		{
			get
			{
				return this._PartyId;
			}
			set
			{
				if ((this._PartyId != value))
				{
					if (this.@__Microsoft_SystemCenter_Orchestrator_Internal___Parties_.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartyIdChanging(value);
					this.SendPropertyChanging();
					this._PartyId = value;
					this.SendPropertyChanged("PartyId");
					this.OnPartyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Microsoft_SystemCenter_Orchestrator_Internal___Parties___Microsoft_SystemCenter_" +
			"Orchestrator_Internal___SecurityTokenParties_", Storage="__Microsoft_SystemCenter_Orchestrator_Internal___Parties_", ThisKey="PartyId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public _Microsoft_SystemCenter_Orchestrator_Internal___Parties_ _Microsoft_SystemCenter_Orchestrator_Internal___Parties_
		{
			get
			{
				return this.@__Microsoft_SystemCenter_Orchestrator_Internal___Parties_.Entity;
			}
			set
			{
				_Microsoft_SystemCenter_Orchestrator_Internal___Parties_ previousValue = this.@__Microsoft_SystemCenter_Orchestrator_Internal___Parties_.Entity;
				if (((previousValue != value) 
							|| (this.@__Microsoft_SystemCenter_Orchestrator_Internal___Parties_.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__Microsoft_SystemCenter_Orchestrator_Internal___Parties_.Entity = null;
						previousValue._Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_.Remove(this);
					}
					this.@__Microsoft_SystemCenter_Orchestrator_Internal___Parties_.Entity = value;
					if ((value != null))
					{
						value._Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_.Add(this);
						this._PartyId = value.Id;
					}
					else
					{
						this._PartyId = default(long);
					}
					this.SendPropertyChanged("_Microsoft_SystemCenter_Orchestrator_Internal___Parties_");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens___Microsoft_System" +
			"Center_Orchestrator_Internal___SecurityTokenParties_", Storage="__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_", ThisKey="TokenId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public _Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_ _Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_
		{
			get
			{
				return this.@__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_.Entity;
			}
			set
			{
				_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_ previousValue = this.@__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_.Entity;
				if (((previousValue != value) 
							|| (this.@__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_.Entity = null;
						previousValue._Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_.Remove(this);
					}
					this.@__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_.Entity = value;
					if ((value != null))
					{
						value._Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_.Add(this);
						this._TokenId = value.Id;
					}
					else
					{
						this._TokenId = default(long);
					}
					this.SendPropertyChanged("_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Internal].[SecurityTokens]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _ExpirationTime;
		
		private EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_> @__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnExpirationTimeChanging(System.DateTime value);
    partial void OnExpirationTimeChanged();
    #endregion
		
		public _Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_()
		{
			this.@__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_ = new EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_>(new Action<_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_>(this.attach__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_), new Action<_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_>(this.detach__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationTime", DbType="DateTime NOT NULL")]
		public System.DateTime ExpirationTime
		{
			get
			{
				return this._ExpirationTime;
			}
			set
			{
				if ((this._ExpirationTime != value))
				{
					this.OnExpirationTimeChanging(value);
					this.SendPropertyChanging();
					this._ExpirationTime = value;
					this.SendPropertyChanged("ExpirationTime");
					this.OnExpirationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens___Microsoft_System" +
			"Center_Orchestrator_Internal___SecurityTokenParties_", Storage="__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_", ThisKey="Id", OtherKey="TokenId")]
		public EntitySet<_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_> _Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_
		{
			get
			{
				return this.@__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_;
			}
			set
			{
				this.@__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_(_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_ entity)
		{
			this.SendPropertyChanging();
			entity._Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_ = this;
		}
		
		private void detach__Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_(_Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokenParties_ entity)
		{
			this.SendPropertyChanging();
			entity._Microsoft_SystemCenter_Orchestrator_Internal___SecurityTokens_ = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SETTINGS")]
	public partial class SETTINGS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ObjectType;
		
		private string _Attribute;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnObjectTypeChanging(System.Guid value);
    partial void OnObjectTypeChanged();
    partial void OnAttributeChanging(string value);
    partial void OnAttributeChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public SETTINGS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attribute", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Attribute
		{
			get
			{
				return this._Attribute;
			}
			set
			{
				if ((this._Attribute != value))
				{
					this.OnAttributeChanging(value);
					this.SendPropertyChanging();
					this._Attribute = value;
					this.SendPropertyChanged("Attribute");
					this.OnAttributeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIDS")]
	public partial class SIDS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _SID;
		
		private string _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnSIDChanging(string value);
    partial void OnSIDChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    #endregion
		
		public SIDS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(2000)")]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSH_RUNCOMMAND")]
	public partial class SSH_RUNCOMMAND : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Command;
		
		private string _Script;
		
		private System.Nullable<int> _UsingCommand;
		
		private string _Computer;
		
		private string _KeyFile;
		
		private string _Password;
		
		private string _Port;
		
		private string _Username;
		
		private System.Nullable<int> _UsingPassword;
		
		private System.Nullable<int> _UsingKeyFile;
		
		private System.Nullable<int> _RemoveRegistryKey;
		
		private string _Timeout;
		
		private string _RemoteCharSet;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnCommandChanging(string value);
    partial void OnCommandChanged();
    partial void OnScriptChanging(string value);
    partial void OnScriptChanged();
    partial void OnUsingCommandChanging(System.Nullable<int> value);
    partial void OnUsingCommandChanged();
    partial void OnComputerChanging(string value);
    partial void OnComputerChanged();
    partial void OnKeyFileChanging(string value);
    partial void OnKeyFileChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPortChanging(string value);
    partial void OnPortChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnUsingPasswordChanging(System.Nullable<int> value);
    partial void OnUsingPasswordChanged();
    partial void OnUsingKeyFileChanging(System.Nullable<int> value);
    partial void OnUsingKeyFileChanged();
    partial void OnRemoveRegistryKeyChanging(System.Nullable<int> value);
    partial void OnRemoveRegistryKeyChanged();
    partial void OnTimeoutChanging(string value);
    partial void OnTimeoutChanged();
    partial void OnRemoteCharSetChanging(string value);
    partial void OnRemoteCharSetChanged();
    #endregion
		
		public SSH_RUNCOMMAND()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Command", DbType="NVarChar(2000)")]
		public string Command
		{
			get
			{
				return this._Command;
			}
			set
			{
				if ((this._Command != value))
				{
					this.OnCommandChanging(value);
					this.SendPropertyChanging();
					this._Command = value;
					this.SendPropertyChanged("Command");
					this.OnCommandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Script", DbType="NVarChar(2000)")]
		public string Script
		{
			get
			{
				return this._Script;
			}
			set
			{
				if ((this._Script != value))
				{
					this.OnScriptChanging(value);
					this.SendPropertyChanging();
					this._Script = value;
					this.SendPropertyChanged("Script");
					this.OnScriptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsingCommand", DbType="Int")]
		public System.Nullable<int> UsingCommand
		{
			get
			{
				return this._UsingCommand;
			}
			set
			{
				if ((this._UsingCommand != value))
				{
					this.OnUsingCommandChanging(value);
					this.SendPropertyChanging();
					this._UsingCommand = value;
					this.SendPropertyChanged("UsingCommand");
					this.OnUsingCommandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Computer", DbType="NVarChar(2000)")]
		public string Computer
		{
			get
			{
				return this._Computer;
			}
			set
			{
				if ((this._Computer != value))
				{
					this.OnComputerChanging(value);
					this.SendPropertyChanging();
					this._Computer = value;
					this.SendPropertyChanged("Computer");
					this.OnComputerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyFile", DbType="NVarChar(2000)")]
		public string KeyFile
		{
			get
			{
				return this._KeyFile;
			}
			set
			{
				if ((this._KeyFile != value))
				{
					this.OnKeyFileChanging(value);
					this.SendPropertyChanging();
					this._KeyFile = value;
					this.SendPropertyChanged("KeyFile");
					this.OnKeyFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(2000)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="NVarChar(2000)")]
		public string Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(2000)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsingPassword", DbType="Int")]
		public System.Nullable<int> UsingPassword
		{
			get
			{
				return this._UsingPassword;
			}
			set
			{
				if ((this._UsingPassword != value))
				{
					this.OnUsingPasswordChanging(value);
					this.SendPropertyChanging();
					this._UsingPassword = value;
					this.SendPropertyChanged("UsingPassword");
					this.OnUsingPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsingKeyFile", DbType="Int")]
		public System.Nullable<int> UsingKeyFile
		{
			get
			{
				return this._UsingKeyFile;
			}
			set
			{
				if ((this._UsingKeyFile != value))
				{
					this.OnUsingKeyFileChanging(value);
					this.SendPropertyChanging();
					this._UsingKeyFile = value;
					this.SendPropertyChanged("UsingKeyFile");
					this.OnUsingKeyFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoveRegistryKey", DbType="Int")]
		public System.Nullable<int> RemoveRegistryKey
		{
			get
			{
				return this._RemoveRegistryKey;
			}
			set
			{
				if ((this._RemoveRegistryKey != value))
				{
					this.OnRemoveRegistryKeyChanging(value);
					this.SendPropertyChanging();
					this._RemoveRegistryKey = value;
					this.SendPropertyChanged("RemoveRegistryKey");
					this.OnRemoveRegistryKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timeout", DbType="NVarChar(2000)")]
		public string Timeout
		{
			get
			{
				return this._Timeout;
			}
			set
			{
				if ((this._Timeout != value))
				{
					this.OnTimeoutChanging(value);
					this.SendPropertyChanging();
					this._Timeout = value;
					this.SendPropertyChanged("Timeout");
					this.OnTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoteCharSet", DbType="NVarChar(1000)")]
		public string RemoteCharSet
		{
			get
			{
				return this._RemoteCharSet;
			}
			set
			{
				if ((this._RemoteCharSet != value))
				{
					this.OnRemoteCharSetChanging(value);
					this.SendPropertyChanging();
					this._RemoteCharSet = value;
					this.SendPropertyChanged("RemoteCharSet");
					this.OnRemoteCharSetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_SSH_RUNCOMMAND", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.SSH_RUNCOMMAND = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.SSH_RUNCOMMAND = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Statistics].[Statistics]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Statistics___Statistics_
	{
		
		private System.Guid _Id;
		
		private System.Guid _RunbookId;
		
		private string _RunbookPath;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private System.Guid _ResourceId;
		
		private string _ResourceType;
		
		private string _Counter;
		
		private string _Criteria;
		
		private int _Value;
		
		public _Microsoft_SystemCenter_Orchestrator_Statistics___Statistics_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RunbookId
		{
			get
			{
				return this._RunbookId;
			}
			set
			{
				if ((this._RunbookId != value))
				{
					this._RunbookId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookPath", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string RunbookPath
		{
			get
			{
				return this._RunbookPath;
			}
			set
			{
				if ((this._RunbookPath != value))
				{
					this._RunbookPath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this._StartTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this._EndTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ResourceId
		{
			get
			{
				return this._ResourceId;
			}
			set
			{
				if ((this._ResourceId != value))
				{
					this._ResourceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceType", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string ResourceType
		{
			get
			{
				return this._ResourceType;
			}
			set
			{
				if ((this._ResourceType != value))
				{
					this._ResourceType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Counter", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Counter
		{
			get
			{
				return this._Counter;
			}
			set
			{
				if ((this._Counter != value))
				{
					this._Counter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Criteria", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Criteria
		{
			get
			{
				return this._Criteria;
			}
			set
			{
				if ((this._Criteria != value))
				{
					this._Criteria = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[Microsoft.SystemCenter.Orchestrator.Statistics.Internal].[Statistics]")]
	public partial class _Microsoft_SystemCenter_Orchestrator_Statistics_Internal___Statistics_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _RunbookId;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private System.Guid _ResourceId;
		
		private string _ResourceType;
		
		private string _Counter;
		
		private string _Criteria;
		
		private int _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRunbookIdChanging(System.Guid value);
    partial void OnRunbookIdChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnResourceIdChanging(System.Guid value);
    partial void OnResourceIdChanged();
    partial void OnResourceTypeChanging(string value);
    partial void OnResourceTypeChanged();
    partial void OnCounterChanging(string value);
    partial void OnCounterChanged();
    partial void OnCriteriaChanging(string value);
    partial void OnCriteriaChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    #endregion
		
		public _Microsoft_SystemCenter_Orchestrator_Statistics_Internal___Statistics_()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RunbookId
		{
			get
			{
				return this._RunbookId;
			}
			set
			{
				if ((this._RunbookId != value))
				{
					this.OnRunbookIdChanging(value);
					this.SendPropertyChanging();
					this._RunbookId = value;
					this.SendPropertyChanged("RunbookId");
					this.OnRunbookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ResourceId
		{
			get
			{
				return this._ResourceId;
			}
			set
			{
				if ((this._ResourceId != value))
				{
					this.OnResourceIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceId = value;
					this.SendPropertyChanged("ResourceId");
					this.OnResourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceType", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string ResourceType
		{
			get
			{
				return this._ResourceType;
			}
			set
			{
				if ((this._ResourceType != value))
				{
					this.OnResourceTypeChanging(value);
					this.SendPropertyChanging();
					this._ResourceType = value;
					this.SendPropertyChanged("ResourceType");
					this.OnResourceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Counter", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Counter
		{
			get
			{
				return this._Counter;
			}
			set
			{
				if ((this._Counter != value))
				{
					this.OnCounterChanging(value);
					this.SendPropertyChanging();
					this._Counter = value;
					this.SendPropertyChanged("Counter");
					this.OnCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Criteria", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Criteria
		{
			get
			{
				return this._Criteria;
			}
			set
			{
				if ((this._Criteria != value))
				{
					this.OnCriteriaChanging(value);
					this.SendPropertyChanging();
					this._Criteria = value;
					this.SendPropertyChanged("Criteria");
					this.OnCriteriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STATUS_SCHEDULE")]
	public partial class STATUS_SCHEDULE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Nullable<System.Guid> _ScheduleTemplateID;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnScheduleTemplateIDChanging(System.Nullable<System.Guid> value);
    partial void OnScheduleTemplateIDChanged();
    #endregion
		
		public STATUS_SCHEDULE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleTemplateID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ScheduleTemplateID
		{
			get
			{
				return this._ScheduleTemplateID;
			}
			set
			{
				if ((this._ScheduleTemplateID != value))
				{
					this.OnScheduleTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleTemplateID = value;
					this.SendPropertyChanged("ScheduleTemplateID");
					this.OnScheduleTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_STATUS_SCHEDULE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.STATUS_SCHEDULE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.STATUS_SCHEDULE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_APPLY_XSLT")]
	public partial class TASK_APPLY_XSLT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _InXmlPath;
		
		private string _XsltPath;
		
		private string _OutXmlPath;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnInXmlPathChanging(string value);
    partial void OnInXmlPathChanged();
    partial void OnXsltPathChanging(string value);
    partial void OnXsltPathChanged();
    partial void OnOutXmlPathChanging(string value);
    partial void OnOutXmlPathChanged();
    #endregion
		
		public TASK_APPLY_XSLT()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InXmlPath", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string InXmlPath
		{
			get
			{
				return this._InXmlPath;
			}
			set
			{
				if ((this._InXmlPath != value))
				{
					this.OnInXmlPathChanging(value);
					this.SendPropertyChanging();
					this._InXmlPath = value;
					this.SendPropertyChanged("InXmlPath");
					this.OnInXmlPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XsltPath", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string XsltPath
		{
			get
			{
				return this._XsltPath;
			}
			set
			{
				if ((this._XsltPath != value))
				{
					this.OnXsltPathChanging(value);
					this.SendPropertyChanging();
					this._XsltPath = value;
					this.SendPropertyChanged("XsltPath");
					this.OnXsltPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutXmlPath", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string OutXmlPath
		{
			get
			{
				return this._OutXmlPath;
			}
			set
			{
				if ((this._OutXmlPath != value))
				{
					this.OnOutXmlPathChanging(value);
					this.SendPropertyChanging();
					this._OutXmlPath = value;
					this.SendPropertyChanged("OutXmlPath");
					this.OnOutXmlPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_APPLY_XSLT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_APPLY_XSLT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_APPLY_XSLT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_COMPARE")]
	public partial class TASK_COMPARE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _StringToCompare;
		
		private System.Nullable<int> _StringTestOption;
		
		private string _StringToCompareTo;
		
		private System.Nullable<int> _CaseSensitive;
		
		private string _ValueToCompare;
		
		private System.Nullable<int> _ValueTestOption;
		
		private string _ValueToCompareTo;
		
		private string _ReturnSuccessText;
		
		private string _ReturnSuccessValue;
		
		private string _ReturnFailedText;
		
		private System.Nullable<int> _FailIfFalse;
		
		private string _ReturnFailedValue;
		
		private string _ReturnValueSuccess;
		
		private string _ReturnValueFailed;
		
		private System.Nullable<int> _FailValueIfFalse;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnStringToCompareChanging(string value);
    partial void OnStringToCompareChanged();
    partial void OnStringTestOptionChanging(System.Nullable<int> value);
    partial void OnStringTestOptionChanged();
    partial void OnStringToCompareToChanging(string value);
    partial void OnStringToCompareToChanged();
    partial void OnCaseSensitiveChanging(System.Nullable<int> value);
    partial void OnCaseSensitiveChanged();
    partial void OnValueToCompareChanging(string value);
    partial void OnValueToCompareChanged();
    partial void OnValueTestOptionChanging(System.Nullable<int> value);
    partial void OnValueTestOptionChanged();
    partial void OnValueToCompareToChanging(string value);
    partial void OnValueToCompareToChanged();
    partial void OnReturnSuccessTextChanging(string value);
    partial void OnReturnSuccessTextChanged();
    partial void OnReturnSuccessValueChanging(string value);
    partial void OnReturnSuccessValueChanged();
    partial void OnReturnFailedTextChanging(string value);
    partial void OnReturnFailedTextChanged();
    partial void OnFailIfFalseChanging(System.Nullable<int> value);
    partial void OnFailIfFalseChanged();
    partial void OnReturnFailedValueChanging(string value);
    partial void OnReturnFailedValueChanged();
    partial void OnReturnValueSuccessChanging(string value);
    partial void OnReturnValueSuccessChanged();
    partial void OnReturnValueFailedChanging(string value);
    partial void OnReturnValueFailedChanged();
    partial void OnFailValueIfFalseChanging(System.Nullable<int> value);
    partial void OnFailValueIfFalseChanged();
    #endregion
		
		public TASK_COMPARE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StringToCompare", DbType="NVarChar(2000)")]
		public string StringToCompare
		{
			get
			{
				return this._StringToCompare;
			}
			set
			{
				if ((this._StringToCompare != value))
				{
					this.OnStringToCompareChanging(value);
					this.SendPropertyChanging();
					this._StringToCompare = value;
					this.SendPropertyChanged("StringToCompare");
					this.OnStringToCompareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StringTestOption", DbType="Int")]
		public System.Nullable<int> StringTestOption
		{
			get
			{
				return this._StringTestOption;
			}
			set
			{
				if ((this._StringTestOption != value))
				{
					this.OnStringTestOptionChanging(value);
					this.SendPropertyChanging();
					this._StringTestOption = value;
					this.SendPropertyChanged("StringTestOption");
					this.OnStringTestOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StringToCompareTo", DbType="NVarChar(2000)")]
		public string StringToCompareTo
		{
			get
			{
				return this._StringToCompareTo;
			}
			set
			{
				if ((this._StringToCompareTo != value))
				{
					this.OnStringToCompareToChanging(value);
					this.SendPropertyChanging();
					this._StringToCompareTo = value;
					this.SendPropertyChanged("StringToCompareTo");
					this.OnStringToCompareToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseSensitive", DbType="Int")]
		public System.Nullable<int> CaseSensitive
		{
			get
			{
				return this._CaseSensitive;
			}
			set
			{
				if ((this._CaseSensitive != value))
				{
					this.OnCaseSensitiveChanging(value);
					this.SendPropertyChanging();
					this._CaseSensitive = value;
					this.SendPropertyChanged("CaseSensitive");
					this.OnCaseSensitiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueToCompare", DbType="NVarChar(2000)")]
		public string ValueToCompare
		{
			get
			{
				return this._ValueToCompare;
			}
			set
			{
				if ((this._ValueToCompare != value))
				{
					this.OnValueToCompareChanging(value);
					this.SendPropertyChanging();
					this._ValueToCompare = value;
					this.SendPropertyChanged("ValueToCompare");
					this.OnValueToCompareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueTestOption", DbType="Int")]
		public System.Nullable<int> ValueTestOption
		{
			get
			{
				return this._ValueTestOption;
			}
			set
			{
				if ((this._ValueTestOption != value))
				{
					this.OnValueTestOptionChanging(value);
					this.SendPropertyChanging();
					this._ValueTestOption = value;
					this.SendPropertyChanged("ValueTestOption");
					this.OnValueTestOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueToCompareTo", DbType="NVarChar(2000)")]
		public string ValueToCompareTo
		{
			get
			{
				return this._ValueToCompareTo;
			}
			set
			{
				if ((this._ValueToCompareTo != value))
				{
					this.OnValueToCompareToChanging(value);
					this.SendPropertyChanging();
					this._ValueToCompareTo = value;
					this.SendPropertyChanged("ValueToCompareTo");
					this.OnValueToCompareToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnSuccessText", DbType="NVarChar(1000)")]
		public string ReturnSuccessText
		{
			get
			{
				return this._ReturnSuccessText;
			}
			set
			{
				if ((this._ReturnSuccessText != value))
				{
					this.OnReturnSuccessTextChanging(value);
					this.SendPropertyChanging();
					this._ReturnSuccessText = value;
					this.SendPropertyChanged("ReturnSuccessText");
					this.OnReturnSuccessTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnSuccessValue", DbType="NVarChar(1000)")]
		public string ReturnSuccessValue
		{
			get
			{
				return this._ReturnSuccessValue;
			}
			set
			{
				if ((this._ReturnSuccessValue != value))
				{
					this.OnReturnSuccessValueChanging(value);
					this.SendPropertyChanging();
					this._ReturnSuccessValue = value;
					this.SendPropertyChanged("ReturnSuccessValue");
					this.OnReturnSuccessValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnFailedText", DbType="NVarChar(1000)")]
		public string ReturnFailedText
		{
			get
			{
				return this._ReturnFailedText;
			}
			set
			{
				if ((this._ReturnFailedText != value))
				{
					this.OnReturnFailedTextChanging(value);
					this.SendPropertyChanging();
					this._ReturnFailedText = value;
					this.SendPropertyChanged("ReturnFailedText");
					this.OnReturnFailedTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailIfFalse", DbType="Int")]
		public System.Nullable<int> FailIfFalse
		{
			get
			{
				return this._FailIfFalse;
			}
			set
			{
				if ((this._FailIfFalse != value))
				{
					this.OnFailIfFalseChanging(value);
					this.SendPropertyChanging();
					this._FailIfFalse = value;
					this.SendPropertyChanged("FailIfFalse");
					this.OnFailIfFalseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnFailedValue", DbType="NVarChar(1000)")]
		public string ReturnFailedValue
		{
			get
			{
				return this._ReturnFailedValue;
			}
			set
			{
				if ((this._ReturnFailedValue != value))
				{
					this.OnReturnFailedValueChanging(value);
					this.SendPropertyChanging();
					this._ReturnFailedValue = value;
					this.SendPropertyChanged("ReturnFailedValue");
					this.OnReturnFailedValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnValueSuccess", DbType="NVarChar(1000)")]
		public string ReturnValueSuccess
		{
			get
			{
				return this._ReturnValueSuccess;
			}
			set
			{
				if ((this._ReturnValueSuccess != value))
				{
					this.OnReturnValueSuccessChanging(value);
					this.SendPropertyChanging();
					this._ReturnValueSuccess = value;
					this.SendPropertyChanged("ReturnValueSuccess");
					this.OnReturnValueSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnValueFailed", DbType="NVarChar(1000)")]
		public string ReturnValueFailed
		{
			get
			{
				return this._ReturnValueFailed;
			}
			set
			{
				if ((this._ReturnValueFailed != value))
				{
					this.OnReturnValueFailedChanging(value);
					this.SendPropertyChanging();
					this._ReturnValueFailed = value;
					this.SendPropertyChanged("ReturnValueFailed");
					this.OnReturnValueFailedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailValueIfFalse", DbType="Int")]
		public System.Nullable<int> FailValueIfFalse
		{
			get
			{
				return this._FailValueIfFalse;
			}
			set
			{
				if ((this._FailValueIfFalse != value))
				{
					this.OnFailValueIfFalseChanging(value);
					this.SendPropertyChanging();
					this._FailValueIfFalse = value;
					this.SendPropertyChanged("FailValueIfFalse");
					this.OnFailValueIfFalseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_COMPARE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_COMPARE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_COMPARE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_COMPRESS")]
	public partial class TASK_COMPRESS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _ArchiveName;
		
		private string _MaskName;
		
		private string _DestinationFolder;
		
		private System.Nullable<int> _RecurseTree;
		
		private System.Nullable<int> _FileOptions;
		
		private string _OriginFolder;
		
		private System.Nullable<int> _ArchiveOption;
		
		private System.Nullable<int> _IncludeSubfolders;
		
		private string _DestinationArchive;
		
		private System.Nullable<int> _IncludeRelativePath;
		
		private System.Nullable<int> _CompressionLevel;
		
		private string _ArchiveToTest;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnArchiveNameChanging(string value);
    partial void OnArchiveNameChanged();
    partial void OnMaskNameChanging(string value);
    partial void OnMaskNameChanged();
    partial void OnDestinationFolderChanging(string value);
    partial void OnDestinationFolderChanged();
    partial void OnRecurseTreeChanging(System.Nullable<int> value);
    partial void OnRecurseTreeChanged();
    partial void OnFileOptionsChanging(System.Nullable<int> value);
    partial void OnFileOptionsChanged();
    partial void OnOriginFolderChanging(string value);
    partial void OnOriginFolderChanged();
    partial void OnArchiveOptionChanging(System.Nullable<int> value);
    partial void OnArchiveOptionChanged();
    partial void OnIncludeSubfoldersChanging(System.Nullable<int> value);
    partial void OnIncludeSubfoldersChanged();
    partial void OnDestinationArchiveChanging(string value);
    partial void OnDestinationArchiveChanged();
    partial void OnIncludeRelativePathChanging(System.Nullable<int> value);
    partial void OnIncludeRelativePathChanged();
    partial void OnCompressionLevelChanging(System.Nullable<int> value);
    partial void OnCompressionLevelChanged();
    partial void OnArchiveToTestChanging(string value);
    partial void OnArchiveToTestChanged();
    #endregion
		
		public TASK_COMPRESS()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchiveName", DbType="NVarChar(2000)")]
		public string ArchiveName
		{
			get
			{
				return this._ArchiveName;
			}
			set
			{
				if ((this._ArchiveName != value))
				{
					this.OnArchiveNameChanging(value);
					this.SendPropertyChanging();
					this._ArchiveName = value;
					this.SendPropertyChanged("ArchiveName");
					this.OnArchiveNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaskName", DbType="NVarChar(2000)")]
		public string MaskName
		{
			get
			{
				return this._MaskName;
			}
			set
			{
				if ((this._MaskName != value))
				{
					this.OnMaskNameChanging(value);
					this.SendPropertyChanging();
					this._MaskName = value;
					this.SendPropertyChanged("MaskName");
					this.OnMaskNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationFolder", DbType="NVarChar(2000)")]
		public string DestinationFolder
		{
			get
			{
				return this._DestinationFolder;
			}
			set
			{
				if ((this._DestinationFolder != value))
				{
					this.OnDestinationFolderChanging(value);
					this.SendPropertyChanging();
					this._DestinationFolder = value;
					this.SendPropertyChanged("DestinationFolder");
					this.OnDestinationFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurseTree", DbType="Int")]
		public System.Nullable<int> RecurseTree
		{
			get
			{
				return this._RecurseTree;
			}
			set
			{
				if ((this._RecurseTree != value))
				{
					this.OnRecurseTreeChanging(value);
					this.SendPropertyChanging();
					this._RecurseTree = value;
					this.SendPropertyChanged("RecurseTree");
					this.OnRecurseTreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileOptions", DbType="Int")]
		public System.Nullable<int> FileOptions
		{
			get
			{
				return this._FileOptions;
			}
			set
			{
				if ((this._FileOptions != value))
				{
					this.OnFileOptionsChanging(value);
					this.SendPropertyChanging();
					this._FileOptions = value;
					this.SendPropertyChanged("FileOptions");
					this.OnFileOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginFolder", DbType="NVarChar(2000)")]
		public string OriginFolder
		{
			get
			{
				return this._OriginFolder;
			}
			set
			{
				if ((this._OriginFolder != value))
				{
					this.OnOriginFolderChanging(value);
					this.SendPropertyChanging();
					this._OriginFolder = value;
					this.SendPropertyChanged("OriginFolder");
					this.OnOriginFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchiveOption", DbType="Int")]
		public System.Nullable<int> ArchiveOption
		{
			get
			{
				return this._ArchiveOption;
			}
			set
			{
				if ((this._ArchiveOption != value))
				{
					this.OnArchiveOptionChanging(value);
					this.SendPropertyChanging();
					this._ArchiveOption = value;
					this.SendPropertyChanged("ArchiveOption");
					this.OnArchiveOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeSubfolders", DbType="Int")]
		public System.Nullable<int> IncludeSubfolders
		{
			get
			{
				return this._IncludeSubfolders;
			}
			set
			{
				if ((this._IncludeSubfolders != value))
				{
					this.OnIncludeSubfoldersChanging(value);
					this.SendPropertyChanging();
					this._IncludeSubfolders = value;
					this.SendPropertyChanged("IncludeSubfolders");
					this.OnIncludeSubfoldersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationArchive", DbType="NVarChar(2000)")]
		public string DestinationArchive
		{
			get
			{
				return this._DestinationArchive;
			}
			set
			{
				if ((this._DestinationArchive != value))
				{
					this.OnDestinationArchiveChanging(value);
					this.SendPropertyChanging();
					this._DestinationArchive = value;
					this.SendPropertyChanged("DestinationArchive");
					this.OnDestinationArchiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeRelativePath", DbType="Int")]
		public System.Nullable<int> IncludeRelativePath
		{
			get
			{
				return this._IncludeRelativePath;
			}
			set
			{
				if ((this._IncludeRelativePath != value))
				{
					this.OnIncludeRelativePathChanging(value);
					this.SendPropertyChanging();
					this._IncludeRelativePath = value;
					this.SendPropertyChanged("IncludeRelativePath");
					this.OnIncludeRelativePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompressionLevel", DbType="Int")]
		public System.Nullable<int> CompressionLevel
		{
			get
			{
				return this._CompressionLevel;
			}
			set
			{
				if ((this._CompressionLevel != value))
				{
					this.OnCompressionLevelChanging(value);
					this.SendPropertyChanging();
					this._CompressionLevel = value;
					this.SendPropertyChanged("CompressionLevel");
					this.OnCompressionLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchiveToTest", DbType="NVarChar(2000)")]
		public string ArchiveToTest
		{
			get
			{
				return this._ArchiveToTest;
			}
			set
			{
				if ((this._ArchiveToTest != value))
				{
					this.OnArchiveToTestChanging(value);
					this.SendPropertyChanging();
					this._ArchiveToTest = value;
					this.SendPropertyChanged("ArchiveToTest");
					this.OnArchiveToTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_COMPRESS", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_COMPRESS = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_COMPRESS = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_COMPUTERIP")]
	public partial class TASK_COMPUTERIP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _ComputerName;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    #endregion
		
		public TASK_COMPUTERIP()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="NVarChar(500)")]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_COMPUTERIP", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_COMPUTERIP = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_COMPUTERIP = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_DIALUPNETWORKING")]
	public partial class TASK_DIALUPNETWORKING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _PhoneBook;
		
		private int _Action;
		
		private int _NumberOfRetries;
		
		private System.Nullable<int> _RetryInterval;
		
		private string _DomainName;
		
		private string _Username;
		
		private string _Password;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnPhoneBookChanging(string value);
    partial void OnPhoneBookChanged();
    partial void OnActionChanging(int value);
    partial void OnActionChanged();
    partial void OnNumberOfRetriesChanging(int value);
    partial void OnNumberOfRetriesChanged();
    partial void OnRetryIntervalChanging(System.Nullable<int> value);
    partial void OnRetryIntervalChanged();
    partial void OnDomainNameChanging(string value);
    partial void OnDomainNameChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public TASK_DIALUPNETWORKING()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneBook", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string PhoneBook
		{
			get
			{
				return this._PhoneBook;
			}
			set
			{
				if ((this._PhoneBook != value))
				{
					this.OnPhoneBookChanging(value);
					this.SendPropertyChanging();
					this._PhoneBook = value;
					this.SendPropertyChanged("PhoneBook");
					this.OnPhoneBookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="Int NOT NULL")]
		public int Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfRetries", DbType="Int NOT NULL")]
		public int NumberOfRetries
		{
			get
			{
				return this._NumberOfRetries;
			}
			set
			{
				if ((this._NumberOfRetries != value))
				{
					this.OnNumberOfRetriesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfRetries = value;
					this.SendPropertyChanged("NumberOfRetries");
					this.OnNumberOfRetriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetryInterval", DbType="Int")]
		public System.Nullable<int> RetryInterval
		{
			get
			{
				return this._RetryInterval;
			}
			set
			{
				if ((this._RetryInterval != value))
				{
					this.OnRetryIntervalChanging(value);
					this.SendPropertyChanging();
					this._RetryInterval = value;
					this.SendPropertyChanged("RetryInterval");
					this.OnRetryIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainName", DbType="NVarChar(200)")]
		public string DomainName
		{
			get
			{
				return this._DomainName;
			}
			set
			{
				if ((this._DomainName != value))
				{
					this.OnDomainNameChanging(value);
					this.SendPropertyChanging();
					this._DomainName = value;
					this.SendPropertyChanged("DomainName");
					this.OnDomainNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(200)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(2000)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_DIALUPNETWORKING", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_DIALUPNETWORKING = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_DIALUPNETWORKING = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_DIALUPNETWORKINGSTATUS")]
	public partial class TASK_DIALUPNETWORKINGSTATUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _PhoneBook;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnPhoneBookChanging(string value);
    partial void OnPhoneBookChanged();
    #endregion
		
		public TASK_DIALUPNETWORKINGSTATUS()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneBook", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string PhoneBook
		{
			get
			{
				return this._PhoneBook;
			}
			set
			{
				if ((this._PhoneBook != value))
				{
					this.OnPhoneBookChanging(value);
					this.SendPropertyChanging();
					this._PhoneBook = value;
					this.SendPropertyChanged("PhoneBook");
					this.OnPhoneBookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_DIALUPNETWORKINGSTATUS", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_DIALUPNETWORKINGSTATUS = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_DIALUPNETWORKINGSTATUS = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_DISCONNECTNETWORKPATH")]
	public partial class TASK_DISCONNECTNETWORKPATH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _NetworkPath;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnNetworkPathChanging(string value);
    partial void OnNetworkPathChanged();
    #endregion
		
		public TASK_DISCONNECTNETWORKPATH()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkPath", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string NetworkPath
		{
			get
			{
				return this._NetworkPath;
			}
			set
			{
				if ((this._NetworkPath != value))
				{
					this.OnNetworkPathChanging(value);
					this.SendPropertyChanging();
					this._NetworkPath = value;
					this.SendPropertyChanged("NetworkPath");
					this.OnNetworkPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_DISCONNECTNETWORKPATH", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_DISCONNECTNETWORKPATH = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_DISCONNECTNETWORKPATH = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_EMAIL")]
	public partial class TASK_EMAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _SenderAddress;
		
		private string _Subject;
		
		private string _MessageContent;
		
		private System.Nullable<int> _MessageType;
		
		private int _FailIfAttachmentMissing;
		
		private string _OutgoingServer;
		
		private int _OutgoingServerPort;
		
		private int _OutgoingServerEnableSsl;
		
		private int _MailPriority;
		
		private int _MailFormat;
		
		private string _Username;
		
		private string _Password;
		
		private string _Domain;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnSenderAddressChanging(string value);
    partial void OnSenderAddressChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnMessageContentChanging(string value);
    partial void OnMessageContentChanged();
    partial void OnMessageTypeChanging(System.Nullable<int> value);
    partial void OnMessageTypeChanged();
    partial void OnFailIfAttachmentMissingChanging(int value);
    partial void OnFailIfAttachmentMissingChanged();
    partial void OnOutgoingServerChanging(string value);
    partial void OnOutgoingServerChanged();
    partial void OnOutgoingServerPortChanging(int value);
    partial void OnOutgoingServerPortChanged();
    partial void OnOutgoingServerEnableSslChanging(int value);
    partial void OnOutgoingServerEnableSslChanged();
    partial void OnMailPriorityChanging(int value);
    partial void OnMailPriorityChanged();
    partial void OnMailFormatChanging(int value);
    partial void OnMailFormatChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnDomainChanging(string value);
    partial void OnDomainChanged();
    #endregion
		
		public TASK_EMAIL()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderAddress", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string SenderAddress
		{
			get
			{
				return this._SenderAddress;
			}
			set
			{
				if ((this._SenderAddress != value))
				{
					this.OnSenderAddressChanging(value);
					this.SendPropertyChanging();
					this._SenderAddress = value;
					this.SendPropertyChanged("SenderAddress");
					this.OnSenderAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(2000)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageContent", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string MessageContent
		{
			get
			{
				return this._MessageContent;
			}
			set
			{
				if ((this._MessageContent != value))
				{
					this.OnMessageContentChanging(value);
					this.SendPropertyChanging();
					this._MessageContent = value;
					this.SendPropertyChanged("MessageContent");
					this.OnMessageContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageType", DbType="Int")]
		public System.Nullable<int> MessageType
		{
			get
			{
				return this._MessageType;
			}
			set
			{
				if ((this._MessageType != value))
				{
					this.OnMessageTypeChanging(value);
					this.SendPropertyChanging();
					this._MessageType = value;
					this.SendPropertyChanged("MessageType");
					this.OnMessageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailIfAttachmentMissing", DbType="Int NOT NULL")]
		public int FailIfAttachmentMissing
		{
			get
			{
				return this._FailIfAttachmentMissing;
			}
			set
			{
				if ((this._FailIfAttachmentMissing != value))
				{
					this.OnFailIfAttachmentMissingChanging(value);
					this.SendPropertyChanging();
					this._FailIfAttachmentMissing = value;
					this.SendPropertyChanged("FailIfAttachmentMissing");
					this.OnFailIfAttachmentMissingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutgoingServer", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string OutgoingServer
		{
			get
			{
				return this._OutgoingServer;
			}
			set
			{
				if ((this._OutgoingServer != value))
				{
					this.OnOutgoingServerChanging(value);
					this.SendPropertyChanging();
					this._OutgoingServer = value;
					this.SendPropertyChanged("OutgoingServer");
					this.OnOutgoingServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutgoingServerPort", DbType="Int NOT NULL")]
		public int OutgoingServerPort
		{
			get
			{
				return this._OutgoingServerPort;
			}
			set
			{
				if ((this._OutgoingServerPort != value))
				{
					this.OnOutgoingServerPortChanging(value);
					this.SendPropertyChanging();
					this._OutgoingServerPort = value;
					this.SendPropertyChanged("OutgoingServerPort");
					this.OnOutgoingServerPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutgoingServerEnableSsl", DbType="Int NOT NULL")]
		public int OutgoingServerEnableSsl
		{
			get
			{
				return this._OutgoingServerEnableSsl;
			}
			set
			{
				if ((this._OutgoingServerEnableSsl != value))
				{
					this.OnOutgoingServerEnableSslChanging(value);
					this.SendPropertyChanging();
					this._OutgoingServerEnableSsl = value;
					this.SendPropertyChanged("OutgoingServerEnableSsl");
					this.OnOutgoingServerEnableSslChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailPriority", DbType="Int NOT NULL")]
		public int MailPriority
		{
			get
			{
				return this._MailPriority;
			}
			set
			{
				if ((this._MailPriority != value))
				{
					this.OnMailPriorityChanging(value);
					this.SendPropertyChanging();
					this._MailPriority = value;
					this.SendPropertyChanged("MailPriority");
					this.OnMailPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailFormat", DbType="Int NOT NULL")]
		public int MailFormat
		{
			get
			{
				return this._MailFormat;
			}
			set
			{
				if ((this._MailFormat != value))
				{
					this.OnMailFormatChanging(value);
					this.SendPropertyChanging();
					this._MailFormat = value;
					this.SendPropertyChanged("MailFormat");
					this.OnMailFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(2000)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(2000)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Domain", DbType="NVarChar(2000)")]
		public string Domain
		{
			get
			{
				return this._Domain;
			}
			set
			{
				if ((this._Domain != value))
				{
					this.OnDomainChanging(value);
					this.SendPropertyChanging();
					this._Domain = value;
					this.SendPropertyChanged("Domain");
					this.OnDomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_EMAIL", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_EMAIL = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_EMAIL = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_ENDPROCESS")]
	public partial class TASK_ENDPROCESS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Computer;
		
		private string _Process;
		
		private int _Timeout;
		
		private System.Nullable<int> _InstancesOption;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnComputerChanging(string value);
    partial void OnComputerChanged();
    partial void OnProcessChanging(string value);
    partial void OnProcessChanged();
    partial void OnTimeoutChanging(int value);
    partial void OnTimeoutChanged();
    partial void OnInstancesOptionChanging(System.Nullable<int> value);
    partial void OnInstancesOptionChanged();
    #endregion
		
		public TASK_ENDPROCESS()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Computer", DbType="NVarChar(500)")]
		public string Computer
		{
			get
			{
				return this._Computer;
			}
			set
			{
				if ((this._Computer != value))
				{
					this.OnComputerChanging(value);
					this.SendPropertyChanging();
					this._Computer = value;
					this.SendPropertyChanged("Computer");
					this.OnComputerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Process
		{
			get
			{
				return this._Process;
			}
			set
			{
				if ((this._Process != value))
				{
					this.OnProcessChanging(value);
					this.SendPropertyChanging();
					this._Process = value;
					this.SendPropertyChanged("Process");
					this.OnProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timeout", DbType="Int NOT NULL")]
		public int Timeout
		{
			get
			{
				return this._Timeout;
			}
			set
			{
				if ((this._Timeout != value))
				{
					this.OnTimeoutChanging(value);
					this.SendPropertyChanging();
					this._Timeout = value;
					this.SendPropertyChanged("Timeout");
					this.OnTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstancesOption", DbType="Int")]
		public System.Nullable<int> InstancesOption
		{
			get
			{
				return this._InstancesOption;
			}
			set
			{
				if ((this._InstancesOption != value))
				{
					this.OnInstancesOptionChanging(value);
					this.SendPropertyChanging();
					this._InstancesOption = value;
					this.SendPropertyChanged("InstancesOption");
					this.OnInstancesOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_ENDPROCESS", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_ENDPROCESS = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_ENDPROCESS = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_FILEMANAGEMENT")]
	public partial class TASK_FILEMANAGEMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _OriginFolder;
		
		private System.Nullable<int> _OriginOptions;
		
		private string _DestinationFolder;
		
		private System.Nullable<int> _DestinationOptions;
		
		private System.Nullable<int> _FileAgeOptions;
		
		private System.Nullable<int> _FileAgeDays;
		
		private System.Nullable<int> _FileAgeDateOptions;
		
		private string _FileAgeExistOption;
		
		private EntitySet<TASK_FILEMANAGEMENTRENAME> _TASK_FILEMANAGEMENTRENAME;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnOriginFolderChanging(string value);
    partial void OnOriginFolderChanged();
    partial void OnOriginOptionsChanging(System.Nullable<int> value);
    partial void OnOriginOptionsChanged();
    partial void OnDestinationFolderChanging(string value);
    partial void OnDestinationFolderChanged();
    partial void OnDestinationOptionsChanging(System.Nullable<int> value);
    partial void OnDestinationOptionsChanged();
    partial void OnFileAgeOptionsChanging(System.Nullable<int> value);
    partial void OnFileAgeOptionsChanged();
    partial void OnFileAgeDaysChanging(System.Nullable<int> value);
    partial void OnFileAgeDaysChanged();
    partial void OnFileAgeDateOptionsChanging(System.Nullable<int> value);
    partial void OnFileAgeDateOptionsChanged();
    partial void OnFileAgeExistOptionChanging(string value);
    partial void OnFileAgeExistOptionChanged();
    #endregion
		
		public TASK_FILEMANAGEMENT()
		{
			this._TASK_FILEMANAGEMENTRENAME = new EntitySet<TASK_FILEMANAGEMENTRENAME>(new Action<TASK_FILEMANAGEMENTRENAME>(this.attach_TASK_FILEMANAGEMENTRENAME), new Action<TASK_FILEMANAGEMENTRENAME>(this.detach_TASK_FILEMANAGEMENTRENAME));
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginFolder", DbType="NVarChar(500)")]
		public string OriginFolder
		{
			get
			{
				return this._OriginFolder;
			}
			set
			{
				if ((this._OriginFolder != value))
				{
					this.OnOriginFolderChanging(value);
					this.SendPropertyChanging();
					this._OriginFolder = value;
					this.SendPropertyChanged("OriginFolder");
					this.OnOriginFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginOptions", DbType="Int")]
		public System.Nullable<int> OriginOptions
		{
			get
			{
				return this._OriginOptions;
			}
			set
			{
				if ((this._OriginOptions != value))
				{
					this.OnOriginOptionsChanging(value);
					this.SendPropertyChanging();
					this._OriginOptions = value;
					this.SendPropertyChanged("OriginOptions");
					this.OnOriginOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationFolder", DbType="NVarChar(500)")]
		public string DestinationFolder
		{
			get
			{
				return this._DestinationFolder;
			}
			set
			{
				if ((this._DestinationFolder != value))
				{
					this.OnDestinationFolderChanging(value);
					this.SendPropertyChanging();
					this._DestinationFolder = value;
					this.SendPropertyChanged("DestinationFolder");
					this.OnDestinationFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationOptions", DbType="Int")]
		public System.Nullable<int> DestinationOptions
		{
			get
			{
				return this._DestinationOptions;
			}
			set
			{
				if ((this._DestinationOptions != value))
				{
					this.OnDestinationOptionsChanging(value);
					this.SendPropertyChanging();
					this._DestinationOptions = value;
					this.SendPropertyChanged("DestinationOptions");
					this.OnDestinationOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAgeOptions", DbType="Int")]
		public System.Nullable<int> FileAgeOptions
		{
			get
			{
				return this._FileAgeOptions;
			}
			set
			{
				if ((this._FileAgeOptions != value))
				{
					this.OnFileAgeOptionsChanging(value);
					this.SendPropertyChanging();
					this._FileAgeOptions = value;
					this.SendPropertyChanged("FileAgeOptions");
					this.OnFileAgeOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAgeDays", DbType="Int")]
		public System.Nullable<int> FileAgeDays
		{
			get
			{
				return this._FileAgeDays;
			}
			set
			{
				if ((this._FileAgeDays != value))
				{
					this.OnFileAgeDaysChanging(value);
					this.SendPropertyChanging();
					this._FileAgeDays = value;
					this.SendPropertyChanged("FileAgeDays");
					this.OnFileAgeDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAgeDateOptions", DbType="Int")]
		public System.Nullable<int> FileAgeDateOptions
		{
			get
			{
				return this._FileAgeDateOptions;
			}
			set
			{
				if ((this._FileAgeDateOptions != value))
				{
					this.OnFileAgeDateOptionsChanging(value);
					this.SendPropertyChanging();
					this._FileAgeDateOptions = value;
					this.SendPropertyChanged("FileAgeDateOptions");
					this.OnFileAgeDateOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAgeExistOption", DbType="NVarChar(500)")]
		public string FileAgeExistOption
		{
			get
			{
				return this._FileAgeExistOption;
			}
			set
			{
				if ((this._FileAgeExistOption != value))
				{
					this.OnFileAgeExistOptionChanging(value);
					this.SendPropertyChanging();
					this._FileAgeExistOption = value;
					this.SendPropertyChanged("FileAgeExistOption");
					this.OnFileAgeExistOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TASK_FILEMANAGEMENT_TASK_FILEMANAGEMENTRENAME", Storage="_TASK_FILEMANAGEMENTRENAME", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<TASK_FILEMANAGEMENTRENAME> TASK_FILEMANAGEMENTRENAME
		{
			get
			{
				return this._TASK_FILEMANAGEMENTRENAME;
			}
			set
			{
				this._TASK_FILEMANAGEMENTRENAME.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_FILEMANAGEMENT", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_FILEMANAGEMENT = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_FILEMANAGEMENT = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TASK_FILEMANAGEMENTRENAME(TASK_FILEMANAGEMENTRENAME entity)
		{
			this.SendPropertyChanging();
			entity.TASK_FILEMANAGEMENT = this;
		}
		
		private void detach_TASK_FILEMANAGEMENTRENAME(TASK_FILEMANAGEMENTRENAME entity)
		{
			this.SendPropertyChanging();
			entity.TASK_FILEMANAGEMENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_FILEMANAGEMENTRENAME")]
	public partial class TASK_FILEMANAGEMENTRENAME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ParentID;
		
		private string _OriginalandNewName;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
		private EntityRef<TASK_FILEMANAGEMENT> _TASK_FILEMANAGEMENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnParentIDChanging(System.Guid value);
    partial void OnParentIDChanged();
    partial void OnOriginalandNewNameChanging(string value);
    partial void OnOriginalandNewNameChanged();
    #endregion
		
		public TASK_FILEMANAGEMENTRENAME()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			this._TASK_FILEMANAGEMENT = default(EntityRef<TASK_FILEMANAGEMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if ((this._OBJECTS.HasLoadedOrAssignedValue || this._TASK_FILEMANAGEMENT.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalandNewName", DbType="NVarChar(500)")]
		public string OriginalandNewName
		{
			get
			{
				return this._OriginalandNewName;
			}
			set
			{
				if ((this._OriginalandNewName != value))
				{
					this.OnOriginalandNewNameChanging(value);
					this.SendPropertyChanging();
					this._OriginalandNewName = value;
					this.SendPropertyChanged("OriginalandNewName");
					this.OnOriginalandNewNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_FILEMANAGEMENTRENAME", Storage="_OBJECTS", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_FILEMANAGEMENTRENAME.Remove(this);
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_FILEMANAGEMENTRENAME.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TASK_FILEMANAGEMENT_TASK_FILEMANAGEMENTRENAME", Storage="_TASK_FILEMANAGEMENT", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public TASK_FILEMANAGEMENT TASK_FILEMANAGEMENT
		{
			get
			{
				return this._TASK_FILEMANAGEMENT.Entity;
			}
			set
			{
				TASK_FILEMANAGEMENT previousValue = this._TASK_FILEMANAGEMENT.Entity;
				if (((previousValue != value) 
							|| (this._TASK_FILEMANAGEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_FILEMANAGEMENT.Entity = null;
						previousValue.TASK_FILEMANAGEMENTRENAME.Remove(this);
					}
					this._TASK_FILEMANAGEMENT.Entity = value;
					if ((value != null))
					{
						value.TASK_FILEMANAGEMENTRENAME.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("TASK_FILEMANAGEMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_FORMATDATE")]
	public partial class TASK_FORMATDATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _SpecifiedTime;
		
		private string _InputFormat;
		
		private string _OutputFormat;
		
		private string _AdjustDays;
		
		private string _AdjustMonths;
		
		private string _AdjustYears;
		
		private string _AdjustHours;
		
		private string _AdjustMinutes;
		
		private string _AdjustSeconds;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnSpecifiedTimeChanging(string value);
    partial void OnSpecifiedTimeChanged();
    partial void OnInputFormatChanging(string value);
    partial void OnInputFormatChanged();
    partial void OnOutputFormatChanging(string value);
    partial void OnOutputFormatChanged();
    partial void OnAdjustDaysChanging(string value);
    partial void OnAdjustDaysChanged();
    partial void OnAdjustMonthsChanging(string value);
    partial void OnAdjustMonthsChanged();
    partial void OnAdjustYearsChanging(string value);
    partial void OnAdjustYearsChanged();
    partial void OnAdjustHoursChanging(string value);
    partial void OnAdjustHoursChanged();
    partial void OnAdjustMinutesChanging(string value);
    partial void OnAdjustMinutesChanged();
    partial void OnAdjustSecondsChanging(string value);
    partial void OnAdjustSecondsChanged();
    #endregion
		
		public TASK_FORMATDATE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecifiedTime", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SpecifiedTime
		{
			get
			{
				return this._SpecifiedTime;
			}
			set
			{
				if ((this._SpecifiedTime != value))
				{
					this.OnSpecifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._SpecifiedTime = value;
					this.SendPropertyChanged("SpecifiedTime");
					this.OnSpecifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputFormat", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string InputFormat
		{
			get
			{
				return this._InputFormat;
			}
			set
			{
				if ((this._InputFormat != value))
				{
					this.OnInputFormatChanging(value);
					this.SendPropertyChanging();
					this._InputFormat = value;
					this.SendPropertyChanged("InputFormat");
					this.OnInputFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutputFormat", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string OutputFormat
		{
			get
			{
				return this._OutputFormat;
			}
			set
			{
				if ((this._OutputFormat != value))
				{
					this.OnOutputFormatChanging(value);
					this.SendPropertyChanging();
					this._OutputFormat = value;
					this.SendPropertyChanged("OutputFormat");
					this.OnOutputFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustDays", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AdjustDays
		{
			get
			{
				return this._AdjustDays;
			}
			set
			{
				if ((this._AdjustDays != value))
				{
					this.OnAdjustDaysChanging(value);
					this.SendPropertyChanging();
					this._AdjustDays = value;
					this.SendPropertyChanged("AdjustDays");
					this.OnAdjustDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustMonths", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AdjustMonths
		{
			get
			{
				return this._AdjustMonths;
			}
			set
			{
				if ((this._AdjustMonths != value))
				{
					this.OnAdjustMonthsChanging(value);
					this.SendPropertyChanging();
					this._AdjustMonths = value;
					this.SendPropertyChanged("AdjustMonths");
					this.OnAdjustMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustYears", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AdjustYears
		{
			get
			{
				return this._AdjustYears;
			}
			set
			{
				if ((this._AdjustYears != value))
				{
					this.OnAdjustYearsChanging(value);
					this.SendPropertyChanging();
					this._AdjustYears = value;
					this.SendPropertyChanged("AdjustYears");
					this.OnAdjustYearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustHours", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AdjustHours
		{
			get
			{
				return this._AdjustHours;
			}
			set
			{
				if ((this._AdjustHours != value))
				{
					this.OnAdjustHoursChanging(value);
					this.SendPropertyChanging();
					this._AdjustHours = value;
					this.SendPropertyChanged("AdjustHours");
					this.OnAdjustHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustMinutes", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AdjustMinutes
		{
			get
			{
				return this._AdjustMinutes;
			}
			set
			{
				if ((this._AdjustMinutes != value))
				{
					this.OnAdjustMinutesChanging(value);
					this.SendPropertyChanging();
					this._AdjustMinutes = value;
					this.SendPropertyChanged("AdjustMinutes");
					this.OnAdjustMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustSeconds", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AdjustSeconds
		{
			get
			{
				return this._AdjustSeconds;
			}
			set
			{
				if ((this._AdjustSeconds != value))
				{
					this.OnAdjustSecondsChanging(value);
					this.SendPropertyChanging();
					this._AdjustSeconds = value;
					this.SendPropertyChanged("AdjustSeconds");
					this.OnAdjustSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_FORMATDATE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_FORMATDATE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_FORMATDATE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_GETDISKSPACESTATUS")]
	public partial class TASK_GETDISKSPACESTATUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Drive;
		
		private string _Computer;
		
		private int _ReturnType;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnDriveChanging(string value);
    partial void OnDriveChanged();
    partial void OnComputerChanging(string value);
    partial void OnComputerChanged();
    partial void OnReturnTypeChanging(int value);
    partial void OnReturnTypeChanged();
    #endregion
		
		public TASK_GETDISKSPACESTATUS()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Drive", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Drive
		{
			get
			{
				return this._Drive;
			}
			set
			{
				if ((this._Drive != value))
				{
					this.OnDriveChanging(value);
					this.SendPropertyChanging();
					this._Drive = value;
					this.SendPropertyChanged("Drive");
					this.OnDriveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Computer", DbType="NVarChar(2000)")]
		public string Computer
		{
			get
			{
				return this._Computer;
			}
			set
			{
				if ((this._Computer != value))
				{
					this.OnComputerChanging(value);
					this.SendPropertyChanging();
					this._Computer = value;
					this.SendPropertyChanged("Computer");
					this.OnComputerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnType", DbType="Int NOT NULL")]
		public int ReturnType
		{
			get
			{
				return this._ReturnType;
			}
			set
			{
				if ((this._ReturnType != value))
				{
					this.OnReturnTypeChanging(value);
					this.SendPropertyChanging();
					this._ReturnType = value;
					this.SendPropertyChanged("ReturnType");
					this.OnReturnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_GETDISKSPACESTATUS", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_GETDISKSPACESTATUS = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_GETDISKSPACESTATUS = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_INTERNETSTATUS")]
	public partial class TASK_INTERNETSTATUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _ServerName;
		
		private System.Nullable<int> _ServerPort;
		
		private System.Nullable<int> _SelectedOption;
		
		private string _WebStringToCheck;
		
		private System.Nullable<int> _ConnectionTimeout;
		
		private System.Nullable<int> _ConnectionTimeoutFreq;
		
		private System.Nullable<int> _ConnectionTimeoutType;
		
		private string _SMTPMailTo;
		
		private string _SMTPMailFrom;
		
		private string _Username;
		
		private string _Password;
		
		private string _DNSIPAddress;
		
		private string _DNSIPName;
		
		private EntitySet<INTERNETSTATUS_CLOSE> _INTERNETSTATUS_CLOSE;
		
		private EntitySet<INTERNETSTATUS_OPENPORT> _INTERNETSTATUS_OPENPORT;
		
		private EntitySet<INTERNETSTATUS_RECEIVE> _INTERNETSTATUS_RECEIVE;
		
		private EntitySet<INTERNETSTATUS_SEND> _INTERNETSTATUS_SEND;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnServerNameChanging(string value);
    partial void OnServerNameChanged();
    partial void OnServerPortChanging(System.Nullable<int> value);
    partial void OnServerPortChanged();
    partial void OnSelectedOptionChanging(System.Nullable<int> value);
    partial void OnSelectedOptionChanged();
    partial void OnWebStringToCheckChanging(string value);
    partial void OnWebStringToCheckChanged();
    partial void OnConnectionTimeoutChanging(System.Nullable<int> value);
    partial void OnConnectionTimeoutChanged();
    partial void OnConnectionTimeoutFreqChanging(System.Nullable<int> value);
    partial void OnConnectionTimeoutFreqChanged();
    partial void OnConnectionTimeoutTypeChanging(System.Nullable<int> value);
    partial void OnConnectionTimeoutTypeChanged();
    partial void OnSMTPMailToChanging(string value);
    partial void OnSMTPMailToChanged();
    partial void OnSMTPMailFromChanging(string value);
    partial void OnSMTPMailFromChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnDNSIPAddressChanging(string value);
    partial void OnDNSIPAddressChanged();
    partial void OnDNSIPNameChanging(string value);
    partial void OnDNSIPNameChanged();
    #endregion
		
		public TASK_INTERNETSTATUS()
		{
			this._INTERNETSTATUS_CLOSE = new EntitySet<INTERNETSTATUS_CLOSE>(new Action<INTERNETSTATUS_CLOSE>(this.attach_INTERNETSTATUS_CLOSE), new Action<INTERNETSTATUS_CLOSE>(this.detach_INTERNETSTATUS_CLOSE));
			this._INTERNETSTATUS_OPENPORT = new EntitySet<INTERNETSTATUS_OPENPORT>(new Action<INTERNETSTATUS_OPENPORT>(this.attach_INTERNETSTATUS_OPENPORT), new Action<INTERNETSTATUS_OPENPORT>(this.detach_INTERNETSTATUS_OPENPORT));
			this._INTERNETSTATUS_RECEIVE = new EntitySet<INTERNETSTATUS_RECEIVE>(new Action<INTERNETSTATUS_RECEIVE>(this.attach_INTERNETSTATUS_RECEIVE), new Action<INTERNETSTATUS_RECEIVE>(this.detach_INTERNETSTATUS_RECEIVE));
			this._INTERNETSTATUS_SEND = new EntitySet<INTERNETSTATUS_SEND>(new Action<INTERNETSTATUS_SEND>(this.attach_INTERNETSTATUS_SEND), new Action<INTERNETSTATUS_SEND>(this.detach_INTERNETSTATUS_SEND));
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerName", DbType="NVarChar(2000)")]
		public string ServerName
		{
			get
			{
				return this._ServerName;
			}
			set
			{
				if ((this._ServerName != value))
				{
					this.OnServerNameChanging(value);
					this.SendPropertyChanging();
					this._ServerName = value;
					this.SendPropertyChanged("ServerName");
					this.OnServerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerPort", DbType="Int")]
		public System.Nullable<int> ServerPort
		{
			get
			{
				return this._ServerPort;
			}
			set
			{
				if ((this._ServerPort != value))
				{
					this.OnServerPortChanging(value);
					this.SendPropertyChanging();
					this._ServerPort = value;
					this.SendPropertyChanged("ServerPort");
					this.OnServerPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectedOption", DbType="Int")]
		public System.Nullable<int> SelectedOption
		{
			get
			{
				return this._SelectedOption;
			}
			set
			{
				if ((this._SelectedOption != value))
				{
					this.OnSelectedOptionChanging(value);
					this.SendPropertyChanging();
					this._SelectedOption = value;
					this.SendPropertyChanged("SelectedOption");
					this.OnSelectedOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebStringToCheck", DbType="NVarChar(200)")]
		public string WebStringToCheck
		{
			get
			{
				return this._WebStringToCheck;
			}
			set
			{
				if ((this._WebStringToCheck != value))
				{
					this.OnWebStringToCheckChanging(value);
					this.SendPropertyChanging();
					this._WebStringToCheck = value;
					this.SendPropertyChanged("WebStringToCheck");
					this.OnWebStringToCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionTimeout", DbType="Int")]
		public System.Nullable<int> ConnectionTimeout
		{
			get
			{
				return this._ConnectionTimeout;
			}
			set
			{
				if ((this._ConnectionTimeout != value))
				{
					this.OnConnectionTimeoutChanging(value);
					this.SendPropertyChanging();
					this._ConnectionTimeout = value;
					this.SendPropertyChanged("ConnectionTimeout");
					this.OnConnectionTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionTimeoutFreq", DbType="Int")]
		public System.Nullable<int> ConnectionTimeoutFreq
		{
			get
			{
				return this._ConnectionTimeoutFreq;
			}
			set
			{
				if ((this._ConnectionTimeoutFreq != value))
				{
					this.OnConnectionTimeoutFreqChanging(value);
					this.SendPropertyChanging();
					this._ConnectionTimeoutFreq = value;
					this.SendPropertyChanged("ConnectionTimeoutFreq");
					this.OnConnectionTimeoutFreqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionTimeoutType", DbType="Int")]
		public System.Nullable<int> ConnectionTimeoutType
		{
			get
			{
				return this._ConnectionTimeoutType;
			}
			set
			{
				if ((this._ConnectionTimeoutType != value))
				{
					this.OnConnectionTimeoutTypeChanging(value);
					this.SendPropertyChanging();
					this._ConnectionTimeoutType = value;
					this.SendPropertyChanged("ConnectionTimeoutType");
					this.OnConnectionTimeoutTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPMailTo", DbType="NVarChar(500)")]
		public string SMTPMailTo
		{
			get
			{
				return this._SMTPMailTo;
			}
			set
			{
				if ((this._SMTPMailTo != value))
				{
					this.OnSMTPMailToChanging(value);
					this.SendPropertyChanging();
					this._SMTPMailTo = value;
					this.SendPropertyChanged("SMTPMailTo");
					this.OnSMTPMailToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPMailFrom", DbType="NVarChar(500)")]
		public string SMTPMailFrom
		{
			get
			{
				return this._SMTPMailFrom;
			}
			set
			{
				if ((this._SMTPMailFrom != value))
				{
					this.OnSMTPMailFromChanging(value);
					this.SendPropertyChanging();
					this._SMTPMailFrom = value;
					this.SendPropertyChanged("SMTPMailFrom");
					this.OnSMTPMailFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(200)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(2000)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNSIPAddress", DbType="NVarChar(500)")]
		public string DNSIPAddress
		{
			get
			{
				return this._DNSIPAddress;
			}
			set
			{
				if ((this._DNSIPAddress != value))
				{
					this.OnDNSIPAddressChanging(value);
					this.SendPropertyChanging();
					this._DNSIPAddress = value;
					this.SendPropertyChanged("DNSIPAddress");
					this.OnDNSIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNSIPName", DbType="NVarChar(250)")]
		public string DNSIPName
		{
			get
			{
				return this._DNSIPName;
			}
			set
			{
				if ((this._DNSIPName != value))
				{
					this.OnDNSIPNameChanging(value);
					this.SendPropertyChanging();
					this._DNSIPName = value;
					this.SendPropertyChanged("DNSIPName");
					this.OnDNSIPNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TASK_INTERNETSTATUS_INTERNETSTATUS_CLOSE", Storage="_INTERNETSTATUS_CLOSE", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<INTERNETSTATUS_CLOSE> INTERNETSTATUS_CLOSE
		{
			get
			{
				return this._INTERNETSTATUS_CLOSE;
			}
			set
			{
				this._INTERNETSTATUS_CLOSE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TASK_INTERNETSTATUS_INTERNETSTATUS_OPENPORT", Storage="_INTERNETSTATUS_OPENPORT", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<INTERNETSTATUS_OPENPORT> INTERNETSTATUS_OPENPORT
		{
			get
			{
				return this._INTERNETSTATUS_OPENPORT;
			}
			set
			{
				this._INTERNETSTATUS_OPENPORT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TASK_INTERNETSTATUS_INTERNETSTATUS_RECEIVE", Storage="_INTERNETSTATUS_RECEIVE", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<INTERNETSTATUS_RECEIVE> INTERNETSTATUS_RECEIVE
		{
			get
			{
				return this._INTERNETSTATUS_RECEIVE;
			}
			set
			{
				this._INTERNETSTATUS_RECEIVE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TASK_INTERNETSTATUS_INTERNETSTATUS_SEND", Storage="_INTERNETSTATUS_SEND", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<INTERNETSTATUS_SEND> INTERNETSTATUS_SEND
		{
			get
			{
				return this._INTERNETSTATUS_SEND;
			}
			set
			{
				this._INTERNETSTATUS_SEND.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_INTERNETSTATUS", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_INTERNETSTATUS = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_INTERNETSTATUS = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INTERNETSTATUS_CLOSE(INTERNETSTATUS_CLOSE entity)
		{
			this.SendPropertyChanging();
			entity.TASK_INTERNETSTATUS = this;
		}
		
		private void detach_INTERNETSTATUS_CLOSE(INTERNETSTATUS_CLOSE entity)
		{
			this.SendPropertyChanging();
			entity.TASK_INTERNETSTATUS = null;
		}
		
		private void attach_INTERNETSTATUS_OPENPORT(INTERNETSTATUS_OPENPORT entity)
		{
			this.SendPropertyChanging();
			entity.TASK_INTERNETSTATUS = this;
		}
		
		private void detach_INTERNETSTATUS_OPENPORT(INTERNETSTATUS_OPENPORT entity)
		{
			this.SendPropertyChanging();
			entity.TASK_INTERNETSTATUS = null;
		}
		
		private void attach_INTERNETSTATUS_RECEIVE(INTERNETSTATUS_RECEIVE entity)
		{
			this.SendPropertyChanging();
			entity.TASK_INTERNETSTATUS = this;
		}
		
		private void detach_INTERNETSTATUS_RECEIVE(INTERNETSTATUS_RECEIVE entity)
		{
			this.SendPropertyChanging();
			entity.TASK_INTERNETSTATUS = null;
		}
		
		private void attach_INTERNETSTATUS_SEND(INTERNETSTATUS_SEND entity)
		{
			this.SendPropertyChanging();
			entity.TASK_INTERNETSTATUS = this;
		}
		
		private void detach_INTERNETSTATUS_SEND(INTERNETSTATUS_SEND entity)
		{
			this.SendPropertyChanging();
			entity.TASK_INTERNETSTATUS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_JUNCTION")]
	public partial class TASK_JUNCTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _SelectedBranch;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnSelectedBranchChanging(string value);
    partial void OnSelectedBranchChanged();
    #endregion
		
		public TASK_JUNCTION()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectedBranch", DbType="NVarChar(2000)")]
		public string SelectedBranch
		{
			get
			{
				return this._SelectedBranch;
			}
			set
			{
				if ((this._SelectedBranch != value))
				{
					this.OnSelectedBranchChanging(value);
					this.SendPropertyChanging();
					this._SelectedBranch = value;
					this.SendPropertyChanged("SelectedBranch");
					this.OnSelectedBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_JUNCTION", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_JUNCTION = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_JUNCTION = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_MAPNETWORKPATH")]
	public partial class TASK_MAPNETWORKPATH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _NetworkPath;
		
		private string _UserAccount;
		
		private string _Password;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnNetworkPathChanging(string value);
    partial void OnNetworkPathChanged();
    partial void OnUserAccountChanging(string value);
    partial void OnUserAccountChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public TASK_MAPNETWORKPATH()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkPath", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string NetworkPath
		{
			get
			{
				return this._NetworkPath;
			}
			set
			{
				if ((this._NetworkPath != value))
				{
					this.OnNetworkPathChanging(value);
					this.SendPropertyChanging();
					this._NetworkPath = value;
					this.SendPropertyChanged("NetworkPath");
					this.OnNetworkPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccount", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string UserAccount
		{
			get
			{
				return this._UserAccount;
			}
			set
			{
				if ((this._UserAccount != value))
				{
					this.OnUserAccountChanging(value);
					this.SendPropertyChanging();
					this._UserAccount = value;
					this.SendPropertyChanged("UserAccount");
					this.OnUserAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_MAPNETWORKPATH", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_MAPNETWORKPATH = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_MAPNETWORKPATH = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_MAPVALUES")]
	public partial class TASK_MAPVALUES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _MappingEntries;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnMappingEntriesChanging(string value);
    partial void OnMappingEntriesChanged();
    #endregion
		
		public TASK_MAPVALUES()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MappingEntries", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string MappingEntries
		{
			get
			{
				return this._MappingEntries;
			}
			set
			{
				if ((this._MappingEntries != value))
				{
					this.OnMappingEntriesChanging(value);
					this.SendPropertyChanging();
					this._MappingEntries = value;
					this.SendPropertyChanged("MappingEntries");
					this.OnMappingEntriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_MAPVALUES", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_MAPVALUES = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_MAPVALUES = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_MESSAGEEVENTLOG")]
	public partial class TASK_MESSAGEEVENTLOG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _ComputerName;
		
		private string _MessageText;
		
		private int _Severity;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    partial void OnMessageTextChanging(string value);
    partial void OnMessageTextChanged();
    partial void OnSeverityChanging(int value);
    partial void OnSeverityChanged();
    #endregion
		
		public TASK_MESSAGEEVENTLOG()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="NVarChar(500)")]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageText", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string MessageText
		{
			get
			{
				return this._MessageText;
			}
			set
			{
				if ((this._MessageText != value))
				{
					this.OnMessageTextChanging(value);
					this.SendPropertyChanging();
					this._MessageText = value;
					this.SendPropertyChanged("MessageText");
					this.OnMessageTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Severity", DbType="Int NOT NULL")]
		public int Severity
		{
			get
			{
				return this._Severity;
			}
			set
			{
				if ((this._Severity != value))
				{
					this.OnSeverityChanging(value);
					this.SendPropertyChanging();
					this._Severity = value;
					this.SendPropertyChanged("Severity");
					this.OnSeverityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_MESSAGEEVENTLOG", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_MESSAGEEVENTLOG = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_MESSAGEEVENTLOG = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_PROCESSSTATUS")]
	public partial class TASK_PROCESSSTATUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Computer;
		
		private string _Process;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnComputerChanging(string value);
    partial void OnComputerChanged();
    partial void OnProcessChanging(string value);
    partial void OnProcessChanged();
    #endregion
		
		public TASK_PROCESSSTATUS()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Computer", DbType="NVarChar(500)")]
		public string Computer
		{
			get
			{
				return this._Computer;
			}
			set
			{
				if ((this._Computer != value))
				{
					this.OnComputerChanging(value);
					this.SendPropertyChanging();
					this._Computer = value;
					this.SendPropertyChanged("Computer");
					this.OnComputerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Process
		{
			get
			{
				return this._Process;
			}
			set
			{
				if ((this._Process != value))
				{
					this.OnProcessChanging(value);
					this.SendPropertyChanging();
					this._Process = value;
					this.SendPropertyChanged("Process");
					this.OnProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_PROCESSSTATUS", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_PROCESSSTATUS = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_PROCESSSTATUS = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_QUERY_XML")]
	public partial class TASK_QUERY_XML : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _XmlFile;
		
		private string _InputXmlFile;
		
		private string _InputXmlBlock;
		
		private string _XmlBlock;
		
		private string _XmlTag;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnXmlFileChanging(string value);
    partial void OnXmlFileChanged();
    partial void OnInputXmlFileChanging(string value);
    partial void OnInputXmlFileChanged();
    partial void OnInputXmlBlockChanging(string value);
    partial void OnInputXmlBlockChanged();
    partial void OnXmlBlockChanging(string value);
    partial void OnXmlBlockChanged();
    partial void OnXmlTagChanging(string value);
    partial void OnXmlTagChanged();
    #endregion
		
		public TASK_QUERY_XML()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlFile", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string XmlFile
		{
			get
			{
				return this._XmlFile;
			}
			set
			{
				if ((this._XmlFile != value))
				{
					this.OnXmlFileChanging(value);
					this.SendPropertyChanging();
					this._XmlFile = value;
					this.SendPropertyChanged("XmlFile");
					this.OnXmlFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputXmlFile", DbType="NVarChar(200)")]
		public string InputXmlFile
		{
			get
			{
				return this._InputXmlFile;
			}
			set
			{
				if ((this._InputXmlFile != value))
				{
					this.OnInputXmlFileChanging(value);
					this.SendPropertyChanging();
					this._InputXmlFile = value;
					this.SendPropertyChanged("InputXmlFile");
					this.OnInputXmlFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputXmlBlock", DbType="NVarChar(200)")]
		public string InputXmlBlock
		{
			get
			{
				return this._InputXmlBlock;
			}
			set
			{
				if ((this._InputXmlBlock != value))
				{
					this.OnInputXmlBlockChanging(value);
					this.SendPropertyChanging();
					this._InputXmlBlock = value;
					this.SendPropertyChanged("InputXmlBlock");
					this.OnInputXmlBlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlBlock", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string XmlBlock
		{
			get
			{
				return this._XmlBlock;
			}
			set
			{
				if ((this._XmlBlock != value))
				{
					this.OnXmlBlockChanging(value);
					this.SendPropertyChanging();
					this._XmlBlock = value;
					this.SendPropertyChanged("XmlBlock");
					this.OnXmlBlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlTag", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string XmlTag
		{
			get
			{
				return this._XmlTag;
			}
			set
			{
				if ((this._XmlTag != value))
				{
					this.OnXmlTagChanging(value);
					this.SendPropertyChanging();
					this._XmlTag = value;
					this.SendPropertyChanged("XmlTag");
					this.OnXmlTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_QUERY_XML", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_QUERY_XML = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_QUERY_XML = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_QUERYDATABASE")]
	public partial class TASK_QUERYDATABASE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Query;
		
		private string _ServerName;
		
		private int _DatabaseType;
		
		private string _InitialCatalog;
		
		private int _DatabaseAuthentication;
		
		private string _UserName;
		
		private string _Password;
		
		private int _CommandTimeout;
		
		private int _ConnectionTimeout;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnQueryChanging(string value);
    partial void OnQueryChanged();
    partial void OnServerNameChanging(string value);
    partial void OnServerNameChanged();
    partial void OnDatabaseTypeChanging(int value);
    partial void OnDatabaseTypeChanged();
    partial void OnInitialCatalogChanging(string value);
    partial void OnInitialCatalogChanged();
    partial void OnDatabaseAuthenticationChanging(int value);
    partial void OnDatabaseAuthenticationChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCommandTimeoutChanging(int value);
    partial void OnCommandTimeoutChanged();
    partial void OnConnectionTimeoutChanging(int value);
    partial void OnConnectionTimeoutChanged();
    #endregion
		
		public TASK_QUERYDATABASE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Query", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Query
		{
			get
			{
				return this._Query;
			}
			set
			{
				if ((this._Query != value))
				{
					this.OnQueryChanging(value);
					this.SendPropertyChanging();
					this._Query = value;
					this.SendPropertyChanged("Query");
					this.OnQueryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ServerName
		{
			get
			{
				return this._ServerName;
			}
			set
			{
				if ((this._ServerName != value))
				{
					this.OnServerNameChanging(value);
					this.SendPropertyChanging();
					this._ServerName = value;
					this.SendPropertyChanged("ServerName");
					this.OnServerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseType", DbType="Int NOT NULL")]
		public int DatabaseType
		{
			get
			{
				return this._DatabaseType;
			}
			set
			{
				if ((this._DatabaseType != value))
				{
					this.OnDatabaseTypeChanging(value);
					this.SendPropertyChanging();
					this._DatabaseType = value;
					this.SendPropertyChanged("DatabaseType");
					this.OnDatabaseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialCatalog", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string InitialCatalog
		{
			get
			{
				return this._InitialCatalog;
			}
			set
			{
				if ((this._InitialCatalog != value))
				{
					this.OnInitialCatalogChanging(value);
					this.SendPropertyChanging();
					this._InitialCatalog = value;
					this.SendPropertyChanged("InitialCatalog");
					this.OnInitialCatalogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseAuthentication", DbType="Int NOT NULL")]
		public int DatabaseAuthentication
		{
			get
			{
				return this._DatabaseAuthentication;
			}
			set
			{
				if ((this._DatabaseAuthentication != value))
				{
					this.OnDatabaseAuthenticationChanging(value);
					this.SendPropertyChanging();
					this._DatabaseAuthentication = value;
					this.SendPropertyChanged("DatabaseAuthentication");
					this.OnDatabaseAuthenticationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(500)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(2000)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandTimeout", DbType="Int NOT NULL")]
		public int CommandTimeout
		{
			get
			{
				return this._CommandTimeout;
			}
			set
			{
				if ((this._CommandTimeout != value))
				{
					this.OnCommandTimeoutChanging(value);
					this.SendPropertyChanging();
					this._CommandTimeout = value;
					this.SendPropertyChanged("CommandTimeout");
					this.OnCommandTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionTimeout", DbType="Int NOT NULL")]
		public int ConnectionTimeout
		{
			get
			{
				return this._ConnectionTimeout;
			}
			set
			{
				if ((this._ConnectionTimeout != value))
				{
					this.OnConnectionTimeoutChanging(value);
					this.SendPropertyChanging();
					this._ConnectionTimeout = value;
					this.SendPropertyChanged("ConnectionTimeout");
					this.OnConnectionTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_QUERYDATABASE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_QUERYDATABASE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_QUERYDATABASE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_QUERYWMI")]
	public partial class TASK_QUERYWMI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _ComputerName;
		
		private string _Namespace;
		
		private string _QueryString;
		
		private string _UserName;
		
		private string _Password;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    partial void OnNamespaceChanging(string value);
    partial void OnNamespaceChanged();
    partial void OnQueryStringChanging(string value);
    partial void OnQueryStringChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public TASK_QUERYWMI()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="NVarChar(500)")]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Namespace", DbType="NVarChar(500)")]
		public string Namespace
		{
			get
			{
				return this._Namespace;
			}
			set
			{
				if ((this._Namespace != value))
				{
					this.OnNamespaceChanging(value);
					this.SendPropertyChanging();
					this._Namespace = value;
					this.SendPropertyChanged("Namespace");
					this.OnNamespaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueryString", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string QueryString
		{
			get
			{
				return this._QueryString;
			}
			set
			{
				if ((this._QueryString != value))
				{
					this.OnQueryStringChanging(value);
					this.SendPropertyChanging();
					this._QueryString = value;
					this.SendPropertyChanged("QueryString");
					this.OnQueryStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(255)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(2000)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_QUERYWMI", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_QUERYWMI = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_QUERYWMI = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_RANDOM_STRING")]
	public partial class TASK_RANDOM_STRING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _StringLength;
		
		private string _UseUpperCase;
		
		private string _UseLowerCase;
		
		private string _UseNumbers;
		
		private string _UseSymbols;
		
		private string _NumLChars;
		
		private string _NumUChars;
		
		private string _NumNumbers;
		
		private string _NumSymbols;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnStringLengthChanging(string value);
    partial void OnStringLengthChanged();
    partial void OnUseUpperCaseChanging(string value);
    partial void OnUseUpperCaseChanged();
    partial void OnUseLowerCaseChanging(string value);
    partial void OnUseLowerCaseChanged();
    partial void OnUseNumbersChanging(string value);
    partial void OnUseNumbersChanged();
    partial void OnUseSymbolsChanging(string value);
    partial void OnUseSymbolsChanged();
    partial void OnNumLCharsChanging(string value);
    partial void OnNumLCharsChanged();
    partial void OnNumUCharsChanging(string value);
    partial void OnNumUCharsChanged();
    partial void OnNumNumbersChanging(string value);
    partial void OnNumNumbersChanged();
    partial void OnNumSymbolsChanging(string value);
    partial void OnNumSymbolsChanged();
    #endregion
		
		public TASK_RANDOM_STRING()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StringLength", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string StringLength
		{
			get
			{
				return this._StringLength;
			}
			set
			{
				if ((this._StringLength != value))
				{
					this.OnStringLengthChanging(value);
					this.SendPropertyChanging();
					this._StringLength = value;
					this.SendPropertyChanged("StringLength");
					this.OnStringLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseUpperCase", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string UseUpperCase
		{
			get
			{
				return this._UseUpperCase;
			}
			set
			{
				if ((this._UseUpperCase != value))
				{
					this.OnUseUpperCaseChanging(value);
					this.SendPropertyChanging();
					this._UseUpperCase = value;
					this.SendPropertyChanged("UseUpperCase");
					this.OnUseUpperCaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseLowerCase", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string UseLowerCase
		{
			get
			{
				return this._UseLowerCase;
			}
			set
			{
				if ((this._UseLowerCase != value))
				{
					this.OnUseLowerCaseChanging(value);
					this.SendPropertyChanging();
					this._UseLowerCase = value;
					this.SendPropertyChanged("UseLowerCase");
					this.OnUseLowerCaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseNumbers", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string UseNumbers
		{
			get
			{
				return this._UseNumbers;
			}
			set
			{
				if ((this._UseNumbers != value))
				{
					this.OnUseNumbersChanging(value);
					this.SendPropertyChanging();
					this._UseNumbers = value;
					this.SendPropertyChanged("UseNumbers");
					this.OnUseNumbersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseSymbols", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string UseSymbols
		{
			get
			{
				return this._UseSymbols;
			}
			set
			{
				if ((this._UseSymbols != value))
				{
					this.OnUseSymbolsChanging(value);
					this.SendPropertyChanging();
					this._UseSymbols = value;
					this.SendPropertyChanged("UseSymbols");
					this.OnUseSymbolsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumLChars", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string NumLChars
		{
			get
			{
				return this._NumLChars;
			}
			set
			{
				if ((this._NumLChars != value))
				{
					this.OnNumLCharsChanging(value);
					this.SendPropertyChanging();
					this._NumLChars = value;
					this.SendPropertyChanged("NumLChars");
					this.OnNumLCharsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumUChars", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string NumUChars
		{
			get
			{
				return this._NumUChars;
			}
			set
			{
				if ((this._NumUChars != value))
				{
					this.OnNumUCharsChanging(value);
					this.SendPropertyChanging();
					this._NumUChars = value;
					this.SendPropertyChanged("NumUChars");
					this.OnNumUCharsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumNumbers", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string NumNumbers
		{
			get
			{
				return this._NumNumbers;
			}
			set
			{
				if ((this._NumNumbers != value))
				{
					this.OnNumNumbersChanging(value);
					this.SendPropertyChanging();
					this._NumNumbers = value;
					this.SendPropertyChanged("NumNumbers");
					this.OnNumNumbersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumSymbols", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string NumSymbols
		{
			get
			{
				return this._NumSymbols;
			}
			set
			{
				if ((this._NumSymbols != value))
				{
					this.OnNumSymbolsChanging(value);
					this.SendPropertyChanging();
					this._NumSymbols = value;
					this.SendPropertyChanged("NumSymbols");
					this.OnNumSymbolsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_RANDOM_STRING", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_RANDOM_STRING = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_RANDOM_STRING = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_READTEXTLOG")]
	public partial class TASK_READTEXTLOG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Nullable<int> _LogType;
		
		private System.Nullable<int> _Action;
		
		private System.Nullable<int> _ReadActionID;
		
		private string _Filename;
		
		private string _Foldername;
		
		private string _FilenameMatchingPattern;
		
		private string _NumberofLines;
		
		private string _TimeStampFormat;
		
		private string _TimeStampFrom;
		
		private string _TimeStampTo;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnLogTypeChanging(System.Nullable<int> value);
    partial void OnLogTypeChanged();
    partial void OnActionChanging(System.Nullable<int> value);
    partial void OnActionChanged();
    partial void OnReadActionIDChanging(System.Nullable<int> value);
    partial void OnReadActionIDChanged();
    partial void OnFilenameChanging(string value);
    partial void OnFilenameChanged();
    partial void OnFoldernameChanging(string value);
    partial void OnFoldernameChanged();
    partial void OnFilenameMatchingPatternChanging(string value);
    partial void OnFilenameMatchingPatternChanged();
    partial void OnNumberofLinesChanging(string value);
    partial void OnNumberofLinesChanged();
    partial void OnTimeStampFormatChanging(string value);
    partial void OnTimeStampFormatChanged();
    partial void OnTimeStampFromChanging(string value);
    partial void OnTimeStampFromChanged();
    partial void OnTimeStampToChanging(string value);
    partial void OnTimeStampToChanged();
    #endregion
		
		public TASK_READTEXTLOG()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogType", DbType="Int")]
		public System.Nullable<int> LogType
		{
			get
			{
				return this._LogType;
			}
			set
			{
				if ((this._LogType != value))
				{
					this.OnLogTypeChanging(value);
					this.SendPropertyChanging();
					this._LogType = value;
					this.SendPropertyChanged("LogType");
					this.OnLogTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="Int")]
		public System.Nullable<int> Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadActionID", DbType="Int")]
		public System.Nullable<int> ReadActionID
		{
			get
			{
				return this._ReadActionID;
			}
			set
			{
				if ((this._ReadActionID != value))
				{
					this.OnReadActionIDChanging(value);
					this.SendPropertyChanging();
					this._ReadActionID = value;
					this.SendPropertyChanged("ReadActionID");
					this.OnReadActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filename", DbType="NVarChar(2000)")]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this.OnFilenameChanging(value);
					this.SendPropertyChanging();
					this._Filename = value;
					this.SendPropertyChanged("Filename");
					this.OnFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foldername", DbType="NVarChar(2000)")]
		public string Foldername
		{
			get
			{
				return this._Foldername;
			}
			set
			{
				if ((this._Foldername != value))
				{
					this.OnFoldernameChanging(value);
					this.SendPropertyChanging();
					this._Foldername = value;
					this.SendPropertyChanged("Foldername");
					this.OnFoldernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilenameMatchingPattern", DbType="NVarChar(200)")]
		public string FilenameMatchingPattern
		{
			get
			{
				return this._FilenameMatchingPattern;
			}
			set
			{
				if ((this._FilenameMatchingPattern != value))
				{
					this.OnFilenameMatchingPatternChanging(value);
					this.SendPropertyChanging();
					this._FilenameMatchingPattern = value;
					this.SendPropertyChanged("FilenameMatchingPattern");
					this.OnFilenameMatchingPatternChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberofLines", DbType="NVarChar(1000)")]
		public string NumberofLines
		{
			get
			{
				return this._NumberofLines;
			}
			set
			{
				if ((this._NumberofLines != value))
				{
					this.OnNumberofLinesChanging(value);
					this.SendPropertyChanging();
					this._NumberofLines = value;
					this.SendPropertyChanged("NumberofLines");
					this.OnNumberofLinesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStampFormat", DbType="NVarChar(1000)")]
		public string TimeStampFormat
		{
			get
			{
				return this._TimeStampFormat;
			}
			set
			{
				if ((this._TimeStampFormat != value))
				{
					this.OnTimeStampFormatChanging(value);
					this.SendPropertyChanging();
					this._TimeStampFormat = value;
					this.SendPropertyChanged("TimeStampFormat");
					this.OnTimeStampFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStampFrom", DbType="NVarChar(1000)")]
		public string TimeStampFrom
		{
			get
			{
				return this._TimeStampFrom;
			}
			set
			{
				if ((this._TimeStampFrom != value))
				{
					this.OnTimeStampFromChanging(value);
					this.SendPropertyChanging();
					this._TimeStampFrom = value;
					this.SendPropertyChanged("TimeStampFrom");
					this.OnTimeStampFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStampTo", DbType="NVarChar(1000)")]
		public string TimeStampTo
		{
			get
			{
				return this._TimeStampTo;
			}
			set
			{
				if ((this._TimeStampTo != value))
				{
					this.OnTimeStampToChanging(value);
					this.SendPropertyChanging();
					this._TimeStampTo = value;
					this.SendPropertyChanged("TimeStampTo");
					this.OnTimeStampToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_READTEXTLOG", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_READTEXTLOG = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_READTEXTLOG = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_RUNPROGRAM")]
	public partial class TASK_RUNPROGRAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Program;
		
		private int _ExecutionMode;
		
		private string _StartupDir;
		
		private string _Parameters;
		
		private bool _WaitForCompletion;
		
		private System.Nullable<int> _WaitTime;
		
		private string _ComputerName;
		
		private System.Nullable<int> _ProgramMode;
		
		private string _Username;
		
		private string _Password;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnProgramChanging(string value);
    partial void OnProgramChanged();
    partial void OnExecutionModeChanging(int value);
    partial void OnExecutionModeChanged();
    partial void OnStartupDirChanging(string value);
    partial void OnStartupDirChanged();
    partial void OnParametersChanging(string value);
    partial void OnParametersChanged();
    partial void OnWaitForCompletionChanging(bool value);
    partial void OnWaitForCompletionChanged();
    partial void OnWaitTimeChanging(System.Nullable<int> value);
    partial void OnWaitTimeChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    partial void OnProgramModeChanging(System.Nullable<int> value);
    partial void OnProgramModeChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public TASK_RUNPROGRAM()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Program", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Program
		{
			get
			{
				return this._Program;
			}
			set
			{
				if ((this._Program != value))
				{
					this.OnProgramChanging(value);
					this.SendPropertyChanging();
					this._Program = value;
					this.SendPropertyChanged("Program");
					this.OnProgramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionMode", DbType="Int NOT NULL")]
		public int ExecutionMode
		{
			get
			{
				return this._ExecutionMode;
			}
			set
			{
				if ((this._ExecutionMode != value))
				{
					this.OnExecutionModeChanging(value);
					this.SendPropertyChanging();
					this._ExecutionMode = value;
					this.SendPropertyChanged("ExecutionMode");
					this.OnExecutionModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartupDir", DbType="NVarChar(2000)")]
		public string StartupDir
		{
			get
			{
				return this._StartupDir;
			}
			set
			{
				if ((this._StartupDir != value))
				{
					this.OnStartupDirChanging(value);
					this.SendPropertyChanging();
					this._StartupDir = value;
					this.SendPropertyChanged("StartupDir");
					this.OnStartupDirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameters", DbType="NVarChar(2000)")]
		public string Parameters
		{
			get
			{
				return this._Parameters;
			}
			set
			{
				if ((this._Parameters != value))
				{
					this.OnParametersChanging(value);
					this.SendPropertyChanging();
					this._Parameters = value;
					this.SendPropertyChanged("Parameters");
					this.OnParametersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitForCompletion", DbType="Bit NOT NULL")]
		public bool WaitForCompletion
		{
			get
			{
				return this._WaitForCompletion;
			}
			set
			{
				if ((this._WaitForCompletion != value))
				{
					this.OnWaitForCompletionChanging(value);
					this.SendPropertyChanging();
					this._WaitForCompletion = value;
					this.SendPropertyChanged("WaitForCompletion");
					this.OnWaitForCompletionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitTime", DbType="Int")]
		public System.Nullable<int> WaitTime
		{
			get
			{
				return this._WaitTime;
			}
			set
			{
				if ((this._WaitTime != value))
				{
					this.OnWaitTimeChanging(value);
					this.SendPropertyChanging();
					this._WaitTime = value;
					this.SendPropertyChanged("WaitTime");
					this.OnWaitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="NVarChar(200)")]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramMode", DbType="Int")]
		public System.Nullable<int> ProgramMode
		{
			get
			{
				return this._ProgramMode;
			}
			set
			{
				if ((this._ProgramMode != value))
				{
					this.OnProgramModeChanging(value);
					this.SendPropertyChanging();
					this._ProgramMode = value;
					this.SendPropertyChanged("ProgramMode");
					this.OnProgramModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(255)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(2000)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_RUNPROGRAM", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_RUNPROGRAM = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_RUNPROGRAM = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_SAVEEVENTLOGENTRIES")]
	public partial class TASK_SAVEEVENTLOGENTRIES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _ComputerName;
		
		private string _EventLog;
		
		private System.Nullable<int> _ColumnMask;
		
		private string _EventIDFilter;
		
		private string _EventSourceFilter;
		
		private string _EventCategory;
		
		private string _EventDescriptionFilter;
		
		private string _EventTypeFilter;
		
		private string _EventComputerFilter;
		
		private System.Nullable<int> _FromDate_Year;
		
		private System.Nullable<int> _FromDate_Month;
		
		private System.Nullable<int> _FromDate_Day;
		
		private System.Nullable<int> _ToDate_Year;
		
		private System.Nullable<int> _ToDate_Month;
		
		private System.Nullable<int> _ToDate_Day;
		
		private string _EventFileName;
		
		private int _FileExistsCondition;
		
		private string _EventDelimiterType;
		
		private int _FileFormat;
		
		private int _SaveEventColumnNames;
		
		private System.Nullable<int> _FromTime_Hour;
		
		private System.Nullable<int> _FromTime_Minute;
		
		private System.Nullable<int> _ToTime_Hour;
		
		private System.Nullable<int> _ToTime_Minute;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    partial void OnEventLogChanging(string value);
    partial void OnEventLogChanged();
    partial void OnColumnMaskChanging(System.Nullable<int> value);
    partial void OnColumnMaskChanged();
    partial void OnEventIDFilterChanging(string value);
    partial void OnEventIDFilterChanged();
    partial void OnEventSourceFilterChanging(string value);
    partial void OnEventSourceFilterChanged();
    partial void OnEventCategoryChanging(string value);
    partial void OnEventCategoryChanged();
    partial void OnEventDescriptionFilterChanging(string value);
    partial void OnEventDescriptionFilterChanged();
    partial void OnEventTypeFilterChanging(string value);
    partial void OnEventTypeFilterChanged();
    partial void OnEventComputerFilterChanging(string value);
    partial void OnEventComputerFilterChanged();
    partial void OnFromDate_YearChanging(System.Nullable<int> value);
    partial void OnFromDate_YearChanged();
    partial void OnFromDate_MonthChanging(System.Nullable<int> value);
    partial void OnFromDate_MonthChanged();
    partial void OnFromDate_DayChanging(System.Nullable<int> value);
    partial void OnFromDate_DayChanged();
    partial void OnToDate_YearChanging(System.Nullable<int> value);
    partial void OnToDate_YearChanged();
    partial void OnToDate_MonthChanging(System.Nullable<int> value);
    partial void OnToDate_MonthChanged();
    partial void OnToDate_DayChanging(System.Nullable<int> value);
    partial void OnToDate_DayChanged();
    partial void OnEventFileNameChanging(string value);
    partial void OnEventFileNameChanged();
    partial void OnFileExistsConditionChanging(int value);
    partial void OnFileExistsConditionChanged();
    partial void OnEventDelimiterTypeChanging(string value);
    partial void OnEventDelimiterTypeChanged();
    partial void OnFileFormatChanging(int value);
    partial void OnFileFormatChanged();
    partial void OnSaveEventColumnNamesChanging(int value);
    partial void OnSaveEventColumnNamesChanged();
    partial void OnFromTime_HourChanging(System.Nullable<int> value);
    partial void OnFromTime_HourChanged();
    partial void OnFromTime_MinuteChanging(System.Nullable<int> value);
    partial void OnFromTime_MinuteChanged();
    partial void OnToTime_HourChanging(System.Nullable<int> value);
    partial void OnToTime_HourChanged();
    partial void OnToTime_MinuteChanging(System.Nullable<int> value);
    partial void OnToTime_MinuteChanged();
    #endregion
		
		public TASK_SAVEEVENTLOGENTRIES()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="NVarChar(500)")]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventLog", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EventLog
		{
			get
			{
				return this._EventLog;
			}
			set
			{
				if ((this._EventLog != value))
				{
					this.OnEventLogChanging(value);
					this.SendPropertyChanging();
					this._EventLog = value;
					this.SendPropertyChanged("EventLog");
					this.OnEventLogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnMask", DbType="Int")]
		public System.Nullable<int> ColumnMask
		{
			get
			{
				return this._ColumnMask;
			}
			set
			{
				if ((this._ColumnMask != value))
				{
					this.OnColumnMaskChanging(value);
					this.SendPropertyChanging();
					this._ColumnMask = value;
					this.SendPropertyChanged("ColumnMask");
					this.OnColumnMaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventIDFilter", DbType="NVarChar(100)")]
		public string EventIDFilter
		{
			get
			{
				return this._EventIDFilter;
			}
			set
			{
				if ((this._EventIDFilter != value))
				{
					this.OnEventIDFilterChanging(value);
					this.SendPropertyChanging();
					this._EventIDFilter = value;
					this.SendPropertyChanged("EventIDFilter");
					this.OnEventIDFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSourceFilter", DbType="NVarChar(100)")]
		public string EventSourceFilter
		{
			get
			{
				return this._EventSourceFilter;
			}
			set
			{
				if ((this._EventSourceFilter != value))
				{
					this.OnEventSourceFilterChanging(value);
					this.SendPropertyChanging();
					this._EventSourceFilter = value;
					this.SendPropertyChanged("EventSourceFilter");
					this.OnEventSourceFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCategory", DbType="NVarChar(100)")]
		public string EventCategory
		{
			get
			{
				return this._EventCategory;
			}
			set
			{
				if ((this._EventCategory != value))
				{
					this.OnEventCategoryChanging(value);
					this.SendPropertyChanging();
					this._EventCategory = value;
					this.SendPropertyChanged("EventCategory");
					this.OnEventCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDescriptionFilter", DbType="NVarChar(100)")]
		public string EventDescriptionFilter
		{
			get
			{
				return this._EventDescriptionFilter;
			}
			set
			{
				if ((this._EventDescriptionFilter != value))
				{
					this.OnEventDescriptionFilterChanging(value);
					this.SendPropertyChanging();
					this._EventDescriptionFilter = value;
					this.SendPropertyChanged("EventDescriptionFilter");
					this.OnEventDescriptionFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTypeFilter", DbType="NVarChar(100)")]
		public string EventTypeFilter
		{
			get
			{
				return this._EventTypeFilter;
			}
			set
			{
				if ((this._EventTypeFilter != value))
				{
					this.OnEventTypeFilterChanging(value);
					this.SendPropertyChanging();
					this._EventTypeFilter = value;
					this.SendPropertyChanged("EventTypeFilter");
					this.OnEventTypeFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventComputerFilter", DbType="NVarChar(100)")]
		public string EventComputerFilter
		{
			get
			{
				return this._EventComputerFilter;
			}
			set
			{
				if ((this._EventComputerFilter != value))
				{
					this.OnEventComputerFilterChanging(value);
					this.SendPropertyChanging();
					this._EventComputerFilter = value;
					this.SendPropertyChanged("EventComputerFilter");
					this.OnEventComputerFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate_Year", DbType="Int")]
		public System.Nullable<int> FromDate_Year
		{
			get
			{
				return this._FromDate_Year;
			}
			set
			{
				if ((this._FromDate_Year != value))
				{
					this.OnFromDate_YearChanging(value);
					this.SendPropertyChanging();
					this._FromDate_Year = value;
					this.SendPropertyChanged("FromDate_Year");
					this.OnFromDate_YearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate_Month", DbType="Int")]
		public System.Nullable<int> FromDate_Month
		{
			get
			{
				return this._FromDate_Month;
			}
			set
			{
				if ((this._FromDate_Month != value))
				{
					this.OnFromDate_MonthChanging(value);
					this.SendPropertyChanging();
					this._FromDate_Month = value;
					this.SendPropertyChanged("FromDate_Month");
					this.OnFromDate_MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate_Day", DbType="Int")]
		public System.Nullable<int> FromDate_Day
		{
			get
			{
				return this._FromDate_Day;
			}
			set
			{
				if ((this._FromDate_Day != value))
				{
					this.OnFromDate_DayChanging(value);
					this.SendPropertyChanging();
					this._FromDate_Day = value;
					this.SendPropertyChanged("FromDate_Day");
					this.OnFromDate_DayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate_Year", DbType="Int")]
		public System.Nullable<int> ToDate_Year
		{
			get
			{
				return this._ToDate_Year;
			}
			set
			{
				if ((this._ToDate_Year != value))
				{
					this.OnToDate_YearChanging(value);
					this.SendPropertyChanging();
					this._ToDate_Year = value;
					this.SendPropertyChanged("ToDate_Year");
					this.OnToDate_YearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate_Month", DbType="Int")]
		public System.Nullable<int> ToDate_Month
		{
			get
			{
				return this._ToDate_Month;
			}
			set
			{
				if ((this._ToDate_Month != value))
				{
					this.OnToDate_MonthChanging(value);
					this.SendPropertyChanging();
					this._ToDate_Month = value;
					this.SendPropertyChanged("ToDate_Month");
					this.OnToDate_MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate_Day", DbType="Int")]
		public System.Nullable<int> ToDate_Day
		{
			get
			{
				return this._ToDate_Day;
			}
			set
			{
				if ((this._ToDate_Day != value))
				{
					this.OnToDate_DayChanging(value);
					this.SendPropertyChanging();
					this._ToDate_Day = value;
					this.SendPropertyChanged("ToDate_Day");
					this.OnToDate_DayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventFileName", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string EventFileName
		{
			get
			{
				return this._EventFileName;
			}
			set
			{
				if ((this._EventFileName != value))
				{
					this.OnEventFileNameChanging(value);
					this.SendPropertyChanging();
					this._EventFileName = value;
					this.SendPropertyChanged("EventFileName");
					this.OnEventFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileExistsCondition", DbType="Int NOT NULL")]
		public int FileExistsCondition
		{
			get
			{
				return this._FileExistsCondition;
			}
			set
			{
				if ((this._FileExistsCondition != value))
				{
					this.OnFileExistsConditionChanging(value);
					this.SendPropertyChanging();
					this._FileExistsCondition = value;
					this.SendPropertyChanged("FileExistsCondition");
					this.OnFileExistsConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDelimiterType", DbType="NVarChar(200)")]
		public string EventDelimiterType
		{
			get
			{
				return this._EventDelimiterType;
			}
			set
			{
				if ((this._EventDelimiterType != value))
				{
					this.OnEventDelimiterTypeChanging(value);
					this.SendPropertyChanging();
					this._EventDelimiterType = value;
					this.SendPropertyChanged("EventDelimiterType");
					this.OnEventDelimiterTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileFormat", DbType="Int NOT NULL")]
		public int FileFormat
		{
			get
			{
				return this._FileFormat;
			}
			set
			{
				if ((this._FileFormat != value))
				{
					this.OnFileFormatChanging(value);
					this.SendPropertyChanging();
					this._FileFormat = value;
					this.SendPropertyChanged("FileFormat");
					this.OnFileFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveEventColumnNames", DbType="Int NOT NULL")]
		public int SaveEventColumnNames
		{
			get
			{
				return this._SaveEventColumnNames;
			}
			set
			{
				if ((this._SaveEventColumnNames != value))
				{
					this.OnSaveEventColumnNamesChanging(value);
					this.SendPropertyChanging();
					this._SaveEventColumnNames = value;
					this.SendPropertyChanged("SaveEventColumnNames");
					this.OnSaveEventColumnNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromTime_Hour", DbType="Int")]
		public System.Nullable<int> FromTime_Hour
		{
			get
			{
				return this._FromTime_Hour;
			}
			set
			{
				if ((this._FromTime_Hour != value))
				{
					this.OnFromTime_HourChanging(value);
					this.SendPropertyChanging();
					this._FromTime_Hour = value;
					this.SendPropertyChanged("FromTime_Hour");
					this.OnFromTime_HourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromTime_Minute", DbType="Int")]
		public System.Nullable<int> FromTime_Minute
		{
			get
			{
				return this._FromTime_Minute;
			}
			set
			{
				if ((this._FromTime_Minute != value))
				{
					this.OnFromTime_MinuteChanging(value);
					this.SendPropertyChanging();
					this._FromTime_Minute = value;
					this.SendPropertyChanged("FromTime_Minute");
					this.OnFromTime_MinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToTime_Hour", DbType="Int")]
		public System.Nullable<int> ToTime_Hour
		{
			get
			{
				return this._ToTime_Hour;
			}
			set
			{
				if ((this._ToTime_Hour != value))
				{
					this.OnToTime_HourChanging(value);
					this.SendPropertyChanging();
					this._ToTime_Hour = value;
					this.SendPropertyChanged("ToTime_Hour");
					this.OnToTime_HourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToTime_Minute", DbType="Int")]
		public System.Nullable<int> ToTime_Minute
		{
			get
			{
				return this._ToTime_Minute;
			}
			set
			{
				if ((this._ToTime_Minute != value))
				{
					this.OnToTime_MinuteChanging(value);
					this.SendPropertyChanging();
					this._ToTime_Minute = value;
					this.SendPropertyChanged("ToTime_Minute");
					this.OnToTime_MinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_SAVEEVENTLOGENTRIES", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_SAVEEVENTLOGENTRIES = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_SAVEEVENTLOGENTRIES = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_SENDOPALISEVENT")]
	public partial class TASK_SENDOPALISEVENT
	{
		
		private System.Guid _UniqueID;
		
		private string _EventType;
		
		private string _EventSummary;
		
		private string _EventDetails;
		
		public TASK_SENDOPALISEVENT()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this._UniqueID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(50)")]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this._EventType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSummary", DbType="NVarChar(200)")]
		public string EventSummary
		{
			get
			{
				return this._EventSummary;
			}
			set
			{
				if ((this._EventSummary != value))
				{
					this._EventSummary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetails", DbType="NVarChar(2000)")]
		public string EventDetails
		{
			get
			{
				return this._EventDetails;
			}
			set
			{
				if ((this._EventDetails != value))
				{
					this._EventDetails = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_SERVICESTATUS")]
	public partial class TASK_SERVICESTATUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Computer;
		
		private string _Service;
		
		private int _Condition;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnComputerChanging(string value);
    partial void OnComputerChanged();
    partial void OnServiceChanging(string value);
    partial void OnServiceChanged();
    partial void OnConditionChanging(int value);
    partial void OnConditionChanged();
    #endregion
		
		public TASK_SERVICESTATUS()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Computer", DbType="NVarChar(500)")]
		public string Computer
		{
			get
			{
				return this._Computer;
			}
			set
			{
				if ((this._Computer != value))
				{
					this.OnComputerChanging(value);
					this.SendPropertyChanging();
					this._Computer = value;
					this.SendPropertyChanged("Computer");
					this.OnComputerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Service
		{
			get
			{
				return this._Service;
			}
			set
			{
				if ((this._Service != value))
				{
					this.OnServiceChanging(value);
					this.SendPropertyChanging();
					this._Service = value;
					this.SendPropertyChanged("Service");
					this.OnServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Condition", DbType="Int NOT NULL")]
		public int Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_SERVICESTATUS", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_SERVICESTATUS = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_SERVICESTATUS = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_SNMPGETVARIABLE")]
	public partial class TASK_SNMPGETVARIABLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _IPAddress;
		
		private string _MIBIdentifier;
		
		private string _MIBValue;
		
		private string _SNMPTimeout;
		
		private string _SNMPRetry;
		
		private string _SNMPPort;
		
		private string _SNMPVersion;
		
		private string _SNMPCommunity;
		
		private string _SNMPRequestPort;
		
		private string _SNMPContext;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnMIBIdentifierChanging(string value);
    partial void OnMIBIdentifierChanged();
    partial void OnMIBValueChanging(string value);
    partial void OnMIBValueChanged();
    partial void OnSNMPTimeoutChanging(string value);
    partial void OnSNMPTimeoutChanged();
    partial void OnSNMPRetryChanging(string value);
    partial void OnSNMPRetryChanged();
    partial void OnSNMPPortChanging(string value);
    partial void OnSNMPPortChanged();
    partial void OnSNMPVersionChanging(string value);
    partial void OnSNMPVersionChanged();
    partial void OnSNMPCommunityChanging(string value);
    partial void OnSNMPCommunityChanged();
    partial void OnSNMPRequestPortChanging(string value);
    partial void OnSNMPRequestPortChanged();
    partial void OnSNMPContextChanging(string value);
    partial void OnSNMPContextChanged();
    #endregion
		
		public TASK_SNMPGETVARIABLE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(1000)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MIBIdentifier", DbType="NVarChar(1000)")]
		public string MIBIdentifier
		{
			get
			{
				return this._MIBIdentifier;
			}
			set
			{
				if ((this._MIBIdentifier != value))
				{
					this.OnMIBIdentifierChanging(value);
					this.SendPropertyChanging();
					this._MIBIdentifier = value;
					this.SendPropertyChanged("MIBIdentifier");
					this.OnMIBIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MIBValue", DbType="NVarChar(1000)")]
		public string MIBValue
		{
			get
			{
				return this._MIBValue;
			}
			set
			{
				if ((this._MIBValue != value))
				{
					this.OnMIBValueChanging(value);
					this.SendPropertyChanging();
					this._MIBValue = value;
					this.SendPropertyChanged("MIBValue");
					this.OnMIBValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNMPTimeout", DbType="NVarChar(1000)")]
		public string SNMPTimeout
		{
			get
			{
				return this._SNMPTimeout;
			}
			set
			{
				if ((this._SNMPTimeout != value))
				{
					this.OnSNMPTimeoutChanging(value);
					this.SendPropertyChanging();
					this._SNMPTimeout = value;
					this.SendPropertyChanged("SNMPTimeout");
					this.OnSNMPTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNMPRetry", DbType="NVarChar(1000)")]
		public string SNMPRetry
		{
			get
			{
				return this._SNMPRetry;
			}
			set
			{
				if ((this._SNMPRetry != value))
				{
					this.OnSNMPRetryChanging(value);
					this.SendPropertyChanging();
					this._SNMPRetry = value;
					this.SendPropertyChanged("SNMPRetry");
					this.OnSNMPRetryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNMPPort", DbType="NVarChar(1000)")]
		public string SNMPPort
		{
			get
			{
				return this._SNMPPort;
			}
			set
			{
				if ((this._SNMPPort != value))
				{
					this.OnSNMPPortChanging(value);
					this.SendPropertyChanging();
					this._SNMPPort = value;
					this.SendPropertyChanged("SNMPPort");
					this.OnSNMPPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNMPVersion", DbType="NVarChar(1000)")]
		public string SNMPVersion
		{
			get
			{
				return this._SNMPVersion;
			}
			set
			{
				if ((this._SNMPVersion != value))
				{
					this.OnSNMPVersionChanging(value);
					this.SendPropertyChanging();
					this._SNMPVersion = value;
					this.SendPropertyChanged("SNMPVersion");
					this.OnSNMPVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNMPCommunity", DbType="NVarChar(1000)")]
		public string SNMPCommunity
		{
			get
			{
				return this._SNMPCommunity;
			}
			set
			{
				if ((this._SNMPCommunity != value))
				{
					this.OnSNMPCommunityChanging(value);
					this.SendPropertyChanging();
					this._SNMPCommunity = value;
					this.SendPropertyChanged("SNMPCommunity");
					this.OnSNMPCommunityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNMPRequestPort", DbType="NVarChar(1000)")]
		public string SNMPRequestPort
		{
			get
			{
				return this._SNMPRequestPort;
			}
			set
			{
				if ((this._SNMPRequestPort != value))
				{
					this.OnSNMPRequestPortChanging(value);
					this.SendPropertyChanging();
					this._SNMPRequestPort = value;
					this.SendPropertyChanged("SNMPRequestPort");
					this.OnSNMPRequestPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNMPContext", DbType="NVarChar(1000)")]
		public string SNMPContext
		{
			get
			{
				return this._SNMPContext;
			}
			set
			{
				if ((this._SNMPContext != value))
				{
					this.OnSNMPContextChanging(value);
					this.SendPropertyChanging();
					this._SNMPContext = value;
					this.SendPropertyChanged("SNMPContext");
					this.OnSNMPContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_SNMPGETVARIABLE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_SNMPGETVARIABLE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_SNMPGETVARIABLE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_SNMPSENDTRAP")]
	public partial class TASK_SNMPSENDTRAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _DestinationIPAddress;
		
		private string _EnterpriseID;
		
		private string _GenericID;
		
		private string _SpecificID;
		
		private string _TrapPort;
		
		private string _SNMPVersion;
		
		private string _SNMPCommunity;
		
		private string _SNMPContext;
		
		private string _Varbinds;
		
		private string _OriginIPAddress;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnDestinationIPAddressChanging(string value);
    partial void OnDestinationIPAddressChanged();
    partial void OnEnterpriseIDChanging(string value);
    partial void OnEnterpriseIDChanged();
    partial void OnGenericIDChanging(string value);
    partial void OnGenericIDChanged();
    partial void OnSpecificIDChanging(string value);
    partial void OnSpecificIDChanged();
    partial void OnTrapPortChanging(string value);
    partial void OnTrapPortChanged();
    partial void OnSNMPVersionChanging(string value);
    partial void OnSNMPVersionChanged();
    partial void OnSNMPCommunityChanging(string value);
    partial void OnSNMPCommunityChanged();
    partial void OnSNMPContextChanging(string value);
    partial void OnSNMPContextChanged();
    partial void OnVarbindsChanging(string value);
    partial void OnVarbindsChanged();
    partial void OnOriginIPAddressChanging(string value);
    partial void OnOriginIPAddressChanged();
    #endregion
		
		public TASK_SNMPSENDTRAP()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationIPAddress", DbType="NVarChar(1000)")]
		public string DestinationIPAddress
		{
			get
			{
				return this._DestinationIPAddress;
			}
			set
			{
				if ((this._DestinationIPAddress != value))
				{
					this.OnDestinationIPAddressChanging(value);
					this.SendPropertyChanging();
					this._DestinationIPAddress = value;
					this.SendPropertyChanged("DestinationIPAddress");
					this.OnDestinationIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="NVarChar(1000)")]
		public string EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					this.OnEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseID = value;
					this.SendPropertyChanged("EnterpriseID");
					this.OnEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenericID", DbType="NVarChar(1000)")]
		public string GenericID
		{
			get
			{
				return this._GenericID;
			}
			set
			{
				if ((this._GenericID != value))
				{
					this.OnGenericIDChanging(value);
					this.SendPropertyChanging();
					this._GenericID = value;
					this.SendPropertyChanged("GenericID");
					this.OnGenericIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificID", DbType="NVarChar(1000)")]
		public string SpecificID
		{
			get
			{
				return this._SpecificID;
			}
			set
			{
				if ((this._SpecificID != value))
				{
					this.OnSpecificIDChanging(value);
					this.SendPropertyChanging();
					this._SpecificID = value;
					this.SendPropertyChanged("SpecificID");
					this.OnSpecificIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrapPort", DbType="NVarChar(1000)")]
		public string TrapPort
		{
			get
			{
				return this._TrapPort;
			}
			set
			{
				if ((this._TrapPort != value))
				{
					this.OnTrapPortChanging(value);
					this.SendPropertyChanging();
					this._TrapPort = value;
					this.SendPropertyChanged("TrapPort");
					this.OnTrapPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNMPVersion", DbType="NVarChar(1000)")]
		public string SNMPVersion
		{
			get
			{
				return this._SNMPVersion;
			}
			set
			{
				if ((this._SNMPVersion != value))
				{
					this.OnSNMPVersionChanging(value);
					this.SendPropertyChanging();
					this._SNMPVersion = value;
					this.SendPropertyChanged("SNMPVersion");
					this.OnSNMPVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNMPCommunity", DbType="NVarChar(1000)")]
		public string SNMPCommunity
		{
			get
			{
				return this._SNMPCommunity;
			}
			set
			{
				if ((this._SNMPCommunity != value))
				{
					this.OnSNMPCommunityChanging(value);
					this.SendPropertyChanging();
					this._SNMPCommunity = value;
					this.SendPropertyChanged("SNMPCommunity");
					this.OnSNMPCommunityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNMPContext", DbType="NVarChar(1000)")]
		public string SNMPContext
		{
			get
			{
				return this._SNMPContext;
			}
			set
			{
				if ((this._SNMPContext != value))
				{
					this.OnSNMPContextChanging(value);
					this.SendPropertyChanging();
					this._SNMPContext = value;
					this.SendPropertyChanged("SNMPContext");
					this.OnSNMPContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Varbinds", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Varbinds
		{
			get
			{
				return this._Varbinds;
			}
			set
			{
				if ((this._Varbinds != value))
				{
					this.OnVarbindsChanging(value);
					this.SendPropertyChanging();
					this._Varbinds = value;
					this.SendPropertyChanged("Varbinds");
					this.OnVarbindsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginIPAddress", DbType="NVarChar(1000)")]
		public string OriginIPAddress
		{
			get
			{
				return this._OriginIPAddress;
			}
			set
			{
				if ((this._OriginIPAddress != value))
				{
					this.OnOriginIPAddressChanging(value);
					this.SendPropertyChanging();
					this._OriginIPAddress = value;
					this.SendPropertyChanged("OriginIPAddress");
					this.OnOriginIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_SNMPSENDTRAP", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_SNMPSENDTRAP = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_SNMPSENDTRAP = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_SNMPSETVARIABLE")]
	public partial class TASK_SNMPSETVARIABLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _IPAddress;
		
		private string _MIBIdentifier;
		
		private string _MIBValue;
		
		private string _SNMPTimeout;
		
		private string _SNMPRetry;
		
		private string _SNMPPort;
		
		private string _SNMPVersion;
		
		private string _SNMPCommunity;
		
		private string _SNMPRequestPort;
		
		private string _SNMPContext;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnMIBIdentifierChanging(string value);
    partial void OnMIBIdentifierChanged();
    partial void OnMIBValueChanging(string value);
    partial void OnMIBValueChanged();
    partial void OnSNMPTimeoutChanging(string value);
    partial void OnSNMPTimeoutChanged();
    partial void OnSNMPRetryChanging(string value);
    partial void OnSNMPRetryChanged();
    partial void OnSNMPPortChanging(string value);
    partial void OnSNMPPortChanged();
    partial void OnSNMPVersionChanging(string value);
    partial void OnSNMPVersionChanged();
    partial void OnSNMPCommunityChanging(string value);
    partial void OnSNMPCommunityChanged();
    partial void OnSNMPRequestPortChanging(string value);
    partial void OnSNMPRequestPortChanged();
    partial void OnSNMPContextChanging(string value);
    partial void OnSNMPContextChanged();
    #endregion
		
		public TASK_SNMPSETVARIABLE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(1000)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MIBIdentifier", DbType="NVarChar(1000)")]
		public string MIBIdentifier
		{
			get
			{
				return this._MIBIdentifier;
			}
			set
			{
				if ((this._MIBIdentifier != value))
				{
					this.OnMIBIdentifierChanging(value);
					this.SendPropertyChanging();
					this._MIBIdentifier = value;
					this.SendPropertyChanged("MIBIdentifier");
					this.OnMIBIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MIBValue", DbType="NVarChar(1000)")]
		public string MIBValue
		{
			get
			{
				return this._MIBValue;
			}
			set
			{
				if ((this._MIBValue != value))
				{
					this.OnMIBValueChanging(value);
					this.SendPropertyChanging();
					this._MIBValue = value;
					this.SendPropertyChanged("MIBValue");
					this.OnMIBValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNMPTimeout", DbType="NVarChar(1000)")]
		public string SNMPTimeout
		{
			get
			{
				return this._SNMPTimeout;
			}
			set
			{
				if ((this._SNMPTimeout != value))
				{
					this.OnSNMPTimeoutChanging(value);
					this.SendPropertyChanging();
					this._SNMPTimeout = value;
					this.SendPropertyChanged("SNMPTimeout");
					this.OnSNMPTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNMPRetry", DbType="NVarChar(1000)")]
		public string SNMPRetry
		{
			get
			{
				return this._SNMPRetry;
			}
			set
			{
				if ((this._SNMPRetry != value))
				{
					this.OnSNMPRetryChanging(value);
					this.SendPropertyChanging();
					this._SNMPRetry = value;
					this.SendPropertyChanged("SNMPRetry");
					this.OnSNMPRetryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNMPPort", DbType="NVarChar(1000)")]
		public string SNMPPort
		{
			get
			{
				return this._SNMPPort;
			}
			set
			{
				if ((this._SNMPPort != value))
				{
					this.OnSNMPPortChanging(value);
					this.SendPropertyChanging();
					this._SNMPPort = value;
					this.SendPropertyChanged("SNMPPort");
					this.OnSNMPPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNMPVersion", DbType="NVarChar(1000)")]
		public string SNMPVersion
		{
			get
			{
				return this._SNMPVersion;
			}
			set
			{
				if ((this._SNMPVersion != value))
				{
					this.OnSNMPVersionChanging(value);
					this.SendPropertyChanging();
					this._SNMPVersion = value;
					this.SendPropertyChanged("SNMPVersion");
					this.OnSNMPVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNMPCommunity", DbType="NVarChar(1000)")]
		public string SNMPCommunity
		{
			get
			{
				return this._SNMPCommunity;
			}
			set
			{
				if ((this._SNMPCommunity != value))
				{
					this.OnSNMPCommunityChanging(value);
					this.SendPropertyChanging();
					this._SNMPCommunity = value;
					this.SendPropertyChanged("SNMPCommunity");
					this.OnSNMPCommunityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNMPRequestPort", DbType="NVarChar(1000)")]
		public string SNMPRequestPort
		{
			get
			{
				return this._SNMPRequestPort;
			}
			set
			{
				if ((this._SNMPRequestPort != value))
				{
					this.OnSNMPRequestPortChanging(value);
					this.SendPropertyChanging();
					this._SNMPRequestPort = value;
					this.SendPropertyChanged("SNMPRequestPort");
					this.OnSNMPRequestPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNMPContext", DbType="NVarChar(1000)")]
		public string SNMPContext
		{
			get
			{
				return this._SNMPContext;
			}
			set
			{
				if ((this._SNMPContext != value))
				{
					this.OnSNMPContextChanging(value);
					this.SendPropertyChanging();
					this._SNMPContext = value;
					this.SendPropertyChanged("SNMPContext");
					this.OnSNMPContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_SNMPSETVARIABLE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_SNMPSETVARIABLE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_SNMPSETVARIABLE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_STARTSTOPSERVICE")]
	public partial class TASK_STARTSTOPSERVICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _ComputerName;
		
		private int _ServiceAction;
		
		private string _ServiceName;
		
		private string _StartupParameter;
		
		private int _ActionTimeAllowance;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    partial void OnServiceActionChanging(int value);
    partial void OnServiceActionChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnStartupParameterChanging(string value);
    partial void OnStartupParameterChanged();
    partial void OnActionTimeAllowanceChanging(int value);
    partial void OnActionTimeAllowanceChanged();
    #endregion
		
		public TASK_STARTSTOPSERVICE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="NVarChar(500)")]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceAction", DbType="Int NOT NULL")]
		public int ServiceAction
		{
			get
			{
				return this._ServiceAction;
			}
			set
			{
				if ((this._ServiceAction != value))
				{
					this.OnServiceActionChanging(value);
					this.SendPropertyChanging();
					this._ServiceAction = value;
					this.SendPropertyChanged("ServiceAction");
					this.OnServiceActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartupParameter", DbType="NVarChar(500)")]
		public string StartupParameter
		{
			get
			{
				return this._StartupParameter;
			}
			set
			{
				if ((this._StartupParameter != value))
				{
					this.OnStartupParameterChanging(value);
					this.SendPropertyChanging();
					this._StartupParameter = value;
					this.SendPropertyChanged("StartupParameter");
					this.OnStartupParameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionTimeAllowance", DbType="Int NOT NULL")]
		public int ActionTimeAllowance
		{
			get
			{
				return this._ActionTimeAllowance;
			}
			set
			{
				if ((this._ActionTimeAllowance != value))
				{
					this.OnActionTimeAllowanceChanging(value);
					this.SendPropertyChanging();
					this._ActionTimeAllowance = value;
					this.SendPropertyChanged("ActionTimeAllowance");
					this.OnActionTimeAllowanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_STARTSTOPSERVICE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_STARTSTOPSERVICE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_STARTSTOPSERVICE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_SYSLOG")]
	public partial class TASK_SYSLOG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Computer;
		
		private string _Message;
		
		private int _Priority;
		
		private int _Facility;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnComputerChanging(string value);
    partial void OnComputerChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    partial void OnFacilityChanging(int value);
    partial void OnFacilityChanged();
    #endregion
		
		public TASK_SYSLOG()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Computer", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Computer
		{
			get
			{
				return this._Computer;
			}
			set
			{
				if ((this._Computer != value))
				{
					this.OnComputerChanging(value);
					this.SendPropertyChanging();
					this._Computer = value;
					this.SendPropertyChanged("Computer");
					this.OnComputerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facility", DbType="Int NOT NULL")]
		public int Facility
		{
			get
			{
				return this._Facility;
			}
			set
			{
				if ((this._Facility != value))
				{
					this.OnFacilityChanging(value);
					this.SendPropertyChanging();
					this._Facility = value;
					this.SendPropertyChanged("Facility");
					this.OnFacilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_SYSLOG", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_SYSLOG = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_SYSLOG = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_SYSTEMRESTART")]
	public partial class TASK_SYSTEMRESTART : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Computer;
		
		private string _Message;
		
		private System.Nullable<int> _WaitTime;
		
		private System.Nullable<int> _ForceCloseApplications;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnComputerChanging(string value);
    partial void OnComputerChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnWaitTimeChanging(System.Nullable<int> value);
    partial void OnWaitTimeChanged();
    partial void OnForceCloseApplicationsChanging(System.Nullable<int> value);
    partial void OnForceCloseApplicationsChanged();
    #endregion
		
		public TASK_SYSTEMRESTART()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Computer", DbType="NVarChar(2000)")]
		public string Computer
		{
			get
			{
				return this._Computer;
			}
			set
			{
				if ((this._Computer != value))
				{
					this.OnComputerChanging(value);
					this.SendPropertyChanging();
					this._Computer = value;
					this.SendPropertyChanged("Computer");
					this.OnComputerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(2000)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitTime", DbType="Int")]
		public System.Nullable<int> WaitTime
		{
			get
			{
				return this._WaitTime;
			}
			set
			{
				if ((this._WaitTime != value))
				{
					this.OnWaitTimeChanging(value);
					this.SendPropertyChanging();
					this._WaitTime = value;
					this.SendPropertyChanged("WaitTime");
					this.OnWaitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForceCloseApplications", DbType="Int")]
		public System.Nullable<int> ForceCloseApplications
		{
			get
			{
				return this._ForceCloseApplications;
			}
			set
			{
				if ((this._ForceCloseApplications != value))
				{
					this.OnForceCloseApplicationsChanging(value);
					this.SendPropertyChanging();
					this._ForceCloseApplications = value;
					this.SendPropertyChanged("ForceCloseApplications");
					this.OnForceCloseApplicationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_SYSTEMRESTART", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_SYSTEMRESTART = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_SYSTEMRESTART = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_TELEPHONYDIAL")]
	public partial class TASK_TELEPHONYDIAL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _DialNumber;
		
		private System.Nullable<int> _NumberTries;
		
		private System.Nullable<int> _PauseBetweenTries;
		
		private System.Nullable<int> _MaxAttempts;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnDialNumberChanging(string value);
    partial void OnDialNumberChanged();
    partial void OnNumberTriesChanging(System.Nullable<int> value);
    partial void OnNumberTriesChanged();
    partial void OnPauseBetweenTriesChanging(System.Nullable<int> value);
    partial void OnPauseBetweenTriesChanged();
    partial void OnMaxAttemptsChanging(System.Nullable<int> value);
    partial void OnMaxAttemptsChanged();
    #endregion
		
		public TASK_TELEPHONYDIAL()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DialNumber", DbType="NVarChar(100)")]
		public string DialNumber
		{
			get
			{
				return this._DialNumber;
			}
			set
			{
				if ((this._DialNumber != value))
				{
					this.OnDialNumberChanging(value);
					this.SendPropertyChanging();
					this._DialNumber = value;
					this.SendPropertyChanged("DialNumber");
					this.OnDialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTries", DbType="Int")]
		public System.Nullable<int> NumberTries
		{
			get
			{
				return this._NumberTries;
			}
			set
			{
				if ((this._NumberTries != value))
				{
					this.OnNumberTriesChanging(value);
					this.SendPropertyChanging();
					this._NumberTries = value;
					this.SendPropertyChanged("NumberTries");
					this.OnNumberTriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseBetweenTries", DbType="Int")]
		public System.Nullable<int> PauseBetweenTries
		{
			get
			{
				return this._PauseBetweenTries;
			}
			set
			{
				if ((this._PauseBetweenTries != value))
				{
					this.OnPauseBetweenTriesChanging(value);
					this.SendPropertyChanging();
					this._PauseBetweenTries = value;
					this.SendPropertyChanged("PauseBetweenTries");
					this.OnPauseBetweenTriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxAttempts", DbType="Int")]
		public System.Nullable<int> MaxAttempts
		{
			get
			{
				return this._MaxAttempts;
			}
			set
			{
				if ((this._MaxAttempts != value))
				{
					this.OnMaxAttemptsChanging(value);
					this.SendPropertyChanging();
					this._MaxAttempts = value;
					this.SendPropertyChanged("MaxAttempts");
					this.OnMaxAttemptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_TELEPHONYDIAL", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_TELEPHONYDIAL = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_TELEPHONYDIAL = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_TELEPHONYEND")]
	public partial class TASK_TELEPHONYEND : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    #endregion
		
		public TASK_TELEPHONYEND()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_TELEPHONYEND", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_TELEPHONYEND = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_TELEPHONYEND = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_TELEPHONYPROCESS")]
	public partial class TASK_TELEPHONYPROCESS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Nullable<int> _Hangup;
		
		private string _PlayDTMFSequence;
		
		private string _PlayWavFile;
		
		private System.Nullable<int> _PlayNumberTries;
		
		private System.Nullable<int> _PlayInterval;
		
		private string _PlayReceiveTones;
		
		private System.Nullable<int> _PlayFixedTone;
		
		private System.Nullable<int> _PlayTermOption;
		
		private System.Nullable<int> _PlayReceiveTimeout;
		
		private string _PlayReceiveFilename;
		
		private System.Nullable<int> _PlayReceiveNumberTries;
		
		private System.Nullable<int> _PlayReceiveInterval;
		
		private System.Nullable<int> _ReceiveTones;
		
		private System.Nullable<int> _ReceiveFixedTone;
		
		private System.Nullable<int> _ReceiveTermOption;
		
		private System.Nullable<int> _ReceiveTimeout;
		
		private string _RecordFilename;
		
		private System.Nullable<int> _RecordMaxLength;
		
		private System.Nullable<int> _RecordMaxInactivity;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnHangupChanging(System.Nullable<int> value);
    partial void OnHangupChanged();
    partial void OnPlayDTMFSequenceChanging(string value);
    partial void OnPlayDTMFSequenceChanged();
    partial void OnPlayWavFileChanging(string value);
    partial void OnPlayWavFileChanged();
    partial void OnPlayNumberTriesChanging(System.Nullable<int> value);
    partial void OnPlayNumberTriesChanged();
    partial void OnPlayIntervalChanging(System.Nullable<int> value);
    partial void OnPlayIntervalChanged();
    partial void OnPlayReceiveTonesChanging(string value);
    partial void OnPlayReceiveTonesChanged();
    partial void OnPlayFixedToneChanging(System.Nullable<int> value);
    partial void OnPlayFixedToneChanged();
    partial void OnPlayTermOptionChanging(System.Nullable<int> value);
    partial void OnPlayTermOptionChanged();
    partial void OnPlayReceiveTimeoutChanging(System.Nullable<int> value);
    partial void OnPlayReceiveTimeoutChanged();
    partial void OnPlayReceiveFilenameChanging(string value);
    partial void OnPlayReceiveFilenameChanged();
    partial void OnPlayReceiveNumberTriesChanging(System.Nullable<int> value);
    partial void OnPlayReceiveNumberTriesChanged();
    partial void OnPlayReceiveIntervalChanging(System.Nullable<int> value);
    partial void OnPlayReceiveIntervalChanged();
    partial void OnReceiveTonesChanging(System.Nullable<int> value);
    partial void OnReceiveTonesChanged();
    partial void OnReceiveFixedToneChanging(System.Nullable<int> value);
    partial void OnReceiveFixedToneChanged();
    partial void OnReceiveTermOptionChanging(System.Nullable<int> value);
    partial void OnReceiveTermOptionChanged();
    partial void OnReceiveTimeoutChanging(System.Nullable<int> value);
    partial void OnReceiveTimeoutChanged();
    partial void OnRecordFilenameChanging(string value);
    partial void OnRecordFilenameChanged();
    partial void OnRecordMaxLengthChanging(System.Nullable<int> value);
    partial void OnRecordMaxLengthChanged();
    partial void OnRecordMaxInactivityChanging(System.Nullable<int> value);
    partial void OnRecordMaxInactivityChanged();
    #endregion
		
		public TASK_TELEPHONYPROCESS()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hangup", DbType="Int")]
		public System.Nullable<int> Hangup
		{
			get
			{
				return this._Hangup;
			}
			set
			{
				if ((this._Hangup != value))
				{
					this.OnHangupChanging(value);
					this.SendPropertyChanging();
					this._Hangup = value;
					this.SendPropertyChanged("Hangup");
					this.OnHangupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayDTMFSequence", DbType="NVarChar(2000)")]
		public string PlayDTMFSequence
		{
			get
			{
				return this._PlayDTMFSequence;
			}
			set
			{
				if ((this._PlayDTMFSequence != value))
				{
					this.OnPlayDTMFSequenceChanging(value);
					this.SendPropertyChanging();
					this._PlayDTMFSequence = value;
					this.SendPropertyChanged("PlayDTMFSequence");
					this.OnPlayDTMFSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayWavFile", DbType="NVarChar(2000)")]
		public string PlayWavFile
		{
			get
			{
				return this._PlayWavFile;
			}
			set
			{
				if ((this._PlayWavFile != value))
				{
					this.OnPlayWavFileChanging(value);
					this.SendPropertyChanging();
					this._PlayWavFile = value;
					this.SendPropertyChanged("PlayWavFile");
					this.OnPlayWavFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayNumberTries", DbType="Int")]
		public System.Nullable<int> PlayNumberTries
		{
			get
			{
				return this._PlayNumberTries;
			}
			set
			{
				if ((this._PlayNumberTries != value))
				{
					this.OnPlayNumberTriesChanging(value);
					this.SendPropertyChanging();
					this._PlayNumberTries = value;
					this.SendPropertyChanged("PlayNumberTries");
					this.OnPlayNumberTriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayInterval", DbType="Int")]
		public System.Nullable<int> PlayInterval
		{
			get
			{
				return this._PlayInterval;
			}
			set
			{
				if ((this._PlayInterval != value))
				{
					this.OnPlayIntervalChanging(value);
					this.SendPropertyChanging();
					this._PlayInterval = value;
					this.SendPropertyChanged("PlayInterval");
					this.OnPlayIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayReceiveTones", DbType="NVarChar(2000)")]
		public string PlayReceiveTones
		{
			get
			{
				return this._PlayReceiveTones;
			}
			set
			{
				if ((this._PlayReceiveTones != value))
				{
					this.OnPlayReceiveTonesChanging(value);
					this.SendPropertyChanging();
					this._PlayReceiveTones = value;
					this.SendPropertyChanged("PlayReceiveTones");
					this.OnPlayReceiveTonesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayFixedTone", DbType="Int")]
		public System.Nullable<int> PlayFixedTone
		{
			get
			{
				return this._PlayFixedTone;
			}
			set
			{
				if ((this._PlayFixedTone != value))
				{
					this.OnPlayFixedToneChanging(value);
					this.SendPropertyChanging();
					this._PlayFixedTone = value;
					this.SendPropertyChanged("PlayFixedTone");
					this.OnPlayFixedToneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayTermOption", DbType="Int")]
		public System.Nullable<int> PlayTermOption
		{
			get
			{
				return this._PlayTermOption;
			}
			set
			{
				if ((this._PlayTermOption != value))
				{
					this.OnPlayTermOptionChanging(value);
					this.SendPropertyChanging();
					this._PlayTermOption = value;
					this.SendPropertyChanged("PlayTermOption");
					this.OnPlayTermOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayReceiveTimeout", DbType="Int")]
		public System.Nullable<int> PlayReceiveTimeout
		{
			get
			{
				return this._PlayReceiveTimeout;
			}
			set
			{
				if ((this._PlayReceiveTimeout != value))
				{
					this.OnPlayReceiveTimeoutChanging(value);
					this.SendPropertyChanging();
					this._PlayReceiveTimeout = value;
					this.SendPropertyChanged("PlayReceiveTimeout");
					this.OnPlayReceiveTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayReceiveFilename", DbType="NVarChar(2000)")]
		public string PlayReceiveFilename
		{
			get
			{
				return this._PlayReceiveFilename;
			}
			set
			{
				if ((this._PlayReceiveFilename != value))
				{
					this.OnPlayReceiveFilenameChanging(value);
					this.SendPropertyChanging();
					this._PlayReceiveFilename = value;
					this.SendPropertyChanged("PlayReceiveFilename");
					this.OnPlayReceiveFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayReceiveNumberTries", DbType="Int")]
		public System.Nullable<int> PlayReceiveNumberTries
		{
			get
			{
				return this._PlayReceiveNumberTries;
			}
			set
			{
				if ((this._PlayReceiveNumberTries != value))
				{
					this.OnPlayReceiveNumberTriesChanging(value);
					this.SendPropertyChanging();
					this._PlayReceiveNumberTries = value;
					this.SendPropertyChanged("PlayReceiveNumberTries");
					this.OnPlayReceiveNumberTriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayReceiveInterval", DbType="Int")]
		public System.Nullable<int> PlayReceiveInterval
		{
			get
			{
				return this._PlayReceiveInterval;
			}
			set
			{
				if ((this._PlayReceiveInterval != value))
				{
					this.OnPlayReceiveIntervalChanging(value);
					this.SendPropertyChanging();
					this._PlayReceiveInterval = value;
					this.SendPropertyChanged("PlayReceiveInterval");
					this.OnPlayReceiveIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveTones", DbType="Int")]
		public System.Nullable<int> ReceiveTones
		{
			get
			{
				return this._ReceiveTones;
			}
			set
			{
				if ((this._ReceiveTones != value))
				{
					this.OnReceiveTonesChanging(value);
					this.SendPropertyChanging();
					this._ReceiveTones = value;
					this.SendPropertyChanged("ReceiveTones");
					this.OnReceiveTonesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveFixedTone", DbType="Int")]
		public System.Nullable<int> ReceiveFixedTone
		{
			get
			{
				return this._ReceiveFixedTone;
			}
			set
			{
				if ((this._ReceiveFixedTone != value))
				{
					this.OnReceiveFixedToneChanging(value);
					this.SendPropertyChanging();
					this._ReceiveFixedTone = value;
					this.SendPropertyChanged("ReceiveFixedTone");
					this.OnReceiveFixedToneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveTermOption", DbType="Int")]
		public System.Nullable<int> ReceiveTermOption
		{
			get
			{
				return this._ReceiveTermOption;
			}
			set
			{
				if ((this._ReceiveTermOption != value))
				{
					this.OnReceiveTermOptionChanging(value);
					this.SendPropertyChanging();
					this._ReceiveTermOption = value;
					this.SendPropertyChanged("ReceiveTermOption");
					this.OnReceiveTermOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveTimeout", DbType="Int")]
		public System.Nullable<int> ReceiveTimeout
		{
			get
			{
				return this._ReceiveTimeout;
			}
			set
			{
				if ((this._ReceiveTimeout != value))
				{
					this.OnReceiveTimeoutChanging(value);
					this.SendPropertyChanging();
					this._ReceiveTimeout = value;
					this.SendPropertyChanged("ReceiveTimeout");
					this.OnReceiveTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordFilename", DbType="NVarChar(2000)")]
		public string RecordFilename
		{
			get
			{
				return this._RecordFilename;
			}
			set
			{
				if ((this._RecordFilename != value))
				{
					this.OnRecordFilenameChanging(value);
					this.SendPropertyChanging();
					this._RecordFilename = value;
					this.SendPropertyChanged("RecordFilename");
					this.OnRecordFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordMaxLength", DbType="Int")]
		public System.Nullable<int> RecordMaxLength
		{
			get
			{
				return this._RecordMaxLength;
			}
			set
			{
				if ((this._RecordMaxLength != value))
				{
					this.OnRecordMaxLengthChanging(value);
					this.SendPropertyChanging();
					this._RecordMaxLength = value;
					this.SendPropertyChanged("RecordMaxLength");
					this.OnRecordMaxLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordMaxInactivity", DbType="Int")]
		public System.Nullable<int> RecordMaxInactivity
		{
			get
			{
				return this._RecordMaxInactivity;
			}
			set
			{
				if ((this._RecordMaxInactivity != value))
				{
					this.OnRecordMaxInactivityChanging(value);
					this.SendPropertyChanging();
					this._RecordMaxInactivity = value;
					this.SendPropertyChanged("RecordMaxInactivity");
					this.OnRecordMaxInactivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_TELEPHONYPROCESS", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_TELEPHONYPROCESS = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_TELEPHONYPROCESS = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_WEBPAGE")]
	public partial class TASK_WEBPAGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _WebPageFolder;
		
		private string _WebPageFileOption;
		
		private System.Nullable<int> _CreationOption;
		
		private string _WebPageTitle;
		
		private string _WebPageMessage;
		
		private string _WebPageTemplateFile;
		
		private string _WebPageFile;
		
		private string _WebPageTag;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnWebPageFolderChanging(string value);
    partial void OnWebPageFolderChanged();
    partial void OnWebPageFileOptionChanging(string value);
    partial void OnWebPageFileOptionChanged();
    partial void OnCreationOptionChanging(System.Nullable<int> value);
    partial void OnCreationOptionChanged();
    partial void OnWebPageTitleChanging(string value);
    partial void OnWebPageTitleChanged();
    partial void OnWebPageMessageChanging(string value);
    partial void OnWebPageMessageChanged();
    partial void OnWebPageTemplateFileChanging(string value);
    partial void OnWebPageTemplateFileChanged();
    partial void OnWebPageFileChanging(string value);
    partial void OnWebPageFileChanged();
    partial void OnWebPageTagChanging(string value);
    partial void OnWebPageTagChanged();
    #endregion
		
		public TASK_WEBPAGE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebPageFolder", DbType="NVarChar(2000)")]
		public string WebPageFolder
		{
			get
			{
				return this._WebPageFolder;
			}
			set
			{
				if ((this._WebPageFolder != value))
				{
					this.OnWebPageFolderChanging(value);
					this.SendPropertyChanging();
					this._WebPageFolder = value;
					this.SendPropertyChanged("WebPageFolder");
					this.OnWebPageFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebPageFileOption", DbType="NVarChar(2000)")]
		public string WebPageFileOption
		{
			get
			{
				return this._WebPageFileOption;
			}
			set
			{
				if ((this._WebPageFileOption != value))
				{
					this.OnWebPageFileOptionChanging(value);
					this.SendPropertyChanging();
					this._WebPageFileOption = value;
					this.SendPropertyChanged("WebPageFileOption");
					this.OnWebPageFileOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationOption", DbType="Int")]
		public System.Nullable<int> CreationOption
		{
			get
			{
				return this._CreationOption;
			}
			set
			{
				if ((this._CreationOption != value))
				{
					this.OnCreationOptionChanging(value);
					this.SendPropertyChanging();
					this._CreationOption = value;
					this.SendPropertyChanged("CreationOption");
					this.OnCreationOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebPageTitle", DbType="NVarChar(2000)")]
		public string WebPageTitle
		{
			get
			{
				return this._WebPageTitle;
			}
			set
			{
				if ((this._WebPageTitle != value))
				{
					this.OnWebPageTitleChanging(value);
					this.SendPropertyChanging();
					this._WebPageTitle = value;
					this.SendPropertyChanged("WebPageTitle");
					this.OnWebPageTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebPageMessage", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WebPageMessage
		{
			get
			{
				return this._WebPageMessage;
			}
			set
			{
				if ((this._WebPageMessage != value))
				{
					this.OnWebPageMessageChanging(value);
					this.SendPropertyChanging();
					this._WebPageMessage = value;
					this.SendPropertyChanged("WebPageMessage");
					this.OnWebPageMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebPageTemplateFile", DbType="NVarChar(2000)")]
		public string WebPageTemplateFile
		{
			get
			{
				return this._WebPageTemplateFile;
			}
			set
			{
				if ((this._WebPageTemplateFile != value))
				{
					this.OnWebPageTemplateFileChanging(value);
					this.SendPropertyChanging();
					this._WebPageTemplateFile = value;
					this.SendPropertyChanged("WebPageTemplateFile");
					this.OnWebPageTemplateFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebPageFile", DbType="NVarChar(2000)")]
		public string WebPageFile
		{
			get
			{
				return this._WebPageFile;
			}
			set
			{
				if ((this._WebPageFile != value))
				{
					this.OnWebPageFileChanging(value);
					this.SendPropertyChanging();
					this._WebPageFile = value;
					this.SendPropertyChanged("WebPageFile");
					this.OnWebPageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebPageTag", DbType="NVarChar(200)")]
		public string WebPageTag
		{
			get
			{
				return this._WebPageTag;
			}
			set
			{
				if ((this._WebPageTag != value))
				{
					this.OnWebPageTagChanging(value);
					this.SendPropertyChanging();
					this._WebPageTag = value;
					this.SendPropertyChanged("WebPageTag");
					this.OnWebPageTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_WEBPAGE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_WEBPAGE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_WEBPAGE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_WRITETODATABASE")]
	public partial class TASK_WRITETODATABASE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _TableName;
		
		private string _ServerName;
		
		private int _DatabaseType;
		
		private string _InitialCatalog;
		
		private int _DatabaseAuthentication;
		
		private string _UserName;
		
		private string _Password;
		
		private int _CommandTimeout;
		
		private int _ConnectionTimeout;
		
		private EntitySet<TASK_WRITETODATABASE_DATA> _TASK_WRITETODATABASE_DATA;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnServerNameChanging(string value);
    partial void OnServerNameChanged();
    partial void OnDatabaseTypeChanging(int value);
    partial void OnDatabaseTypeChanged();
    partial void OnInitialCatalogChanging(string value);
    partial void OnInitialCatalogChanged();
    partial void OnDatabaseAuthenticationChanging(int value);
    partial void OnDatabaseAuthenticationChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCommandTimeoutChanging(int value);
    partial void OnCommandTimeoutChanged();
    partial void OnConnectionTimeoutChanging(int value);
    partial void OnConnectionTimeoutChanged();
    #endregion
		
		public TASK_WRITETODATABASE()
		{
			this._TASK_WRITETODATABASE_DATA = new EntitySet<TASK_WRITETODATABASE_DATA>(new Action<TASK_WRITETODATABASE_DATA>(this.attach_TASK_WRITETODATABASE_DATA), new Action<TASK_WRITETODATABASE_DATA>(this.detach_TASK_WRITETODATABASE_DATA));
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ServerName
		{
			get
			{
				return this._ServerName;
			}
			set
			{
				if ((this._ServerName != value))
				{
					this.OnServerNameChanging(value);
					this.SendPropertyChanging();
					this._ServerName = value;
					this.SendPropertyChanged("ServerName");
					this.OnServerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseType", DbType="Int NOT NULL")]
		public int DatabaseType
		{
			get
			{
				return this._DatabaseType;
			}
			set
			{
				if ((this._DatabaseType != value))
				{
					this.OnDatabaseTypeChanging(value);
					this.SendPropertyChanging();
					this._DatabaseType = value;
					this.SendPropertyChanged("DatabaseType");
					this.OnDatabaseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialCatalog", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string InitialCatalog
		{
			get
			{
				return this._InitialCatalog;
			}
			set
			{
				if ((this._InitialCatalog != value))
				{
					this.OnInitialCatalogChanging(value);
					this.SendPropertyChanging();
					this._InitialCatalog = value;
					this.SendPropertyChanged("InitialCatalog");
					this.OnInitialCatalogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseAuthentication", DbType="Int NOT NULL")]
		public int DatabaseAuthentication
		{
			get
			{
				return this._DatabaseAuthentication;
			}
			set
			{
				if ((this._DatabaseAuthentication != value))
				{
					this.OnDatabaseAuthenticationChanging(value);
					this.SendPropertyChanging();
					this._DatabaseAuthentication = value;
					this.SendPropertyChanged("DatabaseAuthentication");
					this.OnDatabaseAuthenticationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(500)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(2000)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandTimeout", DbType="Int NOT NULL")]
		public int CommandTimeout
		{
			get
			{
				return this._CommandTimeout;
			}
			set
			{
				if ((this._CommandTimeout != value))
				{
					this.OnCommandTimeoutChanging(value);
					this.SendPropertyChanging();
					this._CommandTimeout = value;
					this.SendPropertyChanged("CommandTimeout");
					this.OnCommandTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionTimeout", DbType="Int NOT NULL")]
		public int ConnectionTimeout
		{
			get
			{
				return this._ConnectionTimeout;
			}
			set
			{
				if ((this._ConnectionTimeout != value))
				{
					this.OnConnectionTimeoutChanging(value);
					this.SendPropertyChanging();
					this._ConnectionTimeout = value;
					this.SendPropertyChanged("ConnectionTimeout");
					this.OnConnectionTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TASK_WRITETODATABASE_TASK_WRITETODATABASE_DATA", Storage="_TASK_WRITETODATABASE_DATA", ThisKey="UniqueID", OtherKey="ParentID")]
		public EntitySet<TASK_WRITETODATABASE_DATA> TASK_WRITETODATABASE_DATA
		{
			get
			{
				return this._TASK_WRITETODATABASE_DATA;
			}
			set
			{
				this._TASK_WRITETODATABASE_DATA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_WRITETODATABASE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_WRITETODATABASE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_WRITETODATABASE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TASK_WRITETODATABASE_DATA(TASK_WRITETODATABASE_DATA entity)
		{
			this.SendPropertyChanging();
			entity.TASK_WRITETODATABASE = this;
		}
		
		private void detach_TASK_WRITETODATABASE_DATA(TASK_WRITETODATABASE_DATA entity)
		{
			this.SendPropertyChanging();
			entity.TASK_WRITETODATABASE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK_WRITETODATABASE_DATA")]
	public partial class TASK_WRITETODATABASE_DATA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ParentID;
		
		private string _FieldValue;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
		private EntityRef<TASK_WRITETODATABASE> _TASK_WRITETODATABASE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnParentIDChanging(System.Guid value);
    partial void OnParentIDChanged();
    partial void OnFieldValueChanging(string value);
    partial void OnFieldValueChanged();
    #endregion
		
		public TASK_WRITETODATABASE_DATA()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			this._TASK_WRITETODATABASE = default(EntityRef<TASK_WRITETODATABASE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if ((this._OBJECTS.HasLoadedOrAssignedValue || this._TASK_WRITETODATABASE.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldValue", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string FieldValue
		{
			get
			{
				return this._FieldValue;
			}
			set
			{
				if ((this._FieldValue != value))
				{
					this.OnFieldValueChanging(value);
					this.SendPropertyChanging();
					this._FieldValue = value;
					this.SendPropertyChanged("FieldValue");
					this.OnFieldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TASK_WRITETODATABASE_DATA", Storage="_OBJECTS", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TASK_WRITETODATABASE_DATA.Remove(this);
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TASK_WRITETODATABASE_DATA.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TASK_WRITETODATABASE_TASK_WRITETODATABASE_DATA", Storage="_TASK_WRITETODATABASE", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public TASK_WRITETODATABASE TASK_WRITETODATABASE
		{
			get
			{
				return this._TASK_WRITETODATABASE.Entity;
			}
			set
			{
				TASK_WRITETODATABASE previousValue = this._TASK_WRITETODATABASE.Entity;
				if (((previousValue != value) 
							|| (this._TASK_WRITETODATABASE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TASK_WRITETODATABASE.Entity = null;
						previousValue.TASK_WRITETODATABASE_DATA.Remove(this);
					}
					this._TASK_WRITETODATABASE.Entity = value;
					if ((value != null))
					{
						value.TASK_WRITETODATABASE_DATA.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("TASK_WRITETODATABASE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TELEPHONY_SELECTEDLINES")]
	public partial class TELEPHONY_SELECTEDLINES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ParentID;
		
		private string _LineName;
		
		private System.Nullable<int> _ChannelNumber;
		
		private System.Nullable<int> _Reserved;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnParentIDChanging(System.Guid value);
    partial void OnParentIDChanged();
    partial void OnLineNameChanging(string value);
    partial void OnLineNameChanged();
    partial void OnChannelNumberChanging(System.Nullable<int> value);
    partial void OnChannelNumberChanged();
    partial void OnReservedChanging(System.Nullable<int> value);
    partial void OnReservedChanged();
    #endregion
		
		public TELEPHONY_SELECTEDLINES()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineName", DbType="NVarChar(2000)")]
		public string LineName
		{
			get
			{
				return this._LineName;
			}
			set
			{
				if ((this._LineName != value))
				{
					this.OnLineNameChanging(value);
					this.SendPropertyChanging();
					this._LineName = value;
					this.SendPropertyChanged("LineName");
					this.OnLineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChannelNumber", DbType="Int")]
		public System.Nullable<int> ChannelNumber
		{
			get
			{
				return this._ChannelNumber;
			}
			set
			{
				if ((this._ChannelNumber != value))
				{
					this.OnChannelNumberChanging(value);
					this.SendPropertyChanging();
					this._ChannelNumber = value;
					this.SendPropertyChanged("ChannelNumber");
					this.OnChannelNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reserved", DbType="Int")]
		public System.Nullable<int> Reserved
		{
			get
			{
				return this._Reserved;
			}
			set
			{
				if ((this._Reserved != value))
				{
					this.OnReservedChanging(value);
					this.SendPropertyChanging();
					this._Reserved = value;
					this.SendPropertyChanged("Reserved");
					this.OnReservedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_TELEPHONY_SELECTEDLINES", Storage="_OBJECTS", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.TELEPHONY_SELECTEDLINES.Remove(this);
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.TELEPHONY_SELECTEDLINES.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRIGGER_POLICY")]
	public partial class TRIGGER_POLICY
	{
		
		private System.Guid _UniqueID;
		
		private string _PolicyObjectID;
		
		private string _PolicyPath;
		
		private bool _TriggerByPolicyPath;
		
		private string _TargetActionServers;
		
		private bool _WaitToComplete;
		
		public TRIGGER_POLICY()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this._UniqueID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolicyObjectID", DbType="NVarChar(200)")]
		public string PolicyObjectID
		{
			get
			{
				return this._PolicyObjectID;
			}
			set
			{
				if ((this._PolicyObjectID != value))
				{
					this._PolicyObjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolicyPath", DbType="NVarChar(2000)")]
		public string PolicyPath
		{
			get
			{
				return this._PolicyPath;
			}
			set
			{
				if ((this._PolicyPath != value))
				{
					this._PolicyPath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerByPolicyPath", DbType="Bit NOT NULL")]
		public bool TriggerByPolicyPath
		{
			get
			{
				return this._TriggerByPolicyPath;
			}
			set
			{
				if ((this._TriggerByPolicyPath != value))
				{
					this._TriggerByPolicyPath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetActionServers", DbType="NVarChar(2000)")]
		public string TargetActionServers
		{
			get
			{
				return this._TargetActionServers;
			}
			set
			{
				if ((this._TargetActionServers != value))
				{
					this._TargetActionServers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitToComplete", DbType="Bit NOT NULL")]
		public bool WaitToComplete
		{
			get
			{
				return this._WaitToComplete;
			}
			set
			{
				if ((this._WaitToComplete != value))
				{
					this._WaitToComplete = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRIGGER_POLICY_PARAMETERS")]
	public partial class TRIGGER_POLICY_PARAMETERS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ParentID;
		
		private System.Nullable<System.Guid> _Parameter;
		
		private string _Value;
		
		private System.Nullable<int> _GroupID;
		
		private string _ParameterName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnParentIDChanging(System.Guid value);
    partial void OnParentIDChanged();
    partial void OnParameterChanging(System.Nullable<System.Guid> value);
    partial void OnParameterChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnParameterNameChanging(string value);
    partial void OnParameterNameChanged();
    #endregion
		
		public TRIGGER_POLICY_PARAMETERS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameter", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Parameter
		{
			get
			{
				return this._Parameter;
			}
			set
			{
				if ((this._Parameter != value))
				{
					this.OnParameterChanging(value);
					this.SendPropertyChanging();
					this._Parameter = value;
					this.SendPropertyChanged("Parameter");
					this.OnParameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(2000)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParameterName", DbType="NVarChar(2000)")]
		public string ParameterName
		{
			get
			{
				return this._ParameterName;
			}
			set
			{
				if ((this._ParameterName != value))
				{
					this.OnParameterNameChanging(value);
					this.SendPropertyChanging();
					this._ParameterName = value;
					this.SendPropertyChanged("ParameterName");
					this.OnParameterNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRIGGERS")]
	public partial class TRIGGERS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private System.Guid _ParentID;
		
		private string _Type;
		
		private string _Condition;
		
		private string _Data;
		
		private string _Value;
		
		private System.Nullable<int> _GroupID;
		
		private EntityRef<LINKS> _LINKS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnParentIDChanging(System.Guid value);
    partial void OnParentIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnConditionChanging(string value);
    partial void OnConditionChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    #endregion
		
		public TRIGGERS()
		{
			this._LINKS = default(EntityRef<LINKS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._LINKS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Condition", DbType="NVarChar(200)")]
		public string Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(2000)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(2000)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LINKS_TRIGGERS", Storage="_LINKS", ThisKey="ParentID", OtherKey="UniqueID", IsForeignKey=true)]
		public LINKS LINKS
		{
			get
			{
				return this._LINKS.Entity;
			}
			set
			{
				LINKS previousValue = this._LINKS.Entity;
				if (((previousValue != value) 
							|| (this._LINKS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LINKS.Entity = null;
						previousValue.TRIGGERS.Remove(this);
					}
					this._LINKS.Entity = value;
					if ((value != null))
					{
						value.TRIGGERS.Add(this);
						this._ParentID = value.UniqueID;
					}
					else
					{
						this._ParentID = default(System.Guid);
					}
					this.SendPropertyChanged("LINKS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VARIABLES")]
	public partial class VARIABLES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _Type;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public VARIABLES()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(200)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(4000)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VERSION")]
	public partial class VERSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DBVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDBVersionChanging(string value);
    partial void OnDBVersionChanged();
    #endregion
		
		public VERSION()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBVersion", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DBVersion
		{
			get
			{
				return this._DBVersion;
			}
			set
			{
				if ((this._DBVersion != value))
				{
					this.OnDBVersionChanging(value);
					this.SendPropertyChanging();
					this._DBVersion = value;
					this.SendPropertyChanged("DBVersion");
					this.OnDBVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WS_INVOKE")]
	public partial class WS_INVOKE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqueID;
		
		private string _WsdlPath;
		
		private string _MethodName;
		
		private string _Request;
		
		private string _SaveResponse;
		
		private string _ResponsePath;
		
		private string _InputContainsXmlns;
		
		private string _OutputContainsXmlns;
		
		private string _EnableHttpAuth;
		
		private string _UsernameHttpAuth;
		
		private string _PasswordHttpAuth;
		
		private string _AdvUrl;
		
		private string _AdvTimeout;
		
		private string _AdvUseCookieContainer;
		
		private string _AdvProtocol;
		
		private EntityRef<OBJECTS> _OBJECTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnWsdlPathChanging(string value);
    partial void OnWsdlPathChanged();
    partial void OnMethodNameChanging(string value);
    partial void OnMethodNameChanged();
    partial void OnRequestChanging(string value);
    partial void OnRequestChanged();
    partial void OnSaveResponseChanging(string value);
    partial void OnSaveResponseChanged();
    partial void OnResponsePathChanging(string value);
    partial void OnResponsePathChanged();
    partial void OnInputContainsXmlnsChanging(string value);
    partial void OnInputContainsXmlnsChanged();
    partial void OnOutputContainsXmlnsChanging(string value);
    partial void OnOutputContainsXmlnsChanged();
    partial void OnEnableHttpAuthChanging(string value);
    partial void OnEnableHttpAuthChanged();
    partial void OnUsernameHttpAuthChanging(string value);
    partial void OnUsernameHttpAuthChanged();
    partial void OnPasswordHttpAuthChanging(string value);
    partial void OnPasswordHttpAuthChanged();
    partial void OnAdvUrlChanging(string value);
    partial void OnAdvUrlChanged();
    partial void OnAdvTimeoutChanging(string value);
    partial void OnAdvTimeoutChanged();
    partial void OnAdvUseCookieContainerChanging(string value);
    partial void OnAdvUseCookieContainerChanged();
    partial void OnAdvProtocolChanging(string value);
    partial void OnAdvProtocolChanged();
    #endregion
		
		public WS_INVOKE()
		{
			this._OBJECTS = default(EntityRef<OBJECTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._OBJECTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WsdlPath", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WsdlPath
		{
			get
			{
				return this._WsdlPath;
			}
			set
			{
				if ((this._WsdlPath != value))
				{
					this.OnWsdlPathChanging(value);
					this.SendPropertyChanging();
					this._WsdlPath = value;
					this.SendPropertyChanged("WsdlPath");
					this.OnWsdlPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodName", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string MethodName
		{
			get
			{
				return this._MethodName;
			}
			set
			{
				if ((this._MethodName != value))
				{
					this.OnMethodNameChanging(value);
					this.SendPropertyChanging();
					this._MethodName = value;
					this.SendPropertyChanged("MethodName");
					this.OnMethodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Request", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Request
		{
			get
			{
				return this._Request;
			}
			set
			{
				if ((this._Request != value))
				{
					this.OnRequestChanging(value);
					this.SendPropertyChanging();
					this._Request = value;
					this.SendPropertyChanged("Request");
					this.OnRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveResponse", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SaveResponse
		{
			get
			{
				return this._SaveResponse;
			}
			set
			{
				if ((this._SaveResponse != value))
				{
					this.OnSaveResponseChanging(value);
					this.SendPropertyChanging();
					this._SaveResponse = value;
					this.SendPropertyChanged("SaveResponse");
					this.OnSaveResponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsePath", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ResponsePath
		{
			get
			{
				return this._ResponsePath;
			}
			set
			{
				if ((this._ResponsePath != value))
				{
					this.OnResponsePathChanging(value);
					this.SendPropertyChanging();
					this._ResponsePath = value;
					this.SendPropertyChanged("ResponsePath");
					this.OnResponsePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputContainsXmlns", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string InputContainsXmlns
		{
			get
			{
				return this._InputContainsXmlns;
			}
			set
			{
				if ((this._InputContainsXmlns != value))
				{
					this.OnInputContainsXmlnsChanging(value);
					this.SendPropertyChanging();
					this._InputContainsXmlns = value;
					this.SendPropertyChanged("InputContainsXmlns");
					this.OnInputContainsXmlnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutputContainsXmlns", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string OutputContainsXmlns
		{
			get
			{
				return this._OutputContainsXmlns;
			}
			set
			{
				if ((this._OutputContainsXmlns != value))
				{
					this.OnOutputContainsXmlnsChanging(value);
					this.SendPropertyChanging();
					this._OutputContainsXmlns = value;
					this.SendPropertyChanged("OutputContainsXmlns");
					this.OnOutputContainsXmlnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableHttpAuth", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string EnableHttpAuth
		{
			get
			{
				return this._EnableHttpAuth;
			}
			set
			{
				if ((this._EnableHttpAuth != value))
				{
					this.OnEnableHttpAuthChanging(value);
					this.SendPropertyChanging();
					this._EnableHttpAuth = value;
					this.SendPropertyChanged("EnableHttpAuth");
					this.OnEnableHttpAuthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsernameHttpAuth", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string UsernameHttpAuth
		{
			get
			{
				return this._UsernameHttpAuth;
			}
			set
			{
				if ((this._UsernameHttpAuth != value))
				{
					this.OnUsernameHttpAuthChanging(value);
					this.SendPropertyChanging();
					this._UsernameHttpAuth = value;
					this.SendPropertyChanged("UsernameHttpAuth");
					this.OnUsernameHttpAuthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHttpAuth", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string PasswordHttpAuth
		{
			get
			{
				return this._PasswordHttpAuth;
			}
			set
			{
				if ((this._PasswordHttpAuth != value))
				{
					this.OnPasswordHttpAuthChanging(value);
					this.SendPropertyChanging();
					this._PasswordHttpAuth = value;
					this.SendPropertyChanged("PasswordHttpAuth");
					this.OnPasswordHttpAuthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvUrl", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AdvUrl
		{
			get
			{
				return this._AdvUrl;
			}
			set
			{
				if ((this._AdvUrl != value))
				{
					this.OnAdvUrlChanging(value);
					this.SendPropertyChanging();
					this._AdvUrl = value;
					this.SendPropertyChanged("AdvUrl");
					this.OnAdvUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvTimeout", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AdvTimeout
		{
			get
			{
				return this._AdvTimeout;
			}
			set
			{
				if ((this._AdvTimeout != value))
				{
					this.OnAdvTimeoutChanging(value);
					this.SendPropertyChanging();
					this._AdvTimeout = value;
					this.SendPropertyChanged("AdvTimeout");
					this.OnAdvTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvUseCookieContainer", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AdvUseCookieContainer
		{
			get
			{
				return this._AdvUseCookieContainer;
			}
			set
			{
				if ((this._AdvUseCookieContainer != value))
				{
					this.OnAdvUseCookieContainerChanging(value);
					this.SendPropertyChanging();
					this._AdvUseCookieContainer = value;
					this.SendPropertyChanged("AdvUseCookieContainer");
					this.OnAdvUseCookieContainerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvProtocol", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AdvProtocol
		{
			get
			{
				return this._AdvProtocol;
			}
			set
			{
				if ((this._AdvProtocol != value))
				{
					this.OnAdvProtocolChanging(value);
					this.SendPropertyChanging();
					this._AdvProtocol = value;
					this.SendPropertyChanged("AdvProtocol");
					this.OnAdvProtocolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECTS_WS_INVOKE", Storage="_OBJECTS", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public OBJECTS OBJECTS
		{
			get
			{
				return this._OBJECTS.Entity;
			}
			set
			{
				OBJECTS previousValue = this._OBJECTS.Entity;
				if (((previousValue != value) 
							|| (this._OBJECTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECTS.Entity = null;
						previousValue.WS_INVOKE = null;
					}
					this._OBJECTS.Entity = value;
					if ((value != null))
					{
						value.WS_INVOKE = this;
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(System.Guid);
					}
					this.SendPropertyChanged("OBJECTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Fn_SplitStringResult
	{
		
		private string _Value;
		
		private System.Nullable<int> _Index;
		
		public Fn_SplitStringResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(2000)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Index", DbType="Int")]
		public System.Nullable<int> Index
		{
			get
			{
				return this._Index;
			}
			set
			{
				if ((this._Index != value))
				{
					this._Index = value;
				}
			}
		}
	}
	
	public partial class _Microsoft_SystemCenter_Orchestrator_Runtime___CancelJob_Result
	{
		
		private System.Nullable<System.Guid> _Id;
		
		private System.Nullable<System.Guid> _RunbookId;
		
		private string _Parameters;
		
		private string _RunbookServers;
		
		private System.Nullable<System.Guid> _RunbookServerId;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private System.Nullable<bool> _ParentIsWaiting;
		
		private string _Status;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationTime;
		
		private string _LastModifiedBy;
		
		private System.Nullable<System.DateTime> _LastModifiedTime;
		
		public _Microsoft_SystemCenter_Orchestrator_Runtime___CancelJob_Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RunbookId
		{
			get
			{
				return this._RunbookId;
			}
			set
			{
				if ((this._RunbookId != value))
				{
					this._RunbookId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameters", DbType="NVarChar(MAX)")]
		public string Parameters
		{
			get
			{
				return this._Parameters;
			}
			set
			{
				if ((this._Parameters != value))
				{
					this._Parameters = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookServers", DbType="NVarChar(2000)")]
		public string RunbookServers
		{
			get
			{
				return this._RunbookServers;
			}
			set
			{
				if ((this._RunbookServers != value))
				{
					this._RunbookServers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookServerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RunbookServerId
		{
			get
			{
				return this._RunbookServerId;
			}
			set
			{
				if ((this._RunbookServerId != value))
				{
					this._RunbookServerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentIsWaiting", DbType="Bit")]
		public System.Nullable<bool> ParentIsWaiting
		{
			get
			{
				return this._ParentIsWaiting;
			}
			set
			{
				if ((this._ParentIsWaiting != value))
				{
					this._ParentIsWaiting = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(64)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this._CreationTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="NVarChar(50)")]
		public string LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this._LastModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedTime
		{
			get
			{
				return this._LastModifiedTime;
			}
			set
			{
				if ((this._LastModifiedTime != value))
				{
					this._LastModifiedTime = value;
				}
			}
		}
	}
	
	public partial class _Microsoft_SystemCenter_Orchestrator_Runtime___CreateJob_Result
	{
		
		private System.Nullable<System.Guid> _Id;
		
		private System.Nullable<System.Guid> _RunbookId;
		
		private string _Parameters;
		
		private string _RunbookServers;
		
		private System.Nullable<System.Guid> _RunbookServerId;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private System.Nullable<bool> _ParentIsWaiting;
		
		private string _Status;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationTime;
		
		private string _LastModifiedBy;
		
		private System.Nullable<System.DateTime> _LastModifiedTime;
		
		public _Microsoft_SystemCenter_Orchestrator_Runtime___CreateJob_Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RunbookId
		{
			get
			{
				return this._RunbookId;
			}
			set
			{
				if ((this._RunbookId != value))
				{
					this._RunbookId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameters", DbType="NVarChar(MAX)")]
		public string Parameters
		{
			get
			{
				return this._Parameters;
			}
			set
			{
				if ((this._Parameters != value))
				{
					this._Parameters = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookServers", DbType="NVarChar(2000)")]
		public string RunbookServers
		{
			get
			{
				return this._RunbookServers;
			}
			set
			{
				if ((this._RunbookServers != value))
				{
					this._RunbookServers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookServerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RunbookServerId
		{
			get
			{
				return this._RunbookServerId;
			}
			set
			{
				if ((this._RunbookServerId != value))
				{
					this._RunbookServerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentIsWaiting", DbType="Bit")]
		public System.Nullable<bool> ParentIsWaiting
		{
			get
			{
				return this._ParentIsWaiting;
			}
			set
			{
				if ((this._ParentIsWaiting != value))
				{
					this._ParentIsWaiting = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(64)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this._CreationTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="NVarChar(50)")]
		public string LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this._LastModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedTime
		{
			get
			{
				return this._LastModifiedTime;
			}
			set
			{
				if ((this._LastModifiedTime != value))
				{
					this._LastModifiedTime = value;
				}
			}
		}
	}
	
	public partial class _Microsoft_SystemCenter_Orchestrator_Statistics_Internal___GetStatisticsSummary_Result
	{
		
		private System.Nullable<System.Guid> _Id;
		
		private System.Nullable<System.Guid> _RunbookId;
		
		private string _RunbookPath;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private System.Nullable<System.Guid> _ResourceId;
		
		private string _ResourceType;
		
		private string _Counter;
		
		private string _Criteria;
		
		private System.Nullable<int> _Value;
		
		public _Microsoft_SystemCenter_Orchestrator_Statistics_Internal___GetStatisticsSummary_Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RunbookId
		{
			get
			{
				return this._RunbookId;
			}
			set
			{
				if ((this._RunbookId != value))
				{
					this._RunbookId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunbookPath", DbType="NVarChar(4000)")]
		public string RunbookPath
		{
			get
			{
				return this._RunbookPath;
			}
			set
			{
				if ((this._RunbookPath != value))
				{
					this._RunbookPath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this._StartTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this._EndTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ResourceId
		{
			get
			{
				return this._ResourceId;
			}
			set
			{
				if ((this._ResourceId != value))
				{
					this._ResourceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceType", DbType="VarChar(6)")]
		public string ResourceType
		{
			get
			{
				return this._ResourceType;
			}
			set
			{
				if ((this._ResourceType != value))
				{
					this._ResourceType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Counter", DbType="VarChar(8)")]
		public string Counter
		{
			get
			{
				return this._Counter;
			}
			set
			{
				if ((this._Counter != value))
				{
					this._Counter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Criteria", DbType="NVarChar(64)")]
		public string Criteria
		{
			get
			{
				return this._Criteria;
			}
			set
			{
				if ((this._Criteria != value))
				{
					this._Criteria = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int")]
		public System.Nullable<int> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
